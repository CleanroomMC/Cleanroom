--- before/net/minecraft/world/WorldProviderEnd.java
+++ after/net/minecraft/world/WorldProviderEnd.java
@@ -17,25 +17,18 @@
 {
     private DragonFightManager dragonFightManager;
 
-    @Override
     public void init()
     {
         this.biomeProvider = new BiomeProviderSingle(Biomes.SKY);
-        NBTTagCompound nbttagcompound = this.world.getWorldInfo().getDimensionData(DimensionType.THE_END);
-        this.dragonFightManager = this.world instanceof WorldServer
-                              ? new DragonFightManager((WorldServer)this.world, nbttagcompound.getCompoundTag("DragonFight"))
-                              : null;
+        NBTTagCompound nbttagcompound = this.world.getWorldInfo().getDimensionData(this.world.provider.getDimension());
+        this.dragonFightManager = this.world instanceof WorldServer ? new DragonFightManager((WorldServer)this.world, nbttagcompound.getCompoundTag("DragonFight")) : null;
     }
 
-    @Override
     public IChunkGenerator createChunkGenerator()
     {
-        return new ChunkGeneratorEnd(
-                   this.world, this.world.getWorldInfo().isMapFeaturesEnabled(), this.world.getSeed(), this.getSpawnCoordinate()
-               );
+        return new ChunkGeneratorEnd(this.world, this.world.getWorldInfo().isMapFeaturesEnabled(), this.world.getSeed(), this.getSpawnCoordinate());
     }
 
-    @Override
     public float calculateCelestialAngle(long worldTime, float partialTicks)
     {
         return 0.0F;
@@ -43,86 +36,74 @@
 
     @Nullable
     @SideOnly(Side.CLIENT)
-    @Override
     public float[] calcSunriseSunsetColors(float celestialAngle, float partialTicks)
     {
         return null;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public Vec3d getFogColor(float p_76562_1_, float p_76562_2_)
     {
         int i = 10518688;
-        float f = MathHelper.cos(p_76562_1_ * (float)(Math.PI * 2)) * 2.0F + 0.5F;
+        float f = MathHelper.cos(p_76562_1_ * ((float)Math.PI * 2F)) * 2.0F + 0.5F;
         f = MathHelper.clamp(f, 0.0F, 1.0F);
         float f1 = 0.627451F;
         float f2 = 0.5019608F;
         float f3 = 0.627451F;
-        f1 *= f * 0.0F + 0.15F;
-        f2 *= f * 0.0F + 0.15F;
-        f3 *= f * 0.0F + 0.15F;
+        f1 = f1 * (f * 0.0F + 0.15F);
+        f2 = f2 * (f * 0.0F + 0.15F);
+        f3 = f3 * (f * 0.0F + 0.15F);
         return new Vec3d((double)f1, (double)f2, (double)f3);
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public boolean isSkyColored()
     {
         return false;
     }
 
-    @Override
     public boolean canRespawnHere()
     {
         return false;
     }
 
-    @Override
     public boolean isSurfaceWorld()
     {
         return false;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public float getCloudHeight()
     {
         return 8.0F;
     }
 
-    @Override
     public boolean canCoordinateBeSpawn(int x, int z)
     {
         return this.world.getGroundAboveSeaLevel(new BlockPos(x, 0, z)).getMaterial().blocksMovement();
     }
 
-    @Override
     public BlockPos getSpawnCoordinate()
     {
         return new BlockPos(100, 50, 0);
     }
 
-    @Override
     public int getAverageGroundLevel()
     {
         return 50;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public boolean doesXZShowFog(int x, int z)
     {
         return false;
     }
 
-    @Override
     public DimensionType getDimensionType()
     {
         return DimensionType.THE_END;
     }
 
-    @Override
     public void onWorldSave()
     {
         NBTTagCompound nbttagcompound = new NBTTagCompound();
@@ -132,10 +113,9 @@
             nbttagcompound.setTag("DragonFight", this.dragonFightManager.getCompound());
         }
 
-        this.world.getWorldInfo().setDimensionData(DimensionType.THE_END, nbttagcompound);
+        this.world.getWorldInfo().setDimensionData(this.world.provider.getDimension(), nbttagcompound);
     }
 
-    @Override
     public void onWorldUpdateEntities()
     {
         if (this.dragonFightManager != null)
@@ -148,5 +128,23 @@
     public DragonFightManager getDragonFightManager()
     {
         return this.dragonFightManager;
+    }
+
+    @Override
+    public void onPlayerAdded(net.minecraft.entity.player.EntityPlayerMP player)
+    {
+        if (this.dragonFightManager != null)
+        {
+            this.dragonFightManager.addPlayer(player);
+        }
+    }
+
+    @Override
+    public void onPlayerRemoved(net.minecraft.entity.player.EntityPlayerMP player)
+    {
+        if (this.dragonFightManager != null)
+        {
+            this.dragonFightManager.removePlayer(player);
+        }
     }
 }
