--- before/net/minecraft/world/gen/structure/MapGenStronghold.java
+++ after/net/minecraft/world/gen/structure/MapGenStronghold.java
@@ -1,6 +1,7 @@
 package net.minecraft.world.gen.structure;
 
 import com.google.common.collect.Lists;
+import it.unimi.dsi.fastutil.objects.ObjectIterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Random;
@@ -15,17 +16,28 @@
 {
     public final List<Biome> allowedBiomes;
     private boolean ranBiomeCheck;
-    private ChunkPos[] structureCoords = new ChunkPos[128];
-    private double distance = 32.0;
-    private int spread = 3;
+    private ChunkPos[] structureCoords;
+    private double distance;
+    private int spread;
 
     public MapGenStronghold()
     {
-        this.allowedBiomes = Lists.newArrayList();
+        this.structureCoords = new ChunkPos[128];
+        this.distance = 32.0D;
+        this.spread = 3;
+        this.allowedBiomes = Lists.<Biome>newArrayList();
 
         for (Biome biome : Biome.REGISTRY)
         {
-            if (biome != null && biome.getBaseHeight() > 0.0F)
+            if (biome != null && biome.getBaseHeight() > 0.0F && !net.minecraftforge.common.BiomeManager.strongHoldBiomesBlackList.contains(biome))
+            {
+                this.allowedBiomes.add(biome);
+            }
+        }
+
+        for (Biome biome : net.minecraftforge.common.BiomeManager.strongHoldBiomes)
+        {
+            if (!this.allowedBiomes.contains(biome))
             {
                 this.allowedBiomes.add(biome);
             }
@@ -38,28 +50,26 @@
 
         for (Entry<String, String> entry : p_i2068_1_.entrySet())
         {
-            if (entry.getKey().equals("distance"))
+            if (((String)entry.getKey()).equals("distance"))
             {
-                this.distance = MathHelper.getDouble(entry.getValue(), this.distance, 1.0);
+                this.distance = MathHelper.getDouble(entry.getValue(), this.distance, 1.0D);
             }
-            else if (entry.getKey().equals("count"))
+            else if (((String)entry.getKey()).equals("count"))
             {
                 this.structureCoords = new ChunkPos[MathHelper.getInt(entry.getValue(), this.structureCoords.length, 1)];
             }
-            else if (entry.getKey().equals("spread"))
+            else if (((String)entry.getKey()).equals("spread"))
             {
                 this.spread = MathHelper.getInt(entry.getValue(), this.spread, 1);
             }
         }
     }
 
-    @Override
     public String getStructureName()
     {
         return "Stronghold";
     }
 
-    @Override
     public BlockPos getNearestStructurePos(World worldIn, BlockPos pos, boolean findUnexplored)
     {
         if (!this.ranBiomeCheck)
@@ -92,7 +102,6 @@
         return blockpos;
     }
 
-    @Override
     protected boolean canSpawnStructureAtCoords(int chunkX, int chunkZ)
     {
         if (!this.ranBiomeCheck)
@@ -116,9 +125,12 @@
     {
         this.initializeStructureData(this.world);
         int i = 0;
+        ObjectIterator lvt_2_1_ = this.structureMap.values().iterator();
 
-        for (StructureStart structurestart : this.structureMap.values())
+        while (lvt_2_1_.hasNext())
         {
+            StructureStart structurestart = (StructureStart)lvt_2_1_.next();
+
             if (i < this.structureCoords.length)
             {
                 this.structureCoords[i++] = new ChunkPos(structurestart.getChunkPosX(), structurestart.getChunkPosZ());
@@ -127,16 +139,16 @@
 
         Random random = new Random();
         random.setSeed(this.world.getSeed());
-        double d1 = random.nextDouble() * Math.PI * 2.0;
+        double d1 = random.nextDouble() * Math.PI * 2.0D;
         int j = 0;
         int k = 0;
         int l = this.structureMap.size();
 
         if (l < this.structureCoords.length)
         {
-            for (int i1 = 0; i1 < this.structureCoords.length; i1++)
+            for (int i1 = 0; i1 < this.structureCoords.length; ++i1)
             {
-                double d0 = 4.0 * this.distance + this.distance * (double)j * 6.0 + (random.nextDouble() - 0.5) * this.distance * 2.5;
+                double d0 = 4.0D * this.distance + this.distance * (double)j * 6.0D + (random.nextDouble() - 0.5D) * this.distance * 2.5D;
                 int j1 = (int)Math.round(Math.cos(d1) * d0);
                 int k1 = (int)Math.round(Math.sin(d1) * d0);
                 BlockPos blockpos = this.world.getBiomeProvider().findBiomePosition((j1 << 4) + 8, (k1 << 4) + 8, 112, this.allowedBiomes, random);
@@ -152,31 +164,28 @@
                     this.structureCoords[i1] = new ChunkPos(j1, k1);
                 }
 
-                d1 += (Math.PI * 2) / (double)this.spread;
+                d1 += (Math.PI * 2D) / (double)this.spread;
+                ++k;
 
-                if (++k == this.spread)
+                if (k == this.spread)
                 {
-                    j++;
+                    ++j;
                     k = 0;
-                    this.spread = this.spread + 2 * this.spread / (j + 1);
+                    this.spread += 2 * this.spread / (j + 1);
                     this.spread = Math.min(this.spread, this.structureCoords.length - i1);
-                    d1 += random.nextDouble() * Math.PI * 2.0;
+                    d1 += random.nextDouble() * Math.PI * 2.0D;
                 }
             }
         }
     }
 
-    @Override
     protected StructureStart getStructureStart(int chunkX, int chunkZ)
     {
-        MapGenStronghold.Start mapgenstronghold$start = new MapGenStronghold.Start(this.world, this.rand, chunkX, chunkZ);
+        MapGenStronghold.Start mapgenstronghold$start;
 
-        while (
-            mapgenstronghold$start.getComponents().isEmpty()
-            || ((StructureStrongholdPieces.Stairs2)mapgenstronghold$start.getComponents().get(0)).strongholdPortalRoom == null
-        )
+        for (mapgenstronghold$start = new MapGenStronghold.Start(this.world, this.rand, chunkX, chunkZ); mapgenstronghold$start.getComponents().isEmpty() || ((StructureStrongholdPieces.Stairs2)mapgenstronghold$start.getComponents().get(0)).strongholdPortalRoom == null; mapgenstronghold$start = new MapGenStronghold.Start(this.world, this.rand, chunkX, chunkZ))
         {
-            mapgenstronghold$start = new MapGenStronghold.Start(this.world, this.rand, chunkX, chunkZ);
+            ;
         }
 
         return mapgenstronghold$start;
@@ -192,9 +201,7 @@
             {
                 super(chunkX, chunkZ);
                 StructureStrongholdPieces.prepareStructurePieces();
-                StructureStrongholdPieces.Stairs2 structurestrongholdpieces$stairs2 = new StructureStrongholdPieces.Stairs2(
-                    0, random, (chunkX << 4) + 2, (chunkZ << 4) + 2
-                );
+                StructureStrongholdPieces.Stairs2 structurestrongholdpieces$stairs2 = new StructureStrongholdPieces.Stairs2(0, random, (chunkX << 4) + 2, (chunkZ << 4) + 2);
                 this.components.add(structurestrongholdpieces$stairs2);
                 structurestrongholdpieces$stairs2.buildComponent(structurestrongholdpieces$stairs2, this.components, random);
                 List<StructureComponent> list = structurestrongholdpieces$stairs2.pendingChildren;
