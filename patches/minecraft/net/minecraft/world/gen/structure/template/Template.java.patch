--- before/net/minecraft/world/gen/structure/template/Template.java
+++ after/net/minecraft/world/gen/structure/template/Template.java
@@ -38,8 +38,8 @@
 
 public class Template
 {
-    private final List<Template.BlockInfo> blocks = Lists.newArrayList();
-    private final List<Template.EntityInfo> entities = Lists.newArrayList();
+    private final List<Template.BlockInfo> blocks = Lists.<Template.BlockInfo>newArrayList();
+    private final List<Template.EntityInfo> entities = Lists.<Template.EntityInfo>newArrayList();
     private BlockPos size = BlockPos.ORIGIN;
     private String author = "?";
 
@@ -63,19 +63,11 @@
         if (size.getX() >= 1 && size.getY() >= 1 && size.getZ() >= 1)
         {
             BlockPos blockpos = startPos.add(size).add(-1, -1, -1);
-            List<Template.BlockInfo> list = Lists.newArrayList();
-            List<Template.BlockInfo> list1 = Lists.newArrayList();
-            List<Template.BlockInfo> list2 = Lists.newArrayList();
-            BlockPos blockpos1 = new BlockPos(
-                Math.min(startPos.getX(), blockpos.getX()),
-                Math.min(startPos.getY(), blockpos.getY()),
-                Math.min(startPos.getZ(), blockpos.getZ())
-            );
-            BlockPos blockpos2 = new BlockPos(
-                Math.max(startPos.getX(), blockpos.getX()),
-                Math.max(startPos.getY(), blockpos.getY()),
-                Math.max(startPos.getZ(), blockpos.getZ())
-            );
+            List<Template.BlockInfo> list = Lists.<Template.BlockInfo>newArrayList();
+            List<Template.BlockInfo> list1 = Lists.<Template.BlockInfo>newArrayList();
+            List<Template.BlockInfo> list2 = Lists.<Template.BlockInfo>newArrayList();
+            BlockPos blockpos1 = new BlockPos(Math.min(startPos.getX(), blockpos.getX()), Math.min(startPos.getY(), blockpos.getY()), Math.min(startPos.getZ(), blockpos.getZ()));
+            BlockPos blockpos2 = new BlockPos(Math.max(startPos.getX(), blockpos.getX()), Math.max(startPos.getY(), blockpos.getY()), Math.max(startPos.getZ(), blockpos.getZ()));
             this.size = size;
 
             for (BlockPos.MutableBlockPos blockpos$mutableblockpos : BlockPos.getAllInBoxMutable(blockpos1, blockpos2))
@@ -97,11 +89,11 @@
                     }
                     else if (!iblockstate.isFullBlock() && !iblockstate.isFullCube())
                     {
-                        list2.add(new Template.BlockInfo(blockpos3, iblockstate, null));
+                        list2.add(new Template.BlockInfo(blockpos3, iblockstate, (NBTTagCompound)null));
                     }
                     else
                     {
-                        list.add(new Template.BlockInfo(blockpos3, iblockstate, null));
+                        list.add(new Template.BlockInfo(blockpos3, iblockstate, (NBTTagCompound)null));
                     }
                 }
             }
@@ -124,7 +116,7 @@
 
     private void takeEntitiesFromWorld(World worldIn, BlockPos startPos, BlockPos endPos)
     {
-        List<Entity> list = worldIn.getEntitiesWithinAABB(Entity.class, new AxisAlignedBB(startPos, endPos), new Predicate<Entity>()
+        List<Entity> list = worldIn.<Entity>getEntitiesWithinAABB(Entity.class, new AxisAlignedBB(startPos, endPos), new Predicate<Entity>()
         {
             public boolean apply(@Nullable Entity p_apply_1_)
             {
@@ -135,11 +127,7 @@
 
         for (Entity entity : list)
         {
-            Vec3d vec3d = new Vec3d(
-                entity.posX - (double)startPos.getX(),
-                entity.posY - (double)startPos.getY(),
-                entity.posZ - (double)startPos.getZ()
-            );
+            Vec3d vec3d = new Vec3d(entity.posX - (double)startPos.getX(), entity.posY - (double)startPos.getY(), entity.posZ - (double)startPos.getZ());
             NBTTagCompound nbttagcompound = new NBTTagCompound();
             entity.writeToNBTOptional(nbttagcompound);
             BlockPos blockpos;
@@ -159,7 +147,7 @@
 
     public Map<BlockPos, String> getDataBlocks(BlockPos pos, PlacementSettings placementIn)
     {
-        Map<BlockPos, String> map = Maps.newHashMap();
+        Map<BlockPos, String> map = Maps.<BlockPos, String>newHashMap();
         StructureBoundingBox structureboundingbox = placementIn.getBoundingBox();
 
         for (Template.BlockInfo template$blockinfo : this.blocks)
@@ -215,10 +203,7 @@
 
     public void addBlocksToWorld(World worldIn, BlockPos pos, @Nullable ITemplateProcessor templateProcessor, PlacementSettings placementIn, int flags)
     {
-        if ((!this.blocks.isEmpty() || !placementIn.getIgnoreEntities() && !this.entities.isEmpty())
-                && this.size.getX() >= 1
-                && this.size.getY() >= 1
-                && this.size.getZ() >= 1)
+        if ((!this.blocks.isEmpty() || !placementIn.getIgnoreEntities() && !this.entities.isEmpty()) && this.size.getX() >= 1 && this.size.getY() >= 1 && this.size.getZ() >= 1)
         {
             Block block = placementIn.getReplacedBlock();
             StructureBoundingBox structureboundingbox = placementIn.getBoundingBox();
@@ -226,17 +211,15 @@
             for (Template.BlockInfo template$blockinfo : this.blocks)
             {
                 BlockPos blockpos = transformedBlockPos(placementIn, template$blockinfo.pos).add(pos);
-                Template.BlockInfo template$blockinfo1 = templateProcessor != null
-                        ? templateProcessor.processBlock(worldIn, blockpos, template$blockinfo)
-                        : template$blockinfo;
+                // Forge: skip processing blocks outside BB to prevent cascading worldgen issues
+                if (structureboundingbox != null && !structureboundingbox.isVecInside(blockpos)) continue;
+                Template.BlockInfo template$blockinfo1 = templateProcessor != null ? templateProcessor.processBlock(worldIn, blockpos, template$blockinfo) : template$blockinfo;
 
                 if (template$blockinfo1 != null)
                 {
                     Block block1 = template$blockinfo1.blockState.getBlock();
 
-                    if ((block == null || block != block1)
-                            && (!placementIn.getIgnoreStructureBlock() || block1 != Blocks.STRUCTURE_BLOCK)
-                            && (structureboundingbox == null || structureboundingbox.isVecInside(blockpos)))
+                    if ((block == null || block != block1) && (!placementIn.getIgnoreStructureBlock() || block1 != Blocks.STRUCTURE_BLOCK) && (structureboundingbox == null || structureboundingbox.isVecInside(blockpos)))
                     {
                         IBlockState iblockstate = template$blockinfo1.blockState.withMirror(placementIn.getMirror());
                         IBlockState iblockstate1 = iblockstate.withRotation(placementIn.getRotation());
@@ -327,7 +310,7 @@
                 {
                     entity = EntityList.createEntityFromNBT(nbttagcompound, worldIn);
                 }
-                catch (Exception exception)
+                catch (Exception var15)
                 {
                     entity = null;
                 }
@@ -335,7 +318,7 @@
                 if (entity != null)
                 {
                     float f = entity.getMirroredYaw(mirrorIn);
-                    f += entity.rotationYaw - entity.getRotatedYaw(rotationIn);
+                    f = f + (entity.rotationYaw - entity.getRotatedYaw(rotationIn));
                     entity.setLocationAndAngles(vec3d1.x, vec3d1.y, vec3d1.z, f, entity.rotationPitch);
                     worldIn.spawnEntity(entity);
                 }
@@ -397,10 +380,10 @@
         switch (mirrorIn)
         {
             case LEFT_RIGHT:
-                d2 = 1.0 - d2;
+                d2 = 1.0D - d2;
                 break;
             case FRONT_BACK:
-                d0 = 1.0 - d0;
+                d0 = 1.0D - d0;
                 break;
             default:
                 flag = false;
@@ -409,11 +392,11 @@
         switch (rotationIn)
         {
             case COUNTERCLOCKWISE_90:
-                return new Vec3d(d2, d1, 1.0 - d0);
+                return new Vec3d(d2, d1, 1.0D - d0);
             case CLOCKWISE_90:
-                return new Vec3d(1.0 - d2, d1, d0);
+                return new Vec3d(1.0D - d2, d1, d0);
             case CLOCKWISE_180:
-                return new Vec3d(1.0 - d0, d1, 1.0 - d2);
+                return new Vec3d(1.0D - d0, d1, 1.0D - d2);
             default:
                 return flag ? new Vec3d(d0, d1, d2) : vec;
         }
@@ -426,8 +409,8 @@
 
     public static BlockPos getZeroPositionWithTransform(BlockPos p_191157_0_, Mirror p_191157_1_, Rotation p_191157_2_, int p_191157_3_, int p_191157_4_)
     {
-        p_191157_3_--;
-        p_191157_4_--;
+        --p_191157_3_;
+        --p_191157_4_;
         int i = p_191157_1_ == Mirror.FRONT_BACK ? p_191157_3_ : 0;
         int j = p_191157_1_ == Mirror.LEFT_RIGHT ? p_191157_4_ : 0;
         BlockPos blockpos = p_191157_0_;
@@ -454,14 +437,13 @@
     {
         fixer.registerWalker(FixTypes.STRUCTURE, new IDataWalker()
         {
-            @Override
             public NBTTagCompound process(IDataFixer fixer, NBTTagCompound compound, int versionIn)
             {
                 if (compound.hasKey("entities", 9))
                 {
                     NBTTagList nbttaglist = compound.getTagList("entities", 10);
 
-                    for (int i = 0; i < nbttaglist.tagCount(); i++)
+                    for (int i = 0; i < nbttaglist.tagCount(); ++i)
                     {
                         NBTTagCompound nbttagcompound = (NBTTagCompound)nbttaglist.get(i);
 
@@ -476,7 +458,7 @@
                 {
                     NBTTagList nbttaglist1 = compound.getTagList("blocks", 10);
 
-                    for (int j = 0; j < nbttaglist1.tagCount(); j++)
+                    for (int j = 0; j < nbttaglist1.tagCount(); ++j)
                     {
                         NBTTagCompound nbttagcompound1 = (NBTTagCompound)nbttaglist1.get(j);
 
@@ -500,14 +482,7 @@
         for (Template.BlockInfo template$blockinfo : this.blocks)
         {
             NBTTagCompound nbttagcompound = new NBTTagCompound();
-            nbttagcompound.setTag(
-                "pos",
-                this.writeInts(
-                    template$blockinfo.pos.getX(),
-                    template$blockinfo.pos.getY(),
-                    template$blockinfo.pos.getZ()
-                )
-            );
+            nbttagcompound.setTag("pos", this.writeInts(template$blockinfo.pos.getX(), template$blockinfo.pos.getY(), template$blockinfo.pos.getZ()));
             nbttagcompound.setInteger("state", template$basicpalette.idFor(template$blockinfo.blockState));
 
             if (template$blockinfo.tileentityData != null)
@@ -523,22 +498,8 @@
         for (Template.EntityInfo template$entityinfo : this.entities)
         {
             NBTTagCompound nbttagcompound1 = new NBTTagCompound();
-            nbttagcompound1.setTag(
-                "pos",
-                this.writeDoubles(
-                    template$entityinfo.pos.x,
-                    template$entityinfo.pos.y,
-                    template$entityinfo.pos.z
-                )
-            );
-            nbttagcompound1.setTag(
-                "blockPos",
-                this.writeInts(
-                    template$entityinfo.blockPos.getX(),
-                    template$entityinfo.blockPos.getY(),
-                    template$entityinfo.blockPos.getZ()
-                )
-            );
+            nbttagcompound1.setTag("pos", this.writeDoubles(template$entityinfo.pos.x, template$entityinfo.pos.y, template$entityinfo.pos.z));
+            nbttagcompound1.setTag("blockPos", this.writeInts(template$entityinfo.blockPos.getX(), template$entityinfo.blockPos.getY(), template$entityinfo.blockPos.getZ()));
 
             if (template$entityinfo.entityData != null)
             {
@@ -555,12 +516,11 @@
             nbttaglist2.appendTag(NBTUtil.writeBlockState(new NBTTagCompound(), iblockstate));
         }
 
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().getDataFixer().writeVersionData(nbt); //Moved up for MC updating reasons.
         nbt.setTag("palette", nbttaglist2);
         nbt.setTag("blocks", nbttaglist);
         nbt.setTag("entities", nbttaglist1);
-        nbt.setTag(
-            "size", this.writeInts(this.size.getX(), this.size.getY(), this.size.getZ())
-        );
+        nbt.setTag("size", this.writeInts(this.size.getX(), this.size.getY(), this.size.getZ()));
         nbt.setString("author", this.author);
         nbt.setInteger("DataVersion", 1343);
         return nbt;
@@ -576,14 +536,14 @@
         Template.BasicPalette template$basicpalette = new Template.BasicPalette();
         NBTTagList nbttaglist1 = compound.getTagList("palette", 10);
 
-        for (int i = 0; i < nbttaglist1.tagCount(); i++)
+        for (int i = 0; i < nbttaglist1.tagCount(); ++i)
         {
             template$basicpalette.addMapping(NBTUtil.readBlockState(nbttaglist1.getCompoundTagAt(i)), i);
         }
 
         NBTTagList nbttaglist3 = compound.getTagList("blocks", 10);
 
-        for (int j = 0; j < nbttaglist3.tagCount(); j++)
+        for (int j = 0; j < nbttaglist3.tagCount(); ++j)
         {
             NBTTagCompound nbttagcompound = nbttaglist3.getCompoundTagAt(j);
             NBTTagList nbttaglist2 = nbttagcompound.getTagList("pos", 3);
@@ -605,7 +565,7 @@
 
         NBTTagList nbttaglist4 = compound.getTagList("entities", 10);
 
-        for (int k = 0; k < nbttaglist4.tagCount(); k++)
+        for (int k = 0; k < nbttaglist4.tagCount(); ++k)
         {
             NBTTagCompound nbttagcompound3 = nbttaglist4.getCompoundTagAt(k);
             NBTTagList nbttaglist5 = nbttagcompound3.getTagList("pos", 6);
@@ -648,11 +608,12 @@
     static class BasicPalette implements Iterable<IBlockState>
         {
             public static final IBlockState DEFAULT_BLOCK_STATE = Blocks.AIR.getDefaultState();
-            final ObjectIntIdentityMap<IBlockState> ids = new ObjectIntIdentityMap<>(16);
+            final ObjectIntIdentityMap<IBlockState> ids;
             private int lastId;
 
             private BasicPalette()
             {
+                this.ids = new ObjectIntIdentityMap<IBlockState>(16);
             }
 
             public int idFor(IBlockState state)
@@ -675,7 +636,6 @@
                 return iblockstate == null ? DEFAULT_BLOCK_STATE : iblockstate;
             }
 
-            @Override
             public Iterator<IBlockState> iterator()
             {
                 return this.ids.iterator();
