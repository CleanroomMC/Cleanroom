--- before/net/minecraft/world/gen/structure/StructureVillagePieces.java
+++ after/net/minecraft/world/gen/structure/StructureVillagePieces.java
@@ -18,6 +18,7 @@
 import net.minecraft.block.BlockTorch;
 import net.minecraft.block.material.Material;
 import net.minecraft.block.state.IBlockState;
+import net.minecraft.entity.IEntityLivingData;
 import net.minecraft.entity.monster.EntityZombieVillager;
 import net.minecraft.entity.passive.EntityVillager;
 import net.minecraft.init.Biomes;
@@ -57,41 +58,22 @@
 
     public static List<StructureVillagePieces.PieceWeight> getStructureVillageWeightedPieceList(Random random, int size)
     {
-        List<StructureVillagePieces.PieceWeight> list = Lists.newArrayList();
-        list.add(
-            new StructureVillagePieces.PieceWeight(
-                StructureVillagePieces.House4Garden.class, 4, MathHelper.getInt(random, 2 + size, 4 + size * 2)
-            )
-        );
-        list.add(
-            new StructureVillagePieces.PieceWeight(StructureVillagePieces.Church.class, 20, MathHelper.getInt(random, 0 + size, 1 + size))
-        );
-        list.add(
-            new StructureVillagePieces.PieceWeight(StructureVillagePieces.House1.class, 20, MathHelper.getInt(random, 0 + size, 2 + size))
-        );
-        list.add(
-            new StructureVillagePieces.PieceWeight(
-                StructureVillagePieces.WoodHut.class, 3, MathHelper.getInt(random, 2 + size, 5 + size * 3)
-            )
-        );
-        list.add(
-            new StructureVillagePieces.PieceWeight(StructureVillagePieces.Hall.class, 15, MathHelper.getInt(random, 0 + size, 2 + size))
-        );
-        list.add(
-            new StructureVillagePieces.PieceWeight(StructureVillagePieces.Field1.class, 3, MathHelper.getInt(random, 1 + size, 4 + size))
-        );
-        list.add(
-            new StructureVillagePieces.PieceWeight(StructureVillagePieces.Field2.class, 3, MathHelper.getInt(random, 2 + size, 4 + size * 2))
-        );
+        List<StructureVillagePieces.PieceWeight> list = Lists.<StructureVillagePieces.PieceWeight>newArrayList();
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.House4Garden.class, 4, MathHelper.getInt(random, 2 + size, 4 + size * 2)));
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.Church.class, 20, MathHelper.getInt(random, 0 + size, 1 + size)));
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.House1.class, 20, MathHelper.getInt(random, 0 + size, 2 + size)));
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.WoodHut.class, 3, MathHelper.getInt(random, 2 + size, 5 + size * 3)));
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.Hall.class, 15, MathHelper.getInt(random, 0 + size, 2 + size)));
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.Field1.class, 3, MathHelper.getInt(random, 1 + size, 4 + size)));
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.Field2.class, 3, MathHelper.getInt(random, 2 + size, 4 + size * 2)));
         list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.House2.class, 15, MathHelper.getInt(random, 0, 1 + size)));
-        list.add(
-            new StructureVillagePieces.PieceWeight(StructureVillagePieces.House3.class, 8, MathHelper.getInt(random, 0 + size, 3 + size * 2))
-        );
+        list.add(new StructureVillagePieces.PieceWeight(StructureVillagePieces.House3.class, 8, MathHelper.getInt(random, 0 + size, 3 + size * 2)));
+        net.minecraftforge.fml.common.registry.VillagerRegistry.addExtraVillageComponents(list, random, size);
         Iterator<StructureVillagePieces.PieceWeight> iterator = list.iterator();
 
         while (iterator.hasNext())
         {
-            if (iterator.next().villagePiecesLimit == 0)
+            if ((iterator.next()).villagePiecesLimit == 0)
             {
                 iterator.remove();
             }
@@ -107,8 +89,7 @@
 
         for (StructureVillagePieces.PieceWeight structurevillagepieces$pieceweight : p_75079_0_)
         {
-            if (structurevillagepieces$pieceweight.villagePiecesLimit > 0
-                    && structurevillagepieces$pieceweight.villagePiecesSpawned < structurevillagepieces$pieceweight.villagePiecesLimit)
+            if (structurevillagepieces$pieceweight.villagePiecesLimit > 0 && structurevillagepieces$pieceweight.villagePiecesSpawned < structurevillagepieces$pieceweight.villagePiecesLimit)
             {
                 flag = true;
             }
@@ -119,89 +100,56 @@
         return flag ? i : -1;
     }
 
-    private static StructureVillagePieces.Village findAndCreateComponentFactory(
-            StructureVillagePieces.Start start,
-            StructureVillagePieces.PieceWeight weight,
-            List<StructureComponent> structureComponents,
-            Random rand,
-            int structureMinX,
-            int structureMinY,
-            int structureMinZ,
-            EnumFacing facing,
-            int componentType
-        )
+    private static StructureVillagePieces.Village findAndCreateComponentFactory(StructureVillagePieces.Start start, StructureVillagePieces.PieceWeight weight, List<StructureComponent> structureComponents, Random rand, int structureMinX, int structureMinY, int structureMinZ, EnumFacing facing, int componentType)
     {
         Class <? extends StructureVillagePieces.Village > oclass = weight.villagePieceClass;
         StructureVillagePieces.Village structurevillagepieces$village = null;
 
         if (oclass == StructureVillagePieces.House4Garden.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.House4Garden.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.House4Garden.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.Church.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.Church.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.Church.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.House1.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.House1.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.House1.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.WoodHut.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.WoodHut.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.WoodHut.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.Hall.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.Hall.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.Hall.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.Field1.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.Field1.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.Field1.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.Field2.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.Field2.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.Field2.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.House2.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.House2.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.House2.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
         else if (oclass == StructureVillagePieces.House3.class)
         {
-            structurevillagepieces$village = StructureVillagePieces.House3.createPiece(
-                                                 start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                             );
+            structurevillagepieces$village = StructureVillagePieces.House3.createPiece(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
+        }
+        else
+        {
+            structurevillagepieces$village = net.minecraftforge.fml.common.registry.VillagerRegistry.getVillageComponent(weight, start , structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
         }
 
         return structurevillagepieces$village;
     }
 
-    private static StructureVillagePieces.Village generateComponent(
-            StructureVillagePieces.Start start,
-            List<StructureComponent> structureComponents,
-            Random rand,
-            int structureMinX,
-            int structureMinY,
-            int structureMinZ,
-            EnumFacing facing,
-            int componentType
-        )
+    private static StructureVillagePieces.Village generateComponent(StructureVillagePieces.Start start, List<StructureComponent> structureComponents, Random rand, int structureMinX, int structureMinY, int structureMinZ, EnumFacing facing, int componentType)
     {
         int i = updatePieceWeight(start.structureVillageWeightedPieceList);
 
@@ -215,7 +163,7 @@
 
             while (j < 5)
             {
-                j++;
+                ++j;
                 int k = rand.nextInt(i);
 
                 for (StructureVillagePieces.PieceWeight structurevillagepieces$pieceweight : start.structureVillageWeightedPieceList)
@@ -224,19 +172,16 @@
 
                     if (k < 0)
                     {
-                        if (!structurevillagepieces$pieceweight.canSpawnMoreVillagePiecesOfType(componentType)
-                                || structurevillagepieces$pieceweight == start.lastPlaced && start.structureVillageWeightedPieceList.size() > 1)
+                        if (!structurevillagepieces$pieceweight.canSpawnMoreVillagePiecesOfType(componentType) || structurevillagepieces$pieceweight == start.lastPlaced && start.structureVillageWeightedPieceList.size() > 1)
                         {
                             break;
                         }
 
-                        StructureVillagePieces.Village structurevillagepieces$village = findAndCreateComponentFactory(
-                                    start, structurevillagepieces$pieceweight, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType
-                                );
+                        StructureVillagePieces.Village structurevillagepieces$village = findAndCreateComponentFactory(start, structurevillagepieces$pieceweight, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType);
 
                         if (structurevillagepieces$village != null)
                         {
-                            structurevillagepieces$pieceweight.villagePiecesSpawned++;
+                            ++structurevillagepieces$pieceweight.villagePiecesSpawned;
                             start.lastPlaced = structurevillagepieces$pieceweight;
 
                             if (!structurevillagepieces$pieceweight.canSpawnMoreVillagePieces())
@@ -250,36 +195,28 @@
                 }
             }
 
-            StructureBoundingBox structureboundingbox = StructureVillagePieces.Torch.findPieceBox(
-                        start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing
-                    );
-            return structureboundingbox != null
-                   ? new StructureVillagePieces.Torch(start, componentType, rand, structureboundingbox, facing)
-                   : null;
+            StructureBoundingBox structureboundingbox = StructureVillagePieces.Torch.findPieceBox(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing);
+
+            if (structureboundingbox != null)
+            {
+                return new StructureVillagePieces.Torch(start, componentType, rand, structureboundingbox, facing);
+            }
+            else
+            {
+                return null;
+            }
         }
     }
 
-    private static StructureComponent generateAndAddComponent(
-            StructureVillagePieces.Start start,
-            List<StructureComponent> structureComponents,
-            Random rand,
-            int structureMinX,
-            int structureMinY,
-            int structureMinZ,
-            EnumFacing facing,
-            int componentType
-        )
+    private static StructureComponent generateAndAddComponent(StructureVillagePieces.Start start, List<StructureComponent> structureComponents, Random rand, int structureMinX, int structureMinY, int structureMinZ, EnumFacing facing, int componentType)
     {
         if (componentType > 50)
         {
             return null;
         }
-        else if (Math.abs(structureMinX - start.getBoundingBox().minX) <= 112
-                 && Math.abs(structureMinZ - start.getBoundingBox().minZ) <= 112)
+        else if (Math.abs(structureMinX - start.getBoundingBox().minX) <= 112 && Math.abs(structureMinZ - start.getBoundingBox().minZ) <= 112)
         {
-            StructureComponent structurecomponent = generateComponent(
-                                                        start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType + 1
-                                                    );
+            StructureComponent structurecomponent = generateComponent(start, structureComponents, rand, structureMinX, structureMinY, structureMinZ, facing, componentType + 1);
 
             if (structurecomponent != null)
             {
@@ -298,27 +235,15 @@
         }
     }
 
-    private static StructureComponent generateAndAddRoadPiece(
-            StructureVillagePieces.Start start,
-            List<StructureComponent> p_176069_1_,
-            Random rand,
-            int p_176069_3_,
-            int p_176069_4_,
-            int p_176069_5_,
-            EnumFacing facing,
-            int p_176069_7_
-        )
+    private static StructureComponent generateAndAddRoadPiece(StructureVillagePieces.Start start, List<StructureComponent> p_176069_1_, Random rand, int p_176069_3_, int p_176069_4_, int p_176069_5_, EnumFacing facing, int p_176069_7_)
     {
         if (p_176069_7_ > 3 + start.terrainType)
         {
             return null;
         }
-        else if (Math.abs(p_176069_3_ - start.getBoundingBox().minX) <= 112
-                 && Math.abs(p_176069_5_ - start.getBoundingBox().minZ) <= 112)
+        else if (Math.abs(p_176069_3_ - start.getBoundingBox().minX) <= 112 && Math.abs(p_176069_5_ - start.getBoundingBox().minZ) <= 112)
         {
-            StructureBoundingBox structureboundingbox = StructureVillagePieces.Path.findPieceBox(
-                        start, p_176069_1_, rand, p_176069_3_, p_176069_4_, p_176069_5_, facing
-                    );
+            StructureBoundingBox structureboundingbox = StructureVillagePieces.Path.findPieceBox(start, p_176069_1_, rand, p_176069_3_, p_176069_4_, p_176069_5_, facing);
 
             if (structureboundingbox != null && structureboundingbox.minY > 10)
             {
@@ -351,24 +276,12 @@
                 this.boundingBox = p_i45564_4_;
             }
 
-            public static StructureVillagePieces.Church createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175854_1_,
-                    Random rand,
-                    int p_175854_3_,
-                    int p_175854_4_,
-                    int p_175854_5_,
-                    EnumFacing facing,
-                    int p_175854_7_
-                )
+            public static StructureVillagePieces.Church createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175854_1_, Random rand, int p_175854_3_, int p_175854_4_, int p_175854_5_, EnumFacing facing, int p_175854_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175854_3_, p_175854_4_, p_175854_5_, 0, 0, 0, 5, 12, 9, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175854_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.Church(start, p_175854_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175854_1_, structureboundingbox) == null ? new StructureVillagePieces.Church(start, p_175854_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -435,7 +348,7 @@
                 this.placeTorch(worldIn, EnumFacing.NORTH, 2, 4, 5, structureBoundingBoxIn);
                 IBlockState iblockstate4 = Blocks.LADDER.getDefaultState().withProperty(BlockLadder.FACING, EnumFacing.WEST);
 
-                for (int i = 1; i <= 9; i++)
+                for (int i = 1; i <= 9; ++i)
                 {
                     this.setBlockState(worldIn, iblockstate4, 3, i, 3, structureBoundingBoxIn);
                 }
@@ -444,8 +357,7 @@
                 this.setBlockState(worldIn, Blocks.AIR.getDefaultState(), 2, 2, 0, structureBoundingBoxIn);
                 this.createVillageDoor(worldIn, structureBoundingBoxIn, randomIn, 2, 1, 0, EnumFacing.NORTH);
 
-                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR
-                        && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
+                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
                 {
                     this.setBlockState(worldIn, iblockstate1, 2, 0, -1, structureBoundingBoxIn);
 
@@ -455,9 +367,9 @@
                     }
                 }
 
-                for (int k = 0; k < 9; k++)
+                for (int k = 0; k < 9; ++k)
                 {
-                    for (int j = 0; j < 5; j++)
+                    for (int j = 0; j < 5; ++j)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, j, 12, k, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, j, -1, k, structureBoundingBoxIn);
@@ -468,7 +380,6 @@
                 return true;
             }
 
-            @Override
             protected int chooseProfession(int villagersSpawnedIn, int currentVillagerProfession)
             {
                 return 2;
@@ -497,7 +408,6 @@
                 this.cropTypeD = this.getRandomCropType(rand);
             }
 
-            @Override
             protected void writeStructureToNBT(NBTTagCompound tagCompound)
             {
                 super.writeStructureToNBT(tagCompound);
@@ -507,7 +417,6 @@
                 tagCompound.setInteger("CD", Block.REGISTRY.getIDForObject(this.cropTypeD));
             }
 
-            @Override
             protected void readStructureFromNBT(NBTTagCompound tagCompound, TemplateManager p_143011_2_)
             {
                 super.readStructureFromNBT(tagCompound, p_143011_2_);
@@ -554,24 +463,12 @@
                 }
             }
 
-            public static StructureVillagePieces.Field1 createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175851_1_,
-                    Random rand,
-                    int p_175851_3_,
-                    int p_175851_4_,
-                    int p_175851_5_,
-                    EnumFacing facing,
-                    int p_175851_7_
-                )
+            public static StructureVillagePieces.Field1 createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175851_1_, Random rand, int p_175851_3_, int p_175851_4_, int p_175851_5_, EnumFacing facing, int p_175851_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175851_3_, p_175851_4_, p_175851_5_, 0, 0, 0, 13, 4, 9, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175851_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.Field1(start, p_175851_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175851_1_, structureboundingbox) == null ? new StructureVillagePieces.Field1(start, p_175851_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -600,7 +497,7 @@
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 3, 0, 1, 3, 0, 7, Blocks.WATER.getDefaultState(), Blocks.WATER.getDefaultState(), false);
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 9, 0, 1, 9, 0, 7, Blocks.WATER.getDefaultState(), Blocks.WATER.getDefaultState(), false);
 
-                for (int i = 1; i <= 7; i++)
+                for (int i = 1; i <= 7; ++i)
                 {
                     int j = ((BlockCrops)this.cropTypeA).getMaxAge();
                     int k = j / 3;
@@ -620,9 +517,9 @@
                     this.setBlockState(worldIn, this.cropTypeD.getStateFromMeta(MathHelper.getInt(randomIn, i2, l1)), 11, 1, i, structureBoundingBoxIn);
                 }
 
-                for (int j2 = 0; j2 < 9; j2++)
+                for (int j2 = 0; j2 < 9; ++j2)
                 {
-                    for (int k2 = 0; k2 < 13; k2++)
+                    for (int k2 = 0; k2 < 13; ++k2)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, k2, 4, j2, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, Blocks.DIRT.getDefaultState(), k2, -1, j2, structureBoundingBoxIn);
@@ -651,7 +548,6 @@
                 this.cropTypeB = this.getRandomCropType(rand);
             }
 
-            @Override
             protected void writeStructureToNBT(NBTTagCompound tagCompound)
             {
                 super.writeStructureToNBT(tagCompound);
@@ -659,7 +555,6 @@
                 tagCompound.setInteger("CB", Block.REGISTRY.getIDForObject(this.cropTypeB));
             }
 
-            @Override
             protected void readStructureFromNBT(NBTTagCompound tagCompound, TemplateManager p_143011_2_)
             {
                 super.readStructureFromNBT(tagCompound, p_143011_2_);
@@ -684,24 +579,12 @@
                 }
             }
 
-            public static StructureVillagePieces.Field2 createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175852_1_,
-                    Random rand,
-                    int p_175852_3_,
-                    int p_175852_4_,
-                    int p_175852_5_,
-                    EnumFacing facing,
-                    int p_175852_7_
-                )
+            public static StructureVillagePieces.Field2 createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175852_1_, Random rand, int p_175852_3_, int p_175852_4_, int p_175852_5_, EnumFacing facing, int p_175852_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175852_3_, p_175852_4_, p_175852_5_, 0, 0, 0, 7, 4, 9, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175852_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.Field2(start, p_175852_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175852_1_, structureboundingbox) == null ? new StructureVillagePieces.Field2(start, p_175852_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -726,7 +609,7 @@
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 1, 0, 8, 5, 0, 8, iblockstate, iblockstate, false);
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 3, 0, 1, 3, 0, 7, Blocks.WATER.getDefaultState(), Blocks.WATER.getDefaultState(), false);
 
-                for (int i = 1; i <= 7; i++)
+                for (int i = 1; i <= 7; ++i)
                 {
                     int j = ((BlockCrops)this.cropTypeA).getMaxAge();
                     int k = j / 3;
@@ -738,9 +621,9 @@
                     this.setBlockState(worldIn, this.cropTypeB.getStateFromMeta(MathHelper.getInt(randomIn, i1, l)), 5, 1, i, structureBoundingBoxIn);
                 }
 
-                for (int j1 = 0; j1 < 9; j1++)
+                for (int j1 = 0; j1 < 9; ++j1)
                 {
-                    for (int k1 = 0; k1 < 7; k1++)
+                    for (int k1 = 0; k1 < 7; ++k1)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, k1, 4, j1, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, Blocks.DIRT.getDefaultState(), k1, -1, j1, structureBoundingBoxIn);
@@ -764,24 +647,12 @@
                 this.boundingBox = p_i45567_4_;
             }
 
-            public static StructureVillagePieces.Hall createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175857_1_,
-                    Random rand,
-                    int p_175857_3_,
-                    int p_175857_4_,
-                    int p_175857_5_,
-                    EnumFacing facing,
-                    int p_175857_7_
-                )
+            public static StructureVillagePieces.Hall createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175857_1_, Random rand, int p_175857_3_, int p_175857_4_, int p_175857_5_, EnumFacing facing, int p_175857_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175857_3_, p_175857_4_, p_175857_5_, 0, 0, 0, 9, 7, 11, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175857_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.Hall(start, p_175857_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175857_1_, structureboundingbox) == null ? new StructureVillagePieces.Hall(start, p_175857_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -827,9 +698,9 @@
                 IBlockState iblockstate7 = iblockstate1;
                 IBlockState iblockstate8 = iblockstate2;
 
-                for (int i = -1; i <= 2; i++)
+                for (int i = -1; i <= 2; ++i)
                 {
-                    for (int j = 0; j <= 8; j++)
+                    for (int j = 0; j <= 8; ++j)
                     {
                         this.setBlockState(worldIn, iblockstate7, j, 4 + i, i, structureBoundingBoxIn);
                         this.setBlockState(worldIn, iblockstate8, j, 4 + i, 5 - i, structureBoundingBoxIn);
@@ -861,8 +732,7 @@
                 this.placeTorch(worldIn, EnumFacing.NORTH, 2, 3, 1, structureBoundingBoxIn);
                 this.createVillageDoor(worldIn, structureBoundingBoxIn, randomIn, 2, 1, 0, EnumFacing.NORTH);
 
-                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR
-                        && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
+                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
                 {
                     this.setBlockState(worldIn, iblockstate7, 2, 0, -1, structureBoundingBoxIn);
 
@@ -877,9 +747,9 @@
                 this.placeTorch(worldIn, EnumFacing.SOUTH, 6, 3, 4, structureBoundingBoxIn);
                 this.createVillageDoor(worldIn, structureBoundingBoxIn, randomIn, 6, 1, 5, EnumFacing.SOUTH);
 
-                for (int k = 0; k < 5; k++)
+                for (int k = 0; k < 5; ++k)
                 {
-                    for (int l = 0; l < 9; l++)
+                    for (int l = 0; l < 9; ++l)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, l, 7, k, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, l, -1, k, structureBoundingBoxIn);
@@ -890,7 +760,6 @@
                 return true;
             }
 
-            @Override
             protected int chooseProfession(int villagersSpawnedIn, int currentVillagerProfession)
             {
                 return villagersSpawnedIn == 0 ? 4 : super.chooseProfession(villagersSpawnedIn, currentVillagerProfession);
@@ -910,24 +779,12 @@
                 this.boundingBox = p_i45571_4_;
             }
 
-            public static StructureVillagePieces.House1 createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175850_1_,
-                    Random rand,
-                    int p_175850_3_,
-                    int p_175850_4_,
-                    int p_175850_5_,
-                    EnumFacing facing,
-                    int p_175850_7_
-                )
+            public static StructureVillagePieces.House1 createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175850_1_, Random rand, int p_175850_3_, int p_175850_4_, int p_175850_5_, EnumFacing facing, int p_175850_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175850_3_, p_175850_4_, p_175850_5_, 0, 0, 0, 9, 9, 6, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175850_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.House1(start, p_175850_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175850_1_, structureboundingbox) == null ? new StructureVillagePieces.House1(start, p_175850_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -955,9 +812,9 @@
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 0, 6, 1, 8, 6, 4, iblockstate, iblockstate, false);
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 0, 7, 2, 8, 7, 3, iblockstate, iblockstate, false);
 
-                for (int i = -1; i <= 2; i++)
+                for (int i = -1; i <= 2; ++i)
                 {
-                    for (int j = 0; j <= 8; j++)
+                    for (int j = 0; j <= 8; ++j)
                     {
                         this.setBlockState(worldIn, iblockstate1, j, 6 + i, i, structureBoundingBoxIn);
                         this.setBlockState(worldIn, iblockstate2, j, 6 + i, 5 - i, structureBoundingBoxIn);
@@ -1012,8 +869,7 @@
                 this.setBlockState(worldIn, Blocks.AIR.getDefaultState(), 1, 2, 0, structureBoundingBoxIn);
                 this.createVillageDoor(worldIn, structureBoundingBoxIn, randomIn, 1, 1, 0, EnumFacing.NORTH);
 
-                if (this.getBlockStateFromPos(worldIn, 1, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR
-                        && this.getBlockStateFromPos(worldIn, 1, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
+                if (this.getBlockStateFromPos(worldIn, 1, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR && this.getBlockStateFromPos(worldIn, 1, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
                 {
                     this.setBlockState(worldIn, iblockstate5, 1, 0, -1, structureBoundingBoxIn);
 
@@ -1023,9 +879,9 @@
                     }
                 }
 
-                for (int l = 0; l < 6; l++)
+                for (int l = 0; l < 6; ++l)
                 {
-                    for (int k = 0; k < 9; k++)
+                    for (int k = 0; k < 9; ++k)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, k, 9, l, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, k, -1, l, structureBoundingBoxIn);
@@ -1036,7 +892,6 @@
                 return true;
             }
 
-            @Override
             protected int chooseProfession(int villagersSpawnedIn, int currentVillagerProfession)
             {
                 return 1;
@@ -1058,38 +913,24 @@
                 this.boundingBox = p_i45563_4_;
             }
 
-            public static StructureVillagePieces.House2 createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175855_1_,
-                    Random rand,
-                    int p_175855_3_,
-                    int p_175855_4_,
-                    int p_175855_5_,
-                    EnumFacing facing,
-                    int p_175855_7_
-                )
+            public static StructureVillagePieces.House2 createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175855_1_, Random rand, int p_175855_3_, int p_175855_4_, int p_175855_5_, EnumFacing facing, int p_175855_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175855_3_, p_175855_4_, p_175855_5_, 0, 0, 0, 10, 6, 7, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175855_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.House2(start, p_175855_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175855_1_, structureboundingbox) == null ? new StructureVillagePieces.House2(start, p_175855_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             protected void writeStructureToNBT(NBTTagCompound tagCompound)
             {
                 super.writeStructureToNBT(tagCompound);
                 tagCompound.setBoolean("Chest", this.hasMadeChest);
             }
 
-            @Override
             protected void readStructureFromNBT(NBTTagCompound tagCompound, TemplateManager p_143011_2_)
             {
                 super.readStructureFromNBT(tagCompound, p_143011_2_);
                 this.hasMadeChest = tagCompound.getBoolean("Chest");
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -1153,10 +994,9 @@
                     this.generateChest(worldIn, structureBoundingBoxIn, randomIn, 5, 1, 5, LootTableList.CHESTS_VILLAGE_BLACKSMITH);
                 }
 
-                for (int i = 6; i <= 8; i++)
+                for (int i = 6; i <= 8; ++i)
                 {
-                    if (this.getBlockStateFromPos(worldIn, i, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR
-                            && this.getBlockStateFromPos(worldIn, i, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
+                    if (this.getBlockStateFromPos(worldIn, i, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR && this.getBlockStateFromPos(worldIn, i, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
                     {
                         this.setBlockState(worldIn, iblockstate4, i, 0, -1, structureBoundingBoxIn);
 
@@ -1167,9 +1007,9 @@
                     }
                 }
 
-                for (int k = 0; k < 7; k++)
+                for (int k = 0; k < 7; ++k)
                 {
-                    for (int j = 0; j < 10; j++)
+                    for (int j = 0; j < 10; ++j)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, j, 6, k, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, j, -1, k, structureBoundingBoxIn);
@@ -1180,7 +1020,6 @@
                 return true;
             }
 
-            @Override
             protected int chooseProfession(int villagersSpawnedIn, int currentVillagerProfession)
             {
                 return 3;
@@ -1200,24 +1039,12 @@
                 this.boundingBox = p_i45561_4_;
             }
 
-            public static StructureVillagePieces.House3 createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175849_1_,
-                    Random rand,
-                    int p_175849_3_,
-                    int p_175849_4_,
-                    int p_175849_5_,
-                    EnumFacing facing,
-                    int p_175849_7_
-                )
+            public static StructureVillagePieces.House3 createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175849_1_, Random rand, int p_175849_3_, int p_175849_4_, int p_175849_5_, EnumFacing facing, int p_175849_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175849_3_, p_175849_4_, p_175849_5_, 0, 0, 0, 9, 7, 12, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175849_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.House3(start, p_175849_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175849_1_, structureboundingbox) == null ? new StructureVillagePieces.House3(start, p_175849_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -1264,9 +1091,9 @@
                 IBlockState iblockstate9 = iblockstate4;
                 IBlockState iblockstate10 = iblockstate3;
 
-                for (int i = -1; i <= 2; i++)
+                for (int i = -1; i <= 2; ++i)
                 {
-                    for (int j = 0; j <= 8; j++)
+                    for (int j = 0; j <= 8; ++j)
                     {
                         this.setBlockState(worldIn, iblockstate7, j, 4 + i, i, structureBoundingBoxIn);
 
@@ -1283,11 +1110,11 @@
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 6, 5, 4, 6, 5, 10, iblockstate5, iblockstate5, false);
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 5, 6, 3, 5, 6, 10, iblockstate5, iblockstate5, false);
 
-                for (int k = 4; k >= 1; k--)
+                for (int k = 4; k >= 1; --k)
                 {
                     this.setBlockState(worldIn, iblockstate5, k, 2 + k, 7 - k, structureBoundingBoxIn);
 
-                    for (int k1 = 8 - k; k1 <= 10; k1++)
+                    for (int k1 = 8 - k; k1 <= 10; ++k1)
                     {
                         this.setBlockState(worldIn, iblockstate10, k, 2 + k, k1, structureBoundingBoxIn);
                     }
@@ -1297,9 +1124,9 @@
                 this.setBlockState(worldIn, iblockstate5, 7, 5, 4, structureBoundingBoxIn);
                 this.setBlockState(worldIn, iblockstate4, 6, 6, 4, structureBoundingBoxIn);
 
-                for (int l = 6; l <= 8; l++)
+                for (int l = 6; l <= 8; ++l)
                 {
-                    for (int l1 = 5; l1 <= 10; l1++)
+                    for (int l1 = 5; l1 <= 10; ++l1)
                     {
                         this.setBlockState(worldIn, iblockstate9, l, 12 - l, l1, structureBoundingBoxIn);
                     }
@@ -1335,8 +1162,7 @@
                 this.createVillageDoor(worldIn, structureBoundingBoxIn, randomIn, 2, 1, 0, EnumFacing.NORTH);
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 1, 0, -1, 3, 2, -1, Blocks.AIR.getDefaultState(), Blocks.AIR.getDefaultState(), false);
 
-                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR
-                        && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
+                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
                 {
                     this.setBlockState(worldIn, iblockstate7, 2, 0, -1, structureBoundingBoxIn);
 
@@ -1346,18 +1172,18 @@
                     }
                 }
 
-                for (int i1 = 0; i1 < 5; i1++)
+                for (int i1 = 0; i1 < 5; ++i1)
                 {
-                    for (int i2 = 0; i2 < 9; i2++)
+                    for (int i2 = 0; i2 < 9; ++i2)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, i2, 7, i1, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, i2, -1, i1, structureBoundingBoxIn);
                     }
                 }
 
-                for (int j1 = 5; j1 < 11; j1++)
+                for (int j1 = 5; j1 < 11; ++j1)
                 {
-                    for (int j2 = 2; j2 < 9; j2++)
+                    for (int j2 = 2; j2 < 9; ++j2)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, j2, 7, j1, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, j2, -1, j1, structureBoundingBoxIn);
@@ -1377,9 +1203,7 @@
             {
             }
 
-            public House4Garden(
-                StructureVillagePieces.Start start, int p_i45566_2_, Random rand, StructureBoundingBox p_i45566_4_, EnumFacing facing
-            )
+            public House4Garden(StructureVillagePieces.Start start, int p_i45566_2_, Random rand, StructureBoundingBox p_i45566_4_, EnumFacing facing)
             {
                 super(start, p_i45566_2_);
                 this.setCoordBaseMode(facing);
@@ -1387,38 +1211,24 @@
                 this.isRoofAccessible = rand.nextBoolean();
             }
 
-            @Override
             protected void writeStructureToNBT(NBTTagCompound tagCompound)
             {
                 super.writeStructureToNBT(tagCompound);
                 tagCompound.setBoolean("Terrace", this.isRoofAccessible);
             }
 
-            @Override
             protected void readStructureFromNBT(NBTTagCompound tagCompound, TemplateManager p_143011_2_)
             {
                 super.readStructureFromNBT(tagCompound, p_143011_2_);
                 this.isRoofAccessible = tagCompound.getBoolean("Terrace");
             }
 
-            public static StructureVillagePieces.House4Garden createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175858_1_,
-                    Random rand,
-                    int p_175858_3_,
-                    int p_175858_4_,
-                    int p_175858_5_,
-                    EnumFacing facing,
-                    int p_175858_7_
-                )
+            public static StructureVillagePieces.House4Garden createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175858_1_, Random rand, int p_175858_3_, int p_175858_4_, int p_175858_5_, EnumFacing facing, int p_175858_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175858_3_, p_175858_4_, p_175858_5_, 0, 0, 0, 5, 6, 5, facing);
-                return StructureComponent.findIntersecting(p_175858_1_, structureboundingbox) != null
-                       ? null
-                       : new StructureVillagePieces.House4Garden(start, p_175858_7_, rand, structureboundingbox, facing);
+                return StructureComponent.findIntersecting(p_175858_1_, structureboundingbox) != null ? null : new StructureVillagePieces.House4Garden(start, p_175858_7_, rand, structureboundingbox, facing);
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -1467,8 +1277,7 @@
                 this.setBlockState(worldIn, iblockstate1, 3, 2, 0, structureBoundingBoxIn);
                 this.setBlockState(worldIn, iblockstate1, 3, 1, 0, structureBoundingBoxIn);
 
-                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR
-                        && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
+                if (this.getBlockStateFromPos(worldIn, 2, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR && this.getBlockStateFromPos(worldIn, 2, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
                 {
                     this.setBlockState(worldIn, iblockstate2, 2, 0, -1, structureBoundingBoxIn);
 
@@ -1511,9 +1320,9 @@
 
                 this.placeTorch(worldIn, EnumFacing.NORTH, 2, 3, 1, structureBoundingBoxIn);
 
-                for (int j = 0; j < 5; j++)
+                for (int j = 0; j < 5; ++j)
                 {
-                    for (int i = 0; i < 5; i++)
+                    for (int i = 0; i < 5; ++i)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, i, 6, j, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, i, -1, j, structureBoundingBoxIn);
@@ -1541,21 +1350,18 @@
                 this.length = Math.max(p_i45562_4_.getXSize(), p_i45562_4_.getZSize());
             }
 
-            @Override
             protected void writeStructureToNBT(NBTTagCompound tagCompound)
             {
                 super.writeStructureToNBT(tagCompound);
                 tagCompound.setInteger("Length", this.length);
             }
 
-            @Override
             protected void readStructureFromNBT(NBTTagCompound tagCompound, TemplateManager p_143011_2_)
             {
                 super.readStructureFromNBT(tagCompound, p_143011_2_);
                 this.length = tagCompound.getInteger("Length");
             }
 
-            @Override
             public void buildComponent(StructureComponent componentIn, List<StructureComponent> listIn, Random rand)
             {
                 boolean flag = false;
@@ -1590,52 +1396,16 @@
                     {
                         case NORTH:
                         default:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.minX - 1,
-                                this.boundingBox.minY,
-                                this.boundingBox.minZ,
-                                EnumFacing.WEST,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.minX - 1, this.boundingBox.minY, this.boundingBox.minZ, EnumFacing.WEST, this.getComponentType());
                             break;
                         case SOUTH:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.minX - 1,
-                                this.boundingBox.minY,
-                                this.boundingBox.maxZ - 2,
-                                EnumFacing.WEST,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.minX - 1, this.boundingBox.minY, this.boundingBox.maxZ - 2, EnumFacing.WEST, this.getComponentType());
                             break;
                         case WEST:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.minX,
-                                this.boundingBox.minY,
-                                this.boundingBox.minZ - 1,
-                                EnumFacing.NORTH,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.minX, this.boundingBox.minY, this.boundingBox.minZ - 1, EnumFacing.NORTH, this.getComponentType());
                             break;
                         case EAST:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.maxX - 2,
-                                this.boundingBox.minY,
-                                this.boundingBox.minZ - 1,
-                                EnumFacing.NORTH,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.maxX - 2, this.boundingBox.minY, this.boundingBox.minZ - 1, EnumFacing.NORTH, this.getComponentType());
                     }
                 }
 
@@ -1645,65 +1415,21 @@
                     {
                         case NORTH:
                         default:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.maxX + 1,
-                                this.boundingBox.minY,
-                                this.boundingBox.minZ,
-                                EnumFacing.EAST,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.maxX + 1, this.boundingBox.minY, this.boundingBox.minZ, EnumFacing.EAST, this.getComponentType());
                             break;
                         case SOUTH:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.maxX + 1,
-                                this.boundingBox.minY,
-                                this.boundingBox.maxZ - 2,
-                                EnumFacing.EAST,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.maxX + 1, this.boundingBox.minY, this.boundingBox.maxZ - 2, EnumFacing.EAST, this.getComponentType());
                             break;
                         case WEST:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.minX,
-                                this.boundingBox.minY,
-                                this.boundingBox.maxZ + 1,
-                                EnumFacing.SOUTH,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.minX, this.boundingBox.minY, this.boundingBox.maxZ + 1, EnumFacing.SOUTH, this.getComponentType());
                             break;
                         case EAST:
-                            StructureVillagePieces.generateAndAddRoadPiece(
-                                (StructureVillagePieces.Start)componentIn,
-                                listIn,
-                                rand,
-                                this.boundingBox.maxX - 2,
-                                this.boundingBox.minY,
-                                this.boundingBox.maxZ + 1,
-                                EnumFacing.SOUTH,
-                                this.getComponentType()
-                            );
+                            StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.maxX - 2, this.boundingBox.minY, this.boundingBox.maxZ + 1, EnumFacing.SOUTH, this.getComponentType());
                     }
                 }
             }
 
-            public static StructureBoundingBox findPieceBox(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175848_1_,
-                    Random rand,
-                    int p_175848_3_,
-                    int p_175848_4_,
-                    int p_175848_5_,
-                    EnumFacing facing
-                )
+            public static StructureBoundingBox findPieceBox(StructureVillagePieces.Start start, List<StructureComponent> p_175848_1_, Random rand, int p_175848_3_, int p_175848_4_, int p_175848_5_, EnumFacing facing)
             {
                 for (int i = 7 * MathHelper.getInt(rand, 3, 5); i >= 7; i -= 7)
                 {
@@ -1718,7 +1444,6 @@
                 return null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 IBlockState iblockstate = this.getBiomeSpecificBlockState(Blocks.GRASS_PATH.getDefaultState());
@@ -1726,9 +1451,9 @@
                 IBlockState iblockstate2 = this.getBiomeSpecificBlockState(Blocks.GRAVEL.getDefaultState());
                 IBlockState iblockstate3 = this.getBiomeSpecificBlockState(Blocks.COBBLESTONE.getDefaultState());
 
-                for (int i = this.boundingBox.minX; i <= this.boundingBox.maxX; i++)
+                for (int i = this.boundingBox.minX; i <= this.boundingBox.maxX; ++i)
                 {
-                    for (int j = this.boundingBox.minZ; j <= this.boundingBox.maxZ; j++)
+                    for (int j = this.boundingBox.minZ; j <= this.boundingBox.maxZ; ++j)
                     {
                         BlockPos blockpos = new BlockPos(i, 64, j);
 
@@ -1757,9 +1482,7 @@
                                     break;
                                 }
 
-                                if (iblockstate4.getBlock() == Blocks.SAND
-                                        || iblockstate4.getBlock() == Blocks.SANDSTONE
-                                        || iblockstate4.getBlock() == Blocks.RED_SANDSTONE)
+                                if (iblockstate4.getBlock() == Blocks.SAND || iblockstate4.getBlock() == Blocks.SANDSTONE || iblockstate4.getBlock() == Blocks.RED_SANDSTONE)
                                 {
                                     worldIn.setBlockState(blockpos, iblockstate2, 2);
                                     worldIn.setBlockState(blockpos.down(), iblockstate3, 2);
@@ -1819,28 +1542,23 @@
             public int terrainType;
             public StructureVillagePieces.PieceWeight lastPlaced;
             public List<StructureVillagePieces.PieceWeight> structureVillageWeightedPieceList;
-            public List<StructureComponent> pendingHouses = Lists.newArrayList();
-            public List<StructureComponent> pendingRoads = Lists.newArrayList();
+            public List<StructureComponent> pendingHouses = Lists.<StructureComponent>newArrayList();
+            public List<StructureComponent> pendingRoads = Lists.<StructureComponent>newArrayList();
+            public Biome biome;
 
             public Start()
             {
             }
 
-            public Start(
-                BiomeProvider biomeProviderIn,
-                int p_i2104_2_,
-                Random rand,
-                int p_i2104_4_,
-                int p_i2104_5_,
-                List<StructureVillagePieces.PieceWeight> p_i2104_6_,
-                int p_i2104_7_
-            )
+            public Start(BiomeProvider biomeProviderIn, int p_i2104_2_, Random rand, int p_i2104_4_, int p_i2104_5_, List<StructureVillagePieces.PieceWeight> p_i2104_6_, int p_i2104_7_)
             {
-                super(null, 0, rand, p_i2104_4_, p_i2104_5_);
+                super((StructureVillagePieces.Start)null, 0, rand, p_i2104_4_, p_i2104_5_);
                 this.biomeProvider = biomeProviderIn;
                 this.structureVillageWeightedPieceList = p_i2104_6_;
                 this.terrainType = p_i2104_7_;
                 Biome biome = biomeProviderIn.getBiome(new BlockPos(p_i2104_4_, 0, p_i2104_5_), Biomes.DEFAULT);
+                this.biome = biome;
+                this.startPiece = this;
 
                 if (biome instanceof BiomeDesert)
                 {
@@ -1873,21 +1591,12 @@
                 this.boundingBox = p_i45568_4_;
             }
 
-            public static StructureBoundingBox findPieceBox(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175856_1_,
-                    Random rand,
-                    int p_175856_3_,
-                    int p_175856_4_,
-                    int p_175856_5_,
-                    EnumFacing facing
-                )
+            public static StructureBoundingBox findPieceBox(StructureVillagePieces.Start start, List<StructureComponent> p_175856_1_, Random rand, int p_175856_3_, int p_175856_4_, int p_175856_5_, EnumFacing facing)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175856_3_, p_175856_4_, p_175856_5_, 0, 0, 0, 3, 4, 2, facing);
                 return StructureComponent.findIntersecting(p_175856_1_, structureboundingbox) != null ? null : structureboundingbox;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -1922,6 +1631,7 @@
             private int villagersSpawned;
             protected int structureType;
             protected boolean isZombieInfested;
+            protected StructureVillagePieces.Start startPiece;
 
             public Village()
             {
@@ -1935,10 +1645,10 @@
                 {
                     this.structureType = start.structureType;
                     this.isZombieInfested = start.isZombieInfested;
+                    startPiece = start;
                 }
             }
 
-            @Override
             protected void writeStructureToNBT(NBTTagCompound tagCompound)
             {
                 tagCompound.setInteger("HPos", this.averageGroundLvl);
@@ -1947,7 +1657,6 @@
                 tagCompound.setBoolean("Zombie", this.isZombieInfested);
             }
 
-            @Override
             protected void readStructureFromNBT(NBTTagCompound tagCompound, TemplateManager p_143011_2_)
             {
                 this.averageGroundLvl = tagCompound.getInteger("HPos");
@@ -1963,9 +1672,7 @@
             }
 
             @Nullable
-            protected StructureComponent getNextComponentNN(
-                StructureVillagePieces.Start start, List<StructureComponent> structureComponents, Random rand, int p_74891_4_, int p_74891_5_
-            )
+            protected StructureComponent getNextComponentNN(StructureVillagePieces.Start start, List<StructureComponent> structureComponents, Random rand, int p_74891_4_, int p_74891_5_)
             {
                 EnumFacing enumfacing = this.getCoordBaseMode();
 
@@ -1975,49 +1682,13 @@
                     {
                         case NORTH:
                         default:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.minX - 1,
-                                       this.boundingBox.minY + p_74891_4_,
-                                       this.boundingBox.minZ + p_74891_5_,
-                                       EnumFacing.WEST,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.minX - 1, this.boundingBox.minY + p_74891_4_, this.boundingBox.minZ + p_74891_5_, EnumFacing.WEST, this.getComponentType());
                         case SOUTH:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.minX - 1,
-                                       this.boundingBox.minY + p_74891_4_,
-                                       this.boundingBox.minZ + p_74891_5_,
-                                       EnumFacing.WEST,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.minX - 1, this.boundingBox.minY + p_74891_4_, this.boundingBox.minZ + p_74891_5_, EnumFacing.WEST, this.getComponentType());
                         case WEST:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.minX + p_74891_5_,
-                                       this.boundingBox.minY + p_74891_4_,
-                                       this.boundingBox.minZ - 1,
-                                       EnumFacing.NORTH,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.minX + p_74891_5_, this.boundingBox.minY + p_74891_4_, this.boundingBox.minZ - 1, EnumFacing.NORTH, this.getComponentType());
                         case EAST:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.minX + p_74891_5_,
-                                       this.boundingBox.minY + p_74891_4_,
-                                       this.boundingBox.minZ - 1,
-                                       EnumFacing.NORTH,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.minX + p_74891_5_, this.boundingBox.minY + p_74891_4_, this.boundingBox.minZ - 1, EnumFacing.NORTH, this.getComponentType());
                     }
                 }
                 else
@@ -2027,9 +1698,7 @@
             }
 
             @Nullable
-            protected StructureComponent getNextComponentPP(
-                StructureVillagePieces.Start start, List<StructureComponent> structureComponents, Random rand, int p_74894_4_, int p_74894_5_
-            )
+            protected StructureComponent getNextComponentPP(StructureVillagePieces.Start start, List<StructureComponent> structureComponents, Random rand, int p_74894_4_, int p_74894_5_)
             {
                 EnumFacing enumfacing = this.getCoordBaseMode();
 
@@ -2039,49 +1708,13 @@
                     {
                         case NORTH:
                         default:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.maxX + 1,
-                                       this.boundingBox.minY + p_74894_4_,
-                                       this.boundingBox.minZ + p_74894_5_,
-                                       EnumFacing.EAST,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.maxX + 1, this.boundingBox.minY + p_74894_4_, this.boundingBox.minZ + p_74894_5_, EnumFacing.EAST, this.getComponentType());
                         case SOUTH:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.maxX + 1,
-                                       this.boundingBox.minY + p_74894_4_,
-                                       this.boundingBox.minZ + p_74894_5_,
-                                       EnumFacing.EAST,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.maxX + 1, this.boundingBox.minY + p_74894_4_, this.boundingBox.minZ + p_74894_5_, EnumFacing.EAST, this.getComponentType());
                         case WEST:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.minX + p_74894_5_,
-                                       this.boundingBox.minY + p_74894_4_,
-                                       this.boundingBox.maxZ + 1,
-                                       EnumFacing.SOUTH,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.minX + p_74894_5_, this.boundingBox.minY + p_74894_4_, this.boundingBox.maxZ + 1, EnumFacing.SOUTH, this.getComponentType());
                         case EAST:
-                            return StructureVillagePieces.generateAndAddComponent(
-                                       start,
-                                       structureComponents,
-                                       rand,
-                                       this.boundingBox.minX + p_74894_5_,
-                                       this.boundingBox.minY + p_74894_4_,
-                                       this.boundingBox.maxZ + 1,
-                                       EnumFacing.SOUTH,
-                                       this.getComponentType()
-                                   );
+                            return StructureVillagePieces.generateAndAddComponent(start, structureComponents, rand, this.boundingBox.minX + p_74894_5_, this.boundingBox.minY + p_74894_4_, this.boundingBox.maxZ + 1, EnumFacing.SOUTH, this.getComponentType());
                     }
                 }
                 else
@@ -2096,21 +1729,28 @@
                 int j = 0;
                 BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-                for (int k = this.boundingBox.minZ; k <= this.boundingBox.maxZ; k++)
+                for (int k = this.boundingBox.minZ; k <= this.boundingBox.maxZ; ++k)
                 {
-                    for (int l = this.boundingBox.minX; l <= this.boundingBox.maxX; l++)
+                    for (int l = this.boundingBox.minX; l <= this.boundingBox.maxX; ++l)
                     {
                         blockpos$mutableblockpos.setPos(l, 64, k);
 
                         if (structurebb.isVecInside(blockpos$mutableblockpos))
                         {
                             i += Math.max(worldIn.getTopSolidOrLiquidBlock(blockpos$mutableblockpos).getY(), worldIn.provider.getAverageGroundLevel() - 1);
-                            j++;
+                            ++j;
                         }
                     }
                 }
 
-                return j == 0 ? -1 : i / j;
+                if (j == 0)
+                {
+                    return -1;
+                }
+                else
+                {
+                    return i / j;
+                }
             }
 
             protected static boolean canVillageGoDeeper(StructureBoundingBox structurebb)
@@ -2122,7 +1762,7 @@
             {
                 if (this.villagersSpawned < count)
                 {
-                    for (int i = this.villagersSpawned; i < count; i++)
+                    for (int i = this.villagersSpawned; i < count; ++i)
                     {
                         int j = this.getXWithOffset(x + i, z);
                         int k = this.getYWithOffset(y);
@@ -2133,36 +1773,45 @@
                             break;
                         }
 
-                        this.villagersSpawned++;
+                        ++this.villagersSpawned;
 
                         if (this.isZombieInfested)
                         {
                             EntityZombieVillager entityzombievillager = new EntityZombieVillager(worldIn);
-                            entityzombievillager.setLocationAndAngles((double)j + 0.5, (double)k, (double)l + 0.5, 0.0F, 0.0F);
-                            entityzombievillager.onInitialSpawn(worldIn.getDifficultyForLocation(new BlockPos(entityzombievillager)), null);
-                            entityzombievillager.setProfession(this.chooseProfession(i, 0));
+                            entityzombievillager.setLocationAndAngles((double)j + 0.5D, (double)k, (double)l + 0.5D, 0.0F, 0.0F);
+                            entityzombievillager.onInitialSpawn(worldIn.getDifficultyForLocation(new BlockPos(entityzombievillager)), (IEntityLivingData)null);
+                            entityzombievillager.setForgeProfession(this.chooseForgeProfession(i, net.minecraftforge.fml.common.registry.VillagerRegistry.FARMER));
                             entityzombievillager.enablePersistence();
                             worldIn.spawnEntity(entityzombievillager);
                         }
                         else
                         {
                             EntityVillager entityvillager = new EntityVillager(worldIn);
-                            entityvillager.setLocationAndAngles((double)j + 0.5, (double)k, (double)l + 0.5, 0.0F, 0.0F);
-                            entityvillager.setProfession(this.chooseProfession(i, worldIn.rand.nextInt(6)));
-                            entityvillager.finalizeMobSpawn(worldIn.getDifficultyForLocation(new BlockPos(entityvillager)), null, false);
+                            entityvillager.setLocationAndAngles((double)j + 0.5D, (double)k, (double)l + 0.5D, 0.0F, 0.0F);
+                            net.minecraftforge.fml.common.registry.VillagerRegistry.setRandomProfession(entityvillager, worldIn.rand);
+                            entityvillager.setProfession(this.chooseForgeProfession(i, entityvillager.getProfessionForge()));
+                            entityvillager.finalizeMobSpawn(worldIn.getDifficultyForLocation(new BlockPos(entityvillager)), (IEntityLivingData)null, false);
                             worldIn.spawnEntity(entityvillager);
                         }
                     }
                 }
             }
 
+            @Deprecated // Use Forge version below.
             protected int chooseProfession(int villagersSpawnedIn, int currentVillagerProfession)
             {
                 return currentVillagerProfession;
             }
+            protected net.minecraftforge.fml.common.registry.VillagerRegistry.VillagerProfession chooseForgeProfession(int count, net.minecraftforge.fml.common.registry.VillagerRegistry.VillagerProfession prof)
+            {
+                return net.minecraftforge.fml.common.registry.VillagerRegistry.getById(chooseProfession(count, net.minecraftforge.fml.common.registry.VillagerRegistry.getId(prof)));
+            }
 
             protected IBlockState getBiomeSpecificBlockState(IBlockState blockstateIn)
             {
+                net.minecraftforge.event.terraingen.BiomeEvent.GetVillageBlockID event = new net.minecraftforge.event.terraingen.BiomeEvent.GetVillageBlockID(startPiece == null ? null : startPiece.biome, blockstateIn);
+                net.minecraftforge.common.MinecraftForge.TERRAIN_GEN_BUS.post(event);
+                if (event.getResult() == net.minecraftforge.fml.common.eventhandler.Event.Result.DENY) return event.getReplacement();
                 if (this.structureType == 1)
                 {
                     if (blockstateIn.getBlock() == Blocks.LOG || blockstateIn.getBlock() == Blocks.LOG2)
@@ -2199,10 +1848,7 @@
                 {
                     if (blockstateIn.getBlock() == Blocks.LOG || blockstateIn.getBlock() == Blocks.LOG2)
                     {
-                        return Blocks.LOG
-                               .getDefaultState()
-                               .withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE)
-                               .withProperty(BlockLog.LOG_AXIS, blockstateIn.getValue(BlockLog.LOG_AXIS));
+                        return Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE).withProperty(BlockLog.LOG_AXIS, blockstateIn.getValue(BlockLog.LOG_AXIS));
                     }
 
                     if (blockstateIn.getBlock() == Blocks.PLANKS)
@@ -2224,10 +1870,7 @@
                 {
                     if (blockstateIn.getBlock() == Blocks.LOG || blockstateIn.getBlock() == Blocks.LOG2)
                     {
-                        return Blocks.LOG2
-                               .getDefaultState()
-                               .withProperty(BlockNewLog.VARIANT, BlockPlanks.EnumType.ACACIA)
-                               .withProperty(BlockLog.LOG_AXIS, blockstateIn.getValue(BlockLog.LOG_AXIS));
+                        return Blocks.LOG2.getDefaultState().withProperty(BlockNewLog.VARIANT, BlockPlanks.EnumType.ACACIA).withProperty(BlockLog.LOG_AXIS, blockstateIn.getValue(BlockLog.LOG_AXIS));
                     }
 
                     if (blockstateIn.getBlock() == Blocks.PLANKS)
@@ -2242,10 +1885,7 @@
 
                     if (blockstateIn.getBlock() == Blocks.COBBLESTONE)
                     {
-                        return Blocks.LOG2
-                               .getDefaultState()
-                               .withProperty(BlockNewLog.VARIANT, BlockPlanks.EnumType.ACACIA)
-                               .withProperty(BlockLog.LOG_AXIS, BlockLog.EnumAxis.Y);
+                        return Blocks.LOG2.getDefaultState().withProperty(BlockNewLog.VARIANT, BlockPlanks.EnumType.ACACIA).withProperty(BlockLog.LOG_AXIS, BlockLog.EnumAxis.Y);
                     }
 
                     if (blockstateIn.getBlock() == Blocks.OAK_FENCE)
@@ -2270,9 +1910,7 @@
                 }
             }
 
-            protected void createVillageDoor(
-                World p_189927_1_, StructureBoundingBox p_189927_2_, Random p_189927_3_, int p_189927_4_, int p_189927_5_, int p_189927_6_, EnumFacing p_189927_7_
-            )
+            protected void createVillageDoor(World p_189927_1_, StructureBoundingBox p_189927_2_, Random p_189927_3_, int p_189927_4_, int p_189927_5_, int p_189927_6_, EnumFacing p_189927_7_)
             {
                 if (!this.isZombieInfested)
                 {
@@ -2280,27 +1918,15 @@
                 }
             }
 
-            protected void placeTorch(
-                World p_189926_1_, EnumFacing p_189926_2_, int p_189926_3_, int p_189926_4_, int p_189926_5_, StructureBoundingBox p_189926_6_
-            )
+            protected void placeTorch(World p_189926_1_, EnumFacing p_189926_2_, int p_189926_3_, int p_189926_4_, int p_189926_5_, StructureBoundingBox p_189926_6_)
             {
                 if (!this.isZombieInfested)
                 {
-                    this.setBlockState(
-                        p_189926_1_,
-                        Blocks.TORCH.getDefaultState().withProperty(BlockTorch.FACING, p_189926_2_),
-                        p_189926_3_,
-                        p_189926_4_,
-                        p_189926_5_,
-                        p_189926_6_
-                    );
+                    this.setBlockState(p_189926_1_, Blocks.TORCH.getDefaultState().withProperty(BlockTorch.FACING, p_189926_2_), p_189926_3_, p_189926_4_, p_189926_5_, p_189926_6_);
                 }
             }
 
-            @Override
-            protected void replaceAirAndLiquidDownwards(
-                World worldIn, IBlockState blockstateIn, int x, int y, int z, StructureBoundingBox boundingboxIn
-            )
+            protected void replaceAirAndLiquidDownwards(World worldIn, IBlockState blockstateIn, int x, int y, int z, StructureBoundingBox boundingboxIn)
             {
                 IBlockState iblockstate = this.getBiomeSpecificBlockState(blockstateIn);
                 super.replaceAirAndLiquidDownwards(worldIn, iblockstate, x, y, z, boundingboxIn);
@@ -2333,52 +1959,14 @@
                 }
             }
 
-            @Override
             public void buildComponent(StructureComponent componentIn, List<StructureComponent> listIn, Random rand)
             {
-                StructureVillagePieces.generateAndAddRoadPiece(
-                    (StructureVillagePieces.Start)componentIn,
-                    listIn,
-                    rand,
-                    this.boundingBox.minX - 1,
-                    this.boundingBox.maxY - 4,
-                    this.boundingBox.minZ + 1,
-                    EnumFacing.WEST,
-                    this.getComponentType()
-                );
-                StructureVillagePieces.generateAndAddRoadPiece(
-                    (StructureVillagePieces.Start)componentIn,
-                    listIn,
-                    rand,
-                    this.boundingBox.maxX + 1,
-                    this.boundingBox.maxY - 4,
-                    this.boundingBox.minZ + 1,
-                    EnumFacing.EAST,
-                    this.getComponentType()
-                );
-                StructureVillagePieces.generateAndAddRoadPiece(
-                    (StructureVillagePieces.Start)componentIn,
-                    listIn,
-                    rand,
-                    this.boundingBox.minX + 1,
-                    this.boundingBox.maxY - 4,
-                    this.boundingBox.minZ - 1,
-                    EnumFacing.NORTH,
-                    this.getComponentType()
-                );
-                StructureVillagePieces.generateAndAddRoadPiece(
-                    (StructureVillagePieces.Start)componentIn,
-                    listIn,
-                    rand,
-                    this.boundingBox.minX + 1,
-                    this.boundingBox.maxY - 4,
-                    this.boundingBox.maxZ + 1,
-                    EnumFacing.SOUTH,
-                    this.getComponentType()
-                );
+                StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.minX - 1, this.boundingBox.maxY - 4, this.boundingBox.minZ + 1, EnumFacing.WEST, this.getComponentType());
+                StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.maxX + 1, this.boundingBox.maxY - 4, this.boundingBox.minZ + 1, EnumFacing.EAST, this.getComponentType());
+                StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.minX + 1, this.boundingBox.maxY - 4, this.boundingBox.minZ - 1, EnumFacing.NORTH, this.getComponentType());
+                StructureVillagePieces.generateAndAddRoadPiece((StructureVillagePieces.Start)componentIn, listIn, rand, this.boundingBox.minX + 1, this.boundingBox.maxY - 4, this.boundingBox.maxZ + 1, EnumFacing.SOUTH, this.getComponentType());
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -2410,9 +1998,9 @@
                 this.setBlockState(worldIn, iblockstate1, 4, 14, 4, structureBoundingBoxIn);
                 this.fillWithBlocks(worldIn, structureBoundingBoxIn, 1, 15, 1, 4, 15, 4, iblockstate, iblockstate, false);
 
-                for (int i = 0; i <= 5; i++)
+                for (int i = 0; i <= 5; ++i)
                 {
-                    for (int j = 0; j <= 5; j++)
+                    for (int j = 0; j <= 5; ++j)
                     {
                         if (j == 0 || j == 5 || i == 0 || i == 5)
                         {
@@ -2444,7 +2032,6 @@
                 this.tablePosition = rand.nextInt(3);
             }
 
-            @Override
             protected void writeStructureToNBT(NBTTagCompound tagCompound)
             {
                 super.writeStructureToNBT(tagCompound);
@@ -2452,7 +2039,6 @@
                 tagCompound.setBoolean("C", this.isTallHouse);
             }
 
-            @Override
             protected void readStructureFromNBT(NBTTagCompound tagCompound, TemplateManager p_143011_2_)
             {
                 super.readStructureFromNBT(tagCompound, p_143011_2_);
@@ -2460,24 +2046,12 @@
                 this.isTallHouse = tagCompound.getBoolean("C");
             }
 
-            public static StructureVillagePieces.WoodHut createPiece(
-                    StructureVillagePieces.Start start,
-                    List<StructureComponent> p_175853_1_,
-                    Random rand,
-                    int p_175853_3_,
-                    int p_175853_4_,
-                    int p_175853_5_,
-                    EnumFacing facing,
-                    int p_175853_7_
-                )
+            public static StructureVillagePieces.WoodHut createPiece(StructureVillagePieces.Start start, List<StructureComponent> p_175853_1_, Random rand, int p_175853_3_, int p_175853_4_, int p_175853_5_, EnumFacing facing, int p_175853_7_)
             {
                 StructureBoundingBox structureboundingbox = StructureBoundingBox.getComponentToAddBoundingBox(p_175853_3_, p_175853_4_, p_175853_5_, 0, 0, 0, 4, 6, 5, facing);
-                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175853_1_, structureboundingbox) == null
-                       ? new StructureVillagePieces.WoodHut(start, p_175853_7_, rand, structureboundingbox, facing)
-                       : null;
+                return canVillageGoDeeper(structureboundingbox) && StructureComponent.findIntersecting(p_175853_1_, structureboundingbox) == null ? new StructureVillagePieces.WoodHut(start, p_175853_7_, rand, structureboundingbox, facing) : null;
             }
 
-            @Override
             public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn)
             {
                 if (this.averageGroundLvl < 0)
@@ -2541,8 +2115,7 @@
                 this.setBlockState(worldIn, Blocks.AIR.getDefaultState(), 1, 2, 0, structureBoundingBoxIn);
                 this.createVillageDoor(worldIn, structureBoundingBoxIn, randomIn, 1, 1, 0, EnumFacing.NORTH);
 
-                if (this.getBlockStateFromPos(worldIn, 1, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR
-                        && this.getBlockStateFromPos(worldIn, 1, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
+                if (this.getBlockStateFromPos(worldIn, 1, 0, -1, structureBoundingBoxIn).getMaterial() == Material.AIR && this.getBlockStateFromPos(worldIn, 1, -1, -1, structureBoundingBoxIn).getMaterial() != Material.AIR)
                 {
                     this.setBlockState(worldIn, iblockstate2, 1, 0, -1, structureBoundingBoxIn);
 
@@ -2552,9 +2125,9 @@
                     }
                 }
 
-                for (int i = 0; i < 5; i++)
+                for (int i = 0; i < 5; ++i)
                 {
-                    for (int j = 0; j < 4; j++)
+                    for (int j = 0; j < 4; ++j)
                     {
                         this.clearCurrentPositionBlocksUpwards(worldIn, j, 6, i, structureBoundingBoxIn);
                         this.replaceAirAndLiquidDownwards(worldIn, iblockstate, j, -1, i, structureBoundingBoxIn);
