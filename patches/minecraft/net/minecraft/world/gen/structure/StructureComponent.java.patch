--- before/net/minecraft/world/gen/structure/StructureComponent.java
+++ after/net/minecraft/world/gen/structure/StructureComponent.java
@@ -41,6 +41,10 @@
 
     public final NBTTagCompound createStructureBaseNBT()
     {
+        if (MapGenStructureIO.getStructureComponentName(this) == null) // Friendlier error then the Null String error below.
+        {
+            throw new RuntimeException("StructureComponent \"" + this.getClass().getName() + "\" missing ID Mapping, Modder see MapGenStructureIO");
+        }
         NBTTagCompound nbttagcompound = new NBTTagCompound();
         nbttagcompound.setString("id", MapGenStructureIO.getStructureComponentName(this));
         nbttagcompound.setTag("BB", this.boundingBox.toNBTTagIntArray());
@@ -107,9 +111,9 @@
         int j1 = Math.min(this.boundingBox.maxZ + 1, boundingboxIn.maxZ);
         BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-        for (int k1 = i; k1 <= l; k1++)
+        for (int k1 = i; k1 <= l; ++k1)
         {
-            for (int l1 = k; l1 <= j1; l1++)
+            for (int l1 = k; l1 <= j1; ++l1)
             {
                 if (worldIn.getBlockState(blockpos$mutableblockpos.setPos(k1, j, l1)).getMaterial().isLiquid())
                 {
@@ -123,9 +127,9 @@
             }
         }
 
-        for (int i2 = i; i2 <= l; i2++)
+        for (int i2 = i; i2 <= l; ++i2)
         {
-            for (int k2 = j; k2 <= i1; k2++)
+            for (int k2 = j; k2 <= i1; ++k2)
             {
                 if (worldIn.getBlockState(blockpos$mutableblockpos.setPos(i2, k2, k)).getMaterial().isLiquid())
                 {
@@ -139,9 +143,9 @@
             }
         }
 
-        for (int j2 = k; j2 <= j1; j2++)
+        for (int j2 = k; j2 <= j1; ++j2)
         {
-            for (int l2 = j; l2 <= i1; l2++)
+            for (int l2 = j; l2 <= i1; ++l2)
             {
                 if (worldIn.getBlockState(blockpos$mutableblockpos.setPos(i, l2, j2)).getMaterial().isLiquid())
                 {
@@ -251,15 +255,13 @@
         return !boundingboxIn.isVecInside(blockpos) ? EnumSkyBlock.SKY.defaultLightValue : worldIn.getLightFor(EnumSkyBlock.SKY, blockpos);
     }
 
-    protected void fillWithAir(
-        World worldIn, StructureBoundingBox structurebb, int minX, int minY, int minZ, int maxX, int maxY, int maxZ
-    )
+    protected void fillWithAir(World worldIn, StructureBoundingBox structurebb, int minX, int minY, int minZ, int maxX, int maxY, int maxZ)
     {
-        for (int i = minY; i <= maxY; i++)
+        for (int i = minY; i <= maxY; ++i)
         {
-            for (int j = minX; j <= maxX; j++)
+            for (int j = minX; j <= maxX; ++j)
             {
-                for (int k = minZ; k <= maxZ; k++)
+                for (int k = minZ; k <= maxZ; ++k)
                 {
                     this.setBlockState(worldIn, Blocks.AIR.getDefaultState(), j, i, k, structurebb);
                 }
@@ -267,25 +269,13 @@
         }
     }
 
-    protected void fillWithBlocks(
-        World worldIn,
-        StructureBoundingBox boundingboxIn,
-        int xMin,
-        int yMin,
-        int zMin,
-        int xMax,
-        int yMax,
-        int zMax,
-        IBlockState boundaryBlockState,
-        IBlockState insideBlockState,
-        boolean existingOnly
-    )
+    protected void fillWithBlocks(World worldIn, StructureBoundingBox boundingboxIn, int xMin, int yMin, int zMin, int xMax, int yMax, int zMax, IBlockState boundaryBlockState, IBlockState insideBlockState, boolean existingOnly)
     {
-        for (int i = yMin; i <= yMax; i++)
+        for (int i = yMin; i <= yMax; ++i)
         {
-            for (int j = xMin; j <= xMax; j++)
+            for (int j = xMin; j <= xMax; ++j)
             {
-                for (int k = zMin; k <= zMax; k++)
+                for (int k = zMin; k <= zMax; ++k)
                 {
                     if (!existingOnly || this.getBlockStateFromPos(worldIn, j, i, k, boundingboxIn).getMaterial() != Material.AIR)
                     {
@@ -303,31 +293,17 @@
         }
     }
 
-    protected void fillWithRandomizedBlocks(
-        World worldIn,
-        StructureBoundingBox boundingboxIn,
-        int minX,
-        int minY,
-        int minZ,
-        int maxX,
-        int maxY,
-        int maxZ,
-        boolean alwaysReplace,
-        Random rand,
-        StructureComponent.BlockSelector blockselector
-    )
+    protected void fillWithRandomizedBlocks(World worldIn, StructureBoundingBox boundingboxIn, int minX, int minY, int minZ, int maxX, int maxY, int maxZ, boolean alwaysReplace, Random rand, StructureComponent.BlockSelector blockselector)
     {
-        for (int i = minY; i <= maxY; i++)
+        for (int i = minY; i <= maxY; ++i)
         {
-            for (int j = minX; j <= maxX; j++)
+            for (int j = minX; j <= maxX; ++j)
             {
-                for (int k = minZ; k <= maxZ; k++)
+                for (int k = minZ; k <= maxZ; ++k)
                 {
                     if (!alwaysReplace || this.getBlockStateFromPos(worldIn, j, i, k, boundingboxIn).getMaterial() != Material.AIR)
                     {
-                        blockselector.selectBlocks(
-                            rand, j, i, k, i == minY || i == maxY || j == minX || j == maxX || k == minZ || k == maxZ
-                        );
+                        blockselector.selectBlocks(rand, j, i, k, i == minY || i == maxY || j == minX || j == maxX || k == minZ || k == maxZ);
                         this.setBlockState(worldIn, blockselector.getBlockState(), j, i, k, boundingboxIn);
                     }
                 }
@@ -335,32 +311,15 @@
         }
     }
 
-    protected void generateMaybeBox(
-        World worldIn,
-        StructureBoundingBox sbb,
-        Random rand,
-        float chance,
-        int x1,
-        int y1,
-        int z1,
-        int x2,
-        int y2,
-        int z2,
-        IBlockState edgeState,
-        IBlockState state,
-        boolean requireNonAir,
-        int requiredSkylight
-    )
+    protected void generateMaybeBox(World worldIn, StructureBoundingBox sbb, Random rand, float chance, int x1, int y1, int z1, int x2, int y2, int z2, IBlockState edgeState, IBlockState state, boolean requireNonAir, int requiredSkylight)
     {
-        for (int i = y1; i <= y2; i++)
+        for (int i = y1; i <= y2; ++i)
         {
-            for (int j = x1; j <= x2; j++)
+            for (int j = x1; j <= x2; ++j)
             {
-                for (int k = z1; k <= z2; k++)
+                for (int k = z1; k <= z2; ++k)
                 {
-                    if (!(rand.nextFloat() > chance)
-                            && (!requireNonAir || this.getBlockStateFromPos(worldIn, j, i, k, sbb).getMaterial() != Material.AIR)
-                            && (requiredSkylight <= 0 || this.getSkyBrightness(worldIn, j, i, k, sbb) < requiredSkylight))
+                    if (rand.nextFloat() <= chance && (!requireNonAir || this.getBlockStateFromPos(worldIn, j, i, k, sbb).getMaterial() != Material.AIR) && (requiredSkylight <= 0 || this.getSkyBrightness(worldIn, j, i, k, sbb) < requiredSkylight))
                     {
                         if (i != y1 && i != y2 && j != x1 && j != x2 && k != z1 && k != z2)
                         {
@@ -376,16 +335,7 @@
         }
     }
 
-    protected void randomlyPlaceBlock(
-        World worldIn,
-        StructureBoundingBox boundingboxIn,
-        Random rand,
-        float chance,
-        int x,
-        int y,
-        int z,
-        IBlockState blockstateIn
-    )
+    protected void randomlyPlaceBlock(World worldIn, StructureBoundingBox boundingboxIn, Random rand, float chance, int x, int y, int z, IBlockState blockstateIn)
     {
         if (rand.nextFloat() < chance)
         {
@@ -393,18 +343,7 @@
         }
     }
 
-    protected void randomlyRareFillWithBlocks(
-        World worldIn,
-        StructureBoundingBox boundingboxIn,
-        int minX,
-        int minY,
-        int minZ,
-        int maxX,
-        int maxY,
-        int maxZ,
-        IBlockState blockstateIn,
-        boolean excludeAir
-    )
+    protected void randomlyRareFillWithBlocks(World worldIn, StructureBoundingBox boundingboxIn, int minX, int minY, int minZ, int maxX, int maxY, int maxZ, IBlockState blockstateIn, boolean excludeAir)
     {
         float f = (float)(maxX - minX + 1);
         float f1 = (float)(maxY - minY + 1);
@@ -412,15 +351,15 @@
         float f3 = (float)minX + f / 2.0F;
         float f4 = (float)minZ + f2 / 2.0F;
 
-        for (int i = minY; i <= maxY; i++)
+        for (int i = minY; i <= maxY; ++i)
         {
             float f5 = (float)(i - minY) / f1;
 
-            for (int j = minX; j <= maxX; j++)
+            for (int j = minX; j <= maxX; ++j)
             {
                 float f6 = ((float)j - f3) / (f * 0.5F);
 
-                for (int k = minZ; k <= maxZ; k++)
+                for (int k = minZ; k <= maxZ; ++k)
                 {
                     float f7 = ((float)k - f4) / (f2 * 0.5F);
 
@@ -463,27 +402,18 @@
             while ((worldIn.isAirBlock(new BlockPos(i, j, k)) || worldIn.getBlockState(new BlockPos(i, j, k)).getMaterial().isLiquid()) && j > 1)
             {
                 worldIn.setBlockState(new BlockPos(i, j, k), blockstateIn, 2);
-                j--;
+                --j;
             }
         }
     }
 
-    protected boolean generateChest(
-        World worldIn, StructureBoundingBox structurebb, Random randomIn, int x, int y, int z, ResourceLocation loot
-    )
+    protected boolean generateChest(World worldIn, StructureBoundingBox structurebb, Random randomIn, int x, int y, int z, ResourceLocation loot)
     {
         BlockPos blockpos = new BlockPos(this.getXWithOffset(x, z), this.getYWithOffset(y), this.getZWithOffset(x, z));
-        return this.generateChest(worldIn, structurebb, randomIn, blockpos, loot, null);
+        return this.generateChest(worldIn, structurebb, randomIn, blockpos, loot, (IBlockState)null);
     }
 
-    protected boolean generateChest(
-        World p_191080_1_,
-        StructureBoundingBox p_191080_2_,
-        Random p_191080_3_,
-        BlockPos p_191080_4_,
-        ResourceLocation p_191080_5_,
-        @Nullable IBlockState p_191080_6_
-    )
+    protected boolean generateChest(World p_191080_1_, StructureBoundingBox p_191080_2_, Random p_191080_3_, BlockPos p_191080_4_, ResourceLocation p_191080_5_, @Nullable IBlockState p_191080_6_)
     {
         if (p_191080_2_.isVecInside(p_191080_4_) && p_191080_1_.getBlockState(p_191080_4_).getBlock() != Blocks.CHEST)
         {
@@ -508,29 +438,13 @@
         }
     }
 
-    protected boolean createDispenser(
-        World worldIn,
-        StructureBoundingBox sbb,
-        Random rand,
-        int x,
-        int y,
-        int z,
-        EnumFacing facing,
-        ResourceLocation lootTableIn
-    )
+    protected boolean createDispenser(World worldIn, StructureBoundingBox sbb, Random rand, int x, int y, int z, EnumFacing facing, ResourceLocation lootTableIn)
     {
         BlockPos blockpos = new BlockPos(this.getXWithOffset(x, z), this.getYWithOffset(y), this.getZWithOffset(x, z));
 
         if (sbb.isVecInside(blockpos) && worldIn.getBlockState(blockpos).getBlock() != Blocks.DISPENSER)
         {
-            this.setBlockState(
-                worldIn,
-                Blocks.DISPENSER.getDefaultState().withProperty(BlockDispenser.FACING, facing),
-                x,
-                y,
-                z,
-                sbb
-            );
+            this.setBlockState(worldIn, Blocks.DISPENSER.getDefaultState().withProperty(BlockDispenser.FACING, facing), x, y, z, sbb);
             TileEntity tileentity = worldIn.getTileEntity(blockpos);
 
             if (tileentity instanceof TileEntityDispenser)
@@ -546,28 +460,10 @@
         }
     }
 
-    protected void generateDoor(
-        World worldIn,
-        StructureBoundingBox sbb,
-        Random rand,
-        int x,
-        int y,
-        int z,
-        EnumFacing facing,
-        BlockDoor door
-    )
+    protected void generateDoor(World worldIn, StructureBoundingBox sbb, Random rand, int x, int y, int z, EnumFacing facing, BlockDoor door)
     {
-        this.setBlockState(
-            worldIn, door.getDefaultState().withProperty(BlockDoor.FACING, facing), x, y, z, sbb
-        );
-        this.setBlockState(
-            worldIn,
-            door.getDefaultState().withProperty(BlockDoor.FACING, facing).withProperty(BlockDoor.HALF, BlockDoor.EnumDoorHalf.UPPER),
-            x,
-            y + 1,
-            z,
-            sbb
-        );
+        this.setBlockState(worldIn, door.getDefaultState().withProperty(BlockDoor.FACING, facing), x, y, z, sbb);
+        this.setBlockState(worldIn, door.getDefaultState().withProperty(BlockDoor.FACING, facing).withProperty(BlockDoor.HALF, BlockDoor.EnumDoorHalf.UPPER), x, y + 1, z, sbb);
     }
 
     public void offset(int x, int y, int z)
@@ -616,10 +512,6 @@
     public abstract static class BlockSelector
         {
             protected IBlockState blockstate = Blocks.AIR.getDefaultState();
-
-            protected BlockSelector()
-            {
-            }
 
             public abstract void selectBlocks(Random rand, int x, int y, int z, boolean wall);
 
