--- before/net/minecraft/world/gen/ChunkProviderServer.java
+++ after/net/minecraft/world/gen/ChunkProviderServer.java
@@ -34,6 +34,7 @@
     public final IChunkLoader field_73247_e;
     public final Long2ObjectMap<Chunk> field_73244_f = new Long2ObjectOpenHashMap<>(8192);
     public final WorldServer field_73251_h;
+    private final Set<Long> loadingChunks = com.google.common.collect.Sets.newHashSet();
 
     public ChunkProviderServer(WorldServer p_i46838_1_, IChunkLoader p_i46838_2_, IChunkGenerator p_i46838_3_)
     {
@@ -82,24 +83,49 @@
     @Nullable
     public Chunk func_186028_c(int p_186028_1_, int p_186028_2_)
     {
+        return loadChunk(p_186028_1_, p_186028_2_, null);
+    }
+
+    @Nullable
+    public Chunk loadChunk(int p_186028_1_, int p_186028_2_, @Nullable Runnable runnable)
+    {
         Chunk chunk = this.func_186026_b(p_186028_1_, p_186028_2_);
-
         if (chunk == null)
         {
-            chunk = this.func_73239_e(p_186028_1_, p_186028_2_);
-
-            if (chunk != null)
+            long pos = ChunkPos.func_77272_a(p_186028_1_, p_186028_2_);
+            chunk = net.minecraftforge.common.ForgeChunkManager.fetchDormantChunk(pos, this.field_73251_h);
+            if (chunk != null || !(this.field_73247_e instanceof net.minecraft.world.chunk.storage.AnvilChunkLoader loader))
             {
+                if (!loadingChunks.add(pos)) net.minecraftforge.fml.common.FMLLog.bigWarning("There is an attempt to load a chunk ({},{}) in dimension {} that is already being loaded. This will cause weird chunk breakages.", p_186028_1_, p_186028_2_, this.field_73251_h.field_73011_w.getDimension());
+                if (chunk == null) chunk = this.func_73239_e(p_186028_1_, p_186028_2_);
+
+                if (chunk != null)
+                {
                 this.field_73244_f.put(ChunkPos.func_77272_a(p_186028_1_, p_186028_2_), chunk);
                 chunk.func_76631_c();
                 chunk.func_186030_a(this, this.field_186029_c);
+                }
+
+                loadingChunks.remove(pos);
+            }
+            else
+            {
+                if (runnable == null || !net.minecraftforge.common.ForgeChunkManager.asyncChunkLoading)
+                    chunk = net.minecraftforge.common.chunkio.ChunkIOExecutor.syncChunkLoad(this.field_73251_h, loader, this, p_186028_1_, p_186028_2_);
+                else if (loader.func_191063_a(p_186028_1_, p_186028_2_))
+                {
+                    // We can only use the async queue for already generated chunks
+                    net.minecraftforge.common.chunkio.ChunkIOExecutor.queueChunkLoad(this.field_73251_h, loader, this, p_186028_1_, p_186028_2_, runnable);
+                    return null;
+                }
             }
         }
 
+        // If we didn't load the chunk async and have a callback run it now
+        if (runnable != null) runnable.run();
         return chunk;
     }
 
-    @Override
     public Chunk func_186025_d(int p_186025_1_, int p_186025_2_)
     {
         Chunk chunk = this.func_186028_c(p_186025_1_, p_186025_2_);
@@ -111,6 +137,7 @@
             try
             {
                 chunk = this.field_186029_c.func_185932_a(p_186025_1_, p_186025_2_);
+                net.minecraftforge.common.ForgeHooks.postGenerateChunk(this.field_186029_c, this.field_73251_h, chunk, p_186025_1_, p_186025_2_);
             }
             catch (Throwable throwable)
             {
@@ -141,6 +168,7 @@
             {
                 chunk.func_177432_b(this.field_73251_h.func_82737_E());
                 this.field_186029_c.func_180514_a(chunk, p_73239_1_, p_73239_2_);
+                net.minecraftforge.common.ForgeHooks.onRecreateStructures(this.field_186029_c, this.field_73251_h, p_73239_1_, p_73239_2_);
             }
 
             return chunk;
@@ -199,8 +227,9 @@
             {
                 this.func_73242_b(chunk);
                 chunk.func_177427_f(false);
+                ++i;
 
-                if (++i == 24 && !p_186027_1_)
+                if (i == 24 && !p_186027_1_)
                 {
                     return false;
                 }
@@ -215,13 +244,17 @@
         this.field_73247_e.func_75818_b();
     }
 
-    @Override
     public boolean func_73156_b()
     {
         if (!this.field_73251_h.field_73058_d)
         {
             if (!this.field_73248_b.isEmpty())
             {
+                for (ChunkPos forced : this.field_73251_h.getPersistentChunks().keySet())
+                {
+                    this.field_73248_b.remove(ChunkPos.func_77272_a(forced.field_77276_a, forced.field_77275_b));
+                }
+
                 Iterator<Long> iterator = this.field_73248_b.iterator();
 
                 for (int i = 0; i < 100 && iterator.hasNext(); iterator.remove())
@@ -232,6 +265,7 @@
                     if (chunk != null && chunk.field_189550_d)
                     {
                         chunk.func_76623_d();
+                        net.minecraftforge.common.ForgeChunkManager.putDormantChunk(ChunkPos.func_77272_a(chunk.field_76635_g, chunk.field_76647_h), chunk);
                         this.func_73242_b(chunk);
                         this.func_73243_a(chunk);
                         this.field_73244_f.remove(olong);
@@ -240,6 +274,8 @@
                 }
             }
 
+            if (this.field_73244_f.isEmpty()) net.minecraftforge.common.DimensionManager.unloadWorld(this.field_73251_h.field_73011_w.getDimension());
+
             this.field_73247_e.func_75817_a();
         }
 
@@ -251,7 +287,6 @@
         return !this.field_73251_h.field_73058_d;
     }
 
-    @Override
     public String func_73148_d()
     {
         return "ServerChunkCache: " + this.field_73244_f.size() + " Drop: " + this.field_73248_b.size();
@@ -265,12 +300,12 @@
     @Nullable
     public BlockPos func_180513_a(World p_180513_1_, String p_180513_2_, BlockPos p_180513_3_, boolean p_180513_4_)
     {
-        return this.field_186029_c.func_180513_a(p_180513_1_, p_180513_2_, p_180513_3_, p_180513_4_);
+        return this.field_186029_c.func_180513_a(p_180513_1_, p_180513_2_, p_180513_3_, p_180513_4_) instanceof BlockPos blockPos ? blockPos : net.minecraftforge.common.ForgeHooks.onGetNearestStructurePos(this.field_186029_c, p_180513_1_, p_180513_2_, p_180513_3_, p_180513_4_);
     }
 
     public boolean func_193413_a(World p_193413_1_, String p_193413_2_, BlockPos p_193413_3_)
     {
-        return this.field_186029_c.func_193414_a(p_193413_1_, p_193413_2_, p_193413_3_);
+        return this.field_186029_c.func_193414_a(p_193413_1_, p_193413_2_, p_193413_3_) || net.minecraftforge.common.ForgeHooks.isInsideStructure(this.field_186029_c, p_193413_1_, p_193413_2_, p_193413_3_);
     }
 
     public int func_73152_e()
