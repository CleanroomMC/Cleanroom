--- before/net/minecraft/world/gen/feature/WorldGenHugeTrees.java
+++ after/net/minecraft/world/gen/feature/WorldGenHugeTrees.java
@@ -42,7 +42,7 @@
 
         if (leavesPos.getY() >= 1 && leavesPos.getY() + height + 1 <= 256)
         {
-            for (int i = 0; i <= 1 + height; i++)
+            for (int i = 0; i <= 1 + height; ++i)
             {
                 int j = 2;
 
@@ -55,13 +55,11 @@
                     j = 2;
                 }
 
-                for (int k = -j; k <= j && flag; k++)
+                for (int k = -j; k <= j && flag; ++k)
                 {
-                    for (int l = -j; l <= j && flag; l++)
+                    for (int l = -j; l <= j && flag; ++l)
                     {
-                        if (leavesPos.getY() + i < 0
-                                || leavesPos.getY() + i >= 256
-                                || !this.canGrowInto(worldIn.getBlockState(leavesPos.add(k, i, l)).getBlock()))
+                        if (leavesPos.getY() + i < 0 || leavesPos.getY() + i >= 256 || !this.isReplaceable(worldIn,leavesPos.add(k, i, l)))
                         {
                             flag = false;
                         }
@@ -80,14 +78,15 @@
     private boolean ensureDirtsUnderneath(BlockPos pos, World worldIn)
     {
         BlockPos blockpos = pos.down();
-        Block block = worldIn.getBlockState(blockpos).getBlock();
+        IBlockState state = worldIn.getBlockState(blockpos);
+        boolean isSoil = state.getBlock().canSustainPlant(state, worldIn, blockpos, net.minecraft.util.EnumFacing.UP, ((net.minecraft.block.BlockSapling)Blocks.SAPLING));
 
-        if ((block == Blocks.GRASS || block == Blocks.DIRT) && pos.getY() >= 2)
+        if (isSoil && pos.getY() >= 2)
         {
-            this.setDirtAt(worldIn, blockpos);
-            this.setDirtAt(worldIn, blockpos.east());
-            this.setDirtAt(worldIn, blockpos.south());
-            this.setDirtAt(worldIn, blockpos.south().east());
+            this.onPlantGrow(worldIn, blockpos, pos);
+            this.onPlantGrow(worldIn, blockpos.east(), pos);
+            this.onPlantGrow(worldIn, blockpos.south(), pos);
+            this.onPlantGrow(worldIn, blockpos.south().east(), pos);
             return true;
         }
         else
@@ -105,9 +104,9 @@
     {
         int i = width * width;
 
-        for (int j = -width; j <= width + 1; j++)
+        for (int j = -width; j <= width + 1; ++j)
         {
-            for (int k = -width; k <= width + 1; k++)
+            for (int k = -width; k <= width + 1; ++k)
             {
                 int l = j - 1;
                 int i1 = k - 1;
@@ -115,9 +114,9 @@
                 if (j * j + k * k <= i || l * l + i1 * i1 <= i || j * j + i1 * i1 <= i || l * l + k * k <= i)
                 {
                     BlockPos blockpos = layerCenter.add(j, 0, k);
-                    Material material = worldIn.getBlockState(blockpos).getMaterial();
+                    IBlockState state = worldIn.getBlockState(blockpos);
 
-                    if (material == Material.AIR || material == Material.LEAVES)
+                    if (state.getBlock().isAir(state, worldIn, blockpos) || state.getBlock().isLeaves(state, worldIn, blockpos))
                     {
                         this.setBlockAndNotifyAdequately(worldIn, blockpos, this.leavesMetadata);
                     }
@@ -130,21 +129,28 @@
     {
         int i = width * width;
 
-        for (int j = -width; j <= width; j++)
+        for (int j = -width; j <= width; ++j)
         {
-            for (int k = -width; k <= width; k++)
+            for (int k = -width; k <= width; ++k)
             {
                 if (j * j + k * k <= i)
                 {
                     BlockPos blockpos = layerCenter.add(j, 0, k);
-                    Material material = worldIn.getBlockState(blockpos).getMaterial();
+                    IBlockState state = worldIn.getBlockState(blockpos);
 
-                    if (material == Material.AIR || material == Material.LEAVES)
+                    if (state.getBlock().isAir(state, worldIn, blockpos) || state.getBlock().isLeaves(state, worldIn, blockpos))
                     {
                         this.setBlockAndNotifyAdequately(worldIn, blockpos, this.leavesMetadata);
                     }
                 }
             }
         }
+    }
+
+    //Just a helper macro
+    private void onPlantGrow(World world, BlockPos pos, BlockPos source)
+    {
+        IBlockState state = world.getBlockState(pos);
+        state.getBlock().onPlantGrow(state, world, pos, source);
     }
 }
