--- before/net/minecraft/world/gen/feature/WorldGenBirchTree.java
+++ after/net/minecraft/world/gen/feature/WorldGenBirchTree.java
@@ -13,13 +13,8 @@
 
 public class WorldGenBirchTree extends WorldGenAbstractTree
 {
-    private static final IBlockState LOG = Blocks.LOG
-                .getDefaultState()
-                .withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.BIRCH);
-    private static final IBlockState LEAF = Blocks.LEAVES
-                .getDefaultState()
-                .withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.BIRCH)
-                .withProperty(BlockOldLeaf.CHECK_DECAY, false);
+    private static final IBlockState LOG = Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.BIRCH);
+    private static final IBlockState LEAF = Blocks.LEAVES.getDefaultState().withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.BIRCH).withProperty(BlockOldLeaf.CHECK_DECAY, Boolean.valueOf(false));
     private final boolean useExtraRandomHeight;
 
     public WorldGenBirchTree(boolean notify, boolean useExtraRandomHeightIn)
@@ -28,7 +23,6 @@
         this.useExtraRandomHeight = useExtraRandomHeightIn;
     }
 
-    @Override
     public boolean generate(World worldIn, Random rand, BlockPos position)
     {
         int i = rand.nextInt(3) + 5;
@@ -42,7 +36,7 @@
 
         if (position.getY() >= 1 && position.getY() + i + 1 <= 256)
         {
-            for (int j = position.getY(); j <= position.getY() + 1 + i; j++)
+            for (int j = position.getY(); j <= position.getY() + 1 + i; ++j)
             {
                 int k = 1;
 
@@ -58,15 +52,18 @@
 
                 BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-                for (int l = position.getX() - k; l <= position.getX() + k && flag; l++)
+                for (int l = position.getX() - k; l <= position.getX() + k && flag; ++l)
                 {
-                    for (int i1 = position.getZ() - k; i1 <= position.getZ() + k && flag; i1++)
+                    for (int i1 = position.getZ() - k; i1 <= position.getZ() + k && flag; ++i1)
                     {
-                        if (j < 0 || j >= 256)
+                        if (j >= 0 && j < worldIn.getHeight())
                         {
-                            flag = false;
+                            if (!this.isReplaceable(worldIn, blockpos$mutableblockpos.setPos(l, j, i1)))
+                            {
+                                flag = false;
+                            }
                         }
-                        else if (!this.canGrowInto(worldIn.getBlockState(blockpos$mutableblockpos.setPos(l, j, i1)).getBlock()))
+                        else
                         {
                             flag = false;
                         }
@@ -80,32 +77,33 @@
             }
             else
             {
-                Block block = worldIn.getBlockState(position.down()).getBlock();
+                BlockPos down = position.down();
+                IBlockState state = worldIn.getBlockState(down);
+                boolean isSoil = state.getBlock().canSustainPlant(state, worldIn, down, net.minecraft.util.EnumFacing.UP, (net.minecraft.block.BlockSapling)Blocks.SAPLING);
 
-                if ((block == Blocks.GRASS || block == Blocks.DIRT || block == Blocks.FARMLAND)
-                        && position.getY() < 256 - i - 1)
+                if (isSoil && position.getY() < worldIn.getHeight() - i - 1)
                 {
-                    this.setDirtAt(worldIn, position.down());
+                    state.getBlock().onPlantGrow(state, worldIn, down, position);
 
-                    for (int i2 = position.getY() - 3 + i; i2 <= position.getY() + i; i2++)
+                    for (int i2 = position.getY() - 3 + i; i2 <= position.getY() + i; ++i2)
                     {
                         int k2 = i2 - (position.getY() + i);
                         int l2 = 1 - k2 / 2;
 
-                        for (int i3 = position.getX() - l2; i3 <= position.getX() + l2; i3++)
+                        for (int i3 = position.getX() - l2; i3 <= position.getX() + l2; ++i3)
                         {
                             int j1 = i3 - position.getX();
 
-                            for (int k1 = position.getZ() - l2; k1 <= position.getZ() + l2; k1++)
+                            for (int k1 = position.getZ() - l2; k1 <= position.getZ() + l2; ++k1)
                             {
                                 int l1 = k1 - position.getZ();
 
                                 if (Math.abs(j1) != l2 || Math.abs(l1) != l2 || rand.nextInt(2) != 0 && k2 != 0)
                                 {
                                     BlockPos blockpos = new BlockPos(i3, i2, k1);
-                                    Material material = worldIn.getBlockState(blockpos).getMaterial();
+                                    IBlockState state2 = worldIn.getBlockState(blockpos);
 
-                                    if (material == Material.AIR || material == Material.LEAVES)
+                                    if (state2.getBlock().isAir(state2, worldIn, blockpos) || state2.getBlock().isAir(state2, worldIn, blockpos))
                                     {
                                         this.setBlockAndNotifyAdequately(worldIn, blockpos, LEAF);
                                     }
@@ -114,11 +112,12 @@
                         }
                     }
 
-                    for (int j2 = 0; j2 < i; j2++)
+                    for (int j2 = 0; j2 < i; ++j2)
                     {
-                        Material material1 = worldIn.getBlockState(position.up(j2)).getMaterial();
+                        BlockPos upN = position.up(j2);
+                        IBlockState state2 = worldIn.getBlockState(upN);
 
-                        if (material1 == Material.AIR || material1 == Material.LEAVES)
+                        if (state2.getBlock().isAir(state2, worldIn, upN) || state2.getBlock().isLeaves(state2, worldIn, upN))
                         {
                             this.setBlockAndNotifyAdequately(worldIn, position.up(j2), LOG);
                         }
