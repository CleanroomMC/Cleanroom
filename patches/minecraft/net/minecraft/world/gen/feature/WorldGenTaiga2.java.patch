--- before/net/minecraft/world/gen/feature/WorldGenTaiga2.java
+++ after/net/minecraft/world/gen/feature/WorldGenTaiga2.java
@@ -14,20 +14,14 @@
 
 public class WorldGenTaiga2 extends WorldGenAbstractTree
 {
-    private static final IBlockState TRUNK = Blocks.LOG
-                .getDefaultState()
-                .withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE);
-    private static final IBlockState LEAF = Blocks.LEAVES
-                .getDefaultState()
-                .withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.SPRUCE)
-                .withProperty(BlockLeaves.CHECK_DECAY, false);
+    private static final IBlockState TRUNK = Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.SPRUCE);
+    private static final IBlockState LEAF = Blocks.LEAVES.getDefaultState().withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.SPRUCE).withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false));
 
     public WorldGenTaiga2(boolean p_i2025_1_)
     {
         super(p_i2025_1_);
     }
 
-    @Override
     public boolean generate(World worldIn, Random rand, BlockPos position)
     {
         int i = rand.nextInt(4) + 6;
@@ -36,9 +30,9 @@
         int l = 2 + rand.nextInt(2);
         boolean flag = true;
 
-        if (position.getY() >= 1 && position.getY() + i + 1 <= 256)
+        if (position.getY() >= 1 && position.getY() + i + 1 <= worldIn.getHeight())
         {
-            for (int i1 = position.getY(); i1 <= position.getY() + 1 + i && flag; i1++)
+            for (int i1 = position.getY(); i1 <= position.getY() + 1 + i && flag; ++i1)
             {
                 int j1;
 
@@ -53,15 +47,15 @@
 
                 BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-                for (int k1 = position.getX() - j1; k1 <= position.getX() + j1 && flag; k1++)
+                for (int k1 = position.getX() - j1; k1 <= position.getX() + j1 && flag; ++k1)
                 {
-                    for (int l1 = position.getZ() - j1; l1 <= position.getZ() + j1 && flag; l1++)
+                    for (int l1 = position.getZ() - j1; l1 <= position.getZ() + j1 && flag; ++l1)
                     {
-                        if (i1 >= 0 && i1 < 256)
+                        if (i1 >= 0 && i1 < worldIn.getHeight())
                         {
-                            Material material = worldIn.getBlockState(blockpos$mutableblockpos.setPos(k1, i1, l1)).getMaterial();
+                            IBlockState state = worldIn.getBlockState(blockpos$mutableblockpos.setPos(k1, i1, l1));
 
-                            if (material != Material.AIR && material != Material.LEAVES)
+                            if (!state.getBlock().isAir(state, worldIn, blockpos$mutableblockpos.setPos(k1, i1, l1)) && !state.getBlock().isLeaves(state, worldIn, blockpos$mutableblockpos.setPos(k1, i1, l1)))
                             {
                                 flag = false;
                             }
@@ -80,33 +74,34 @@
             }
             else
             {
-                Block block = worldIn.getBlockState(position.down()).getBlock();
+                BlockPos down = position.down();
+                IBlockState state = worldIn.getBlockState(down);
 
-                if ((block == Blocks.GRASS || block == Blocks.DIRT || block == Blocks.FARMLAND)
-                        && position.getY() < 256 - i - 1)
+                if (state.getBlock().canSustainPlant(state, worldIn, down, net.minecraft.util.EnumFacing.UP, (net.minecraft.block.BlockSapling)Blocks.SAPLING) && position.getY() < worldIn.getHeight() - i - 1)
                 {
-                    this.setDirtAt(worldIn, position.down());
+                    state.getBlock().onPlantGrow(state, worldIn, down, position);
                     int i3 = rand.nextInt(2);
                     int j3 = 1;
                     int k3 = 0;
 
-                    for (int l3 = 0; l3 <= k; l3++)
+                    for (int l3 = 0; l3 <= k; ++l3)
                     {
                         int j4 = position.getY() + i - l3;
 
-                        for (int i2 = position.getX() - i3; i2 <= position.getX() + i3; i2++)
+                        for (int i2 = position.getX() - i3; i2 <= position.getX() + i3; ++i2)
                         {
                             int j2 = i2 - position.getX();
 
-                            for (int k2 = position.getZ() - i3; k2 <= position.getZ() + i3; k2++)
+                            for (int k2 = position.getZ() - i3; k2 <= position.getZ() + i3; ++k2)
                             {
                                 int l2 = k2 - position.getZ();
 
                                 if (Math.abs(j2) != i3 || Math.abs(l2) != i3 || i3 <= 0)
                                 {
                                     BlockPos blockpos = new BlockPos(i2, j4, k2);
+                                    state = worldIn.getBlockState(blockpos);
 
-                                    if (!worldIn.getBlockState(blockpos).isFullBlock())
+                                    if (state.getBlock().canBeReplacedByLeaves(state, worldIn, blockpos))
                                     {
                                         this.setBlockAndNotifyAdequately(worldIn, blockpos, LEAF);
                                     }
@@ -118,25 +113,27 @@
                         {
                             i3 = k3;
                             k3 = 1;
+                            ++j3;
 
-                            if (++j3 > l)
+                            if (j3 > l)
                             {
                                 j3 = l;
                             }
                         }
                         else
                         {
-                            i3++;
+                            ++i3;
                         }
                     }
 
                     int i4 = rand.nextInt(3);
 
-                    for (int k4 = 0; k4 < i - i4; k4++)
+                    for (int k4 = 0; k4 < i - i4; ++k4)
                     {
-                        Material material1 = worldIn.getBlockState(position.up(k4)).getMaterial();
+                        BlockPos upN = position.up(k4);
+                        state = worldIn.getBlockState(upN);
 
-                        if (material1 == Material.AIR || material1 == Material.LEAVES)
+                        if (state.getBlock().isAir(state, worldIn, upN) || state.getBlock().isLeaves(state, worldIn, upN))
                         {
                             this.setBlockAndNotifyAdequately(worldIn, position.up(k4), TRUNK);
                         }
