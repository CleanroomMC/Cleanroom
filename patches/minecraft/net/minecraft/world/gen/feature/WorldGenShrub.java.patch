--- before/net/minecraft/world/gen/feature/WorldGenShrub.java
+++ after/net/minecraft/world/gen/feature/WorldGenShrub.java
@@ -20,43 +20,39 @@
         this.leavesMetadata = p_i46450_2_;
     }
 
-    @Override
     public boolean generate(World worldIn, Random rand, BlockPos position)
     {
-        for (IBlockState iblockstate = worldIn.getBlockState(position);
-                (iblockstate.getMaterial() == Material.AIR || iblockstate.getMaterial() == Material.LEAVES) && position.getY() > 0;
-                iblockstate = worldIn.getBlockState(position)
-            )
+        for (IBlockState iblockstate = worldIn.getBlockState(position); (iblockstate.getBlock().isAir(iblockstate, worldIn, position) || iblockstate.getBlock().isLeaves(iblockstate, worldIn, position)) && position.getY() > 0; iblockstate = worldIn.getBlockState(position))
         {
             position = position.down();
         }
 
-        Block block = worldIn.getBlockState(position).getBlock();
+        IBlockState state = worldIn.getBlockState(position);
 
-        if (block == Blocks.DIRT || block == Blocks.GRASS)
+        if (state.getBlock().canSustainPlant(state, worldIn, position, net.minecraft.util.EnumFacing.UP, ((net.minecraft.block.BlockSapling)Blocks.SAPLING)))
         {
             position = position.up();
             this.setBlockAndNotifyAdequately(worldIn, position, this.woodMetadata);
 
-            for (int i = position.getY(); i <= position.getY() + 2; i++)
+            for (int i = position.getY(); i <= position.getY() + 2; ++i)
             {
                 int j = i - position.getY();
                 int k = 2 - j;
 
-                for (int l = position.getX() - k; l <= position.getX() + k; l++)
+                for (int l = position.getX() - k; l <= position.getX() + k; ++l)
                 {
                     int i1 = l - position.getX();
 
-                    for (int j1 = position.getZ() - k; j1 <= position.getZ() + k; j1++)
+                    for (int j1 = position.getZ() - k; j1 <= position.getZ() + k; ++j1)
                     {
                         int k1 = j1 - position.getZ();
 
                         if (Math.abs(i1) != k || Math.abs(k1) != k || rand.nextInt(2) != 0)
                         {
                             BlockPos blockpos = new BlockPos(l, i, j1);
-                            Material material = worldIn.getBlockState(blockpos).getMaterial();
+                            state = worldIn.getBlockState(blockpos);
 
-                            if (material == Material.AIR || material == Material.LEAVES)
+                            if (state.getBlock().canBeReplacedByLeaves(state, worldIn, blockpos))
                             {
                                 this.setBlockAndNotifyAdequately(worldIn, blockpos, this.leavesMetadata);
                             }
