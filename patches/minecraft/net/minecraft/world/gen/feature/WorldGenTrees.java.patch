--- before/net/minecraft/world/gen/feature/WorldGenTrees.java
+++ after/net/minecraft/world/gen/feature/WorldGenTrees.java
@@ -19,10 +19,7 @@
 public class WorldGenTrees extends WorldGenAbstractTree
 {
     private static final IBlockState DEFAULT_TRUNK = Blocks.LOG.getDefaultState().withProperty(BlockOldLog.VARIANT, BlockPlanks.EnumType.OAK);
-    private static final IBlockState DEFAULT_LEAF = Blocks.LEAVES
-                .getDefaultState()
-                .withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.OAK)
-                .withProperty(BlockLeaves.CHECK_DECAY, false);
+    private static final IBlockState DEFAULT_LEAF = Blocks.LEAVES.getDefaultState().withProperty(BlockOldLeaf.VARIANT, BlockPlanks.EnumType.OAK).withProperty(BlockLeaves.CHECK_DECAY, Boolean.valueOf(false));
     private final int minTreeHeight;
     private final boolean vinesGrow;
     private final IBlockState metaWood;
@@ -42,15 +39,14 @@
         this.vinesGrow = growVines;
     }
 
-    @Override
     public boolean generate(World worldIn, Random rand, BlockPos position)
     {
         int i = rand.nextInt(3) + this.minTreeHeight;
         boolean flag = true;
 
-        if (position.getY() >= 1 && position.getY() + i + 1 <= 256)
+        if (position.getY() >= 1 && position.getY() + i + 1 <= worldIn.getHeight())
         {
-            for (int j = position.getY(); j <= position.getY() + 1 + i; j++)
+            for (int j = position.getY(); j <= position.getY() + 1 + i; ++j)
             {
                 int k = 1;
 
@@ -66,15 +62,18 @@
 
                 BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-                for (int l = position.getX() - k; l <= position.getX() + k && flag; l++)
+                for (int l = position.getX() - k; l <= position.getX() + k && flag; ++l)
                 {
-                    for (int i1 = position.getZ() - k; i1 <= position.getZ() + k && flag; i1++)
+                    for (int i1 = position.getZ() - k; i1 <= position.getZ() + k && flag; ++i1)
                     {
-                        if (j < 0 || j >= 256)
+                        if (j >= 0 && j < worldIn.getHeight())
                         {
-                            flag = false;
+                            if (!this.isReplaceable(worldIn,blockpos$mutableblockpos.setPos(l, j, i1)))
+                            {
+                                flag = false;
+                            }
                         }
-                        else if (!this.canGrowInto(worldIn.getBlockState(blockpos$mutableblockpos.setPos(l, j, i1)).getBlock()))
+                        else
                         {
                             flag = false;
                         }
@@ -88,34 +87,33 @@
             }
             else
             {
-                Block block = worldIn.getBlockState(position.down()).getBlock();
+                IBlockState state = worldIn.getBlockState(position.down());
 
-                if ((block == Blocks.GRASS || block == Blocks.DIRT || block == Blocks.FARMLAND)
-                        && position.getY() < 256 - i - 1)
+                if (state.getBlock().canSustainPlant(state, worldIn, position.down(), net.minecraft.util.EnumFacing.UP, (net.minecraft.block.BlockSapling)Blocks.SAPLING) && position.getY() < worldIn.getHeight() - i - 1)
                 {
-                    this.setDirtAt(worldIn, position.down());
+                    state.getBlock().onPlantGrow(state, worldIn, position.down(), position);
                     int k2 = 3;
                     int l2 = 0;
 
-                    for (int i3 = position.getY() - 3 + i; i3 <= position.getY() + i; i3++)
+                    for (int i3 = position.getY() - 3 + i; i3 <= position.getY() + i; ++i3)
                     {
                         int i4 = i3 - (position.getY() + i);
                         int j1 = 1 - i4 / 2;
 
-                        for (int k1 = position.getX() - j1; k1 <= position.getX() + j1; k1++)
+                        for (int k1 = position.getX() - j1; k1 <= position.getX() + j1; ++k1)
                         {
                             int l1 = k1 - position.getX();
 
-                            for (int i2 = position.getZ() - j1; i2 <= position.getZ() + j1; i2++)
+                            for (int i2 = position.getZ() - j1; i2 <= position.getZ() + j1; ++i2)
                             {
                                 int j2 = i2 - position.getZ();
 
                                 if (Math.abs(l1) != j1 || Math.abs(j2) != j1 || rand.nextInt(2) != 0 && i4 != 0)
                                 {
                                     BlockPos blockpos = new BlockPos(k1, i3, i2);
-                                    Material material = worldIn.getBlockState(blockpos).getMaterial();
+                                    state = worldIn.getBlockState(blockpos);
 
-                                    if (material == Material.AIR || material == Material.LEAVES || material == Material.VINE)
+                                    if (state.getBlock().isAir(state, worldIn, blockpos) || state.getBlock().isLeaves(state, worldIn, blockpos) || state.getMaterial() == Material.VINE)
                                     {
                                         this.setBlockAndNotifyAdequately(worldIn, blockpos, this.metaLeaves);
                                     }
@@ -124,11 +122,12 @@
                         }
                     }
 
-                    for (int j3 = 0; j3 < i; j3++)
+                    for (int j3 = 0; j3 < i; ++j3)
                     {
-                        Material material1 = worldIn.getBlockState(position.up(j3)).getMaterial();
+                        BlockPos upN = position.up(j3);
+                        state = worldIn.getBlockState(upN);
 
-                        if (material1 == Material.AIR || material1 == Material.LEAVES || material1 == Material.VINE)
+                        if (state.getBlock().isAir(state, worldIn, upN) || state.getBlock().isLeaves(state, worldIn, upN) || state.getMaterial() == Material.VINE)
                         {
                             this.setBlockAndNotifyAdequately(worldIn, position.up(j3), this.metaWood);
 
@@ -159,41 +158,42 @@
 
                     if (this.vinesGrow)
                     {
-                        for (int k3 = position.getY() - 3 + i; k3 <= position.getY() + i; k3++)
+                        for (int k3 = position.getY() - 3 + i; k3 <= position.getY() + i; ++k3)
                         {
                             int j4 = k3 - (position.getY() + i);
                             int k4 = 2 - j4 / 2;
                             BlockPos.MutableBlockPos blockpos$mutableblockpos1 = new BlockPos.MutableBlockPos();
 
-                            for (int l4 = position.getX() - k4; l4 <= position.getX() + k4; l4++)
+                            for (int l4 = position.getX() - k4; l4 <= position.getX() + k4; ++l4)
                             {
-                                for (int i5 = position.getZ() - k4; i5 <= position.getZ() + k4; i5++)
+                                for (int i5 = position.getZ() - k4; i5 <= position.getZ() + k4; ++i5)
                                 {
                                     blockpos$mutableblockpos1.setPos(l4, k3, i5);
 
-                                    if (worldIn.getBlockState(blockpos$mutableblockpos1).getMaterial() == Material.LEAVES)
+                                    state = worldIn.getBlockState(blockpos$mutableblockpos1);
+                                    if (state.getBlock().isLeaves(state, worldIn, blockpos$mutableblockpos1))
                                     {
                                         BlockPos blockpos2 = blockpos$mutableblockpos1.west();
                                         BlockPos blockpos3 = blockpos$mutableblockpos1.east();
                                         BlockPos blockpos4 = blockpos$mutableblockpos1.north();
                                         BlockPos blockpos1 = blockpos$mutableblockpos1.south();
 
-                                        if (rand.nextInt(4) == 0 && worldIn.getBlockState(blockpos2).getMaterial() == Material.AIR)
+                                        if (rand.nextInt(4) == 0 && worldIn.isAirBlock(blockpos2))
                                         {
                                             this.addHangingVine(worldIn, blockpos2, BlockVine.EAST);
                                         }
 
-                                        if (rand.nextInt(4) == 0 && worldIn.getBlockState(blockpos3).getMaterial() == Material.AIR)
+                                        if (rand.nextInt(4) == 0 && worldIn.isAirBlock(blockpos3))
                                         {
                                             this.addHangingVine(worldIn, blockpos3, BlockVine.WEST);
                                         }
 
-                                        if (rand.nextInt(4) == 0 && worldIn.getBlockState(blockpos4).getMaterial() == Material.AIR)
+                                        if (rand.nextInt(4) == 0 && worldIn.isAirBlock(blockpos4))
                                         {
                                             this.addHangingVine(worldIn, blockpos4, BlockVine.SOUTH);
                                         }
 
-                                        if (rand.nextInt(4) == 0 && worldIn.getBlockState(blockpos1).getMaterial() == Material.AIR)
+                                        if (rand.nextInt(4) == 0 && worldIn.isAirBlock(blockpos1))
                                         {
                                             this.addHangingVine(worldIn, blockpos1, BlockVine.NORTH);
                                         }
@@ -204,19 +204,14 @@
 
                         if (rand.nextInt(5) == 0 && i > 5)
                         {
-                            for (int l3 = 0; l3 < 2; l3++)
+                            for (int l3 = 0; l3 < 2; ++l3)
                             {
                                 for (EnumFacing enumfacing : EnumFacing.Plane.HORIZONTAL)
                                 {
                                     if (rand.nextInt(4 - l3) == 0)
                                     {
                                         EnumFacing enumfacing1 = enumfacing.getOpposite();
-                                        this.placeCocoa(
-                                            worldIn,
-                                            rand.nextInt(3),
-                                            position.add(enumfacing1.getXOffset(), i - 5 + l3, enumfacing1.getZOffset()),
-                                            enumfacing
-                                        );
+                                        this.placeCocoa(worldIn, rand.nextInt(3), position.add(enumfacing1.getXOffset(), i - 5 + l3, enumfacing1.getZOffset()), enumfacing);
                                     }
                                 }
                             }
@@ -239,16 +234,12 @@
 
     private void placeCocoa(World worldIn, int p_181652_2_, BlockPos pos, EnumFacing side)
     {
-        this.setBlockAndNotifyAdequately(
-            worldIn,
-            pos,
-            Blocks.COCOA.getDefaultState().withProperty(BlockCocoa.AGE, p_181652_2_).withProperty(BlockCocoa.FACING, side)
-        );
+        this.setBlockAndNotifyAdequately(worldIn, pos, Blocks.COCOA.getDefaultState().withProperty(BlockCocoa.AGE, Integer.valueOf(p_181652_2_)).withProperty(BlockCocoa.FACING, side));
     }
 
     private void addVine(World worldIn, BlockPos pos, PropertyBool prop)
     {
-        this.setBlockAndNotifyAdequately(worldIn, pos, Blocks.VINE.getDefaultState().withProperty(prop, true));
+        this.setBlockAndNotifyAdequately(worldIn, pos, Blocks.VINE.getDefaultState().withProperty(prop, Boolean.valueOf(true)));
     }
 
     private void addHangingVine(World worldIn, BlockPos pos, PropertyBool prop)
@@ -256,7 +247,7 @@
         this.addVine(worldIn, pos, prop);
         int i = 4;
 
-        for (BlockPos blockpos = pos.down(); worldIn.getBlockState(blockpos).getMaterial() == Material.AIR && i > 0; i--)
+        for (BlockPos blockpos = pos.down(); worldIn.isAirBlock(blockpos) && i > 0; --i)
         {
             this.addVine(worldIn, blockpos, prop);
             blockpos = blockpos.down();
