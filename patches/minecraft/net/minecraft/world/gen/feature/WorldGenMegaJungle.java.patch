--- before/net/minecraft/world/gen/feature/WorldGenMegaJungle.java
+++ after/net/minecraft/world/gen/feature/WorldGenMegaJungle.java
@@ -16,7 +16,6 @@
         super(notify, baseHeightIn, extraRandomHeightIn, woodMetadataIn, p_i46448_5_);
     }
 
-    @Override
     public boolean generate(World worldIn, Random rand, BlockPos position)
     {
         int i = this.getHeight(rand);
@@ -31,11 +30,11 @@
 
             for (int j = position.getY() + i - 2 - rand.nextInt(4); j > position.getY() + i / 2; j -= 2 + rand.nextInt(4))
             {
-                float f = rand.nextFloat() * (float)(Math.PI * 2);
+                float f = rand.nextFloat() * ((float)Math.PI * 2F);
                 int k = position.getX() + (int)(0.5F + MathHelper.cos(f) * 4.0F);
                 int l = position.getZ() + (int)(0.5F + MathHelper.sin(f) * 4.0F);
 
-                for (int i1 = 0; i1 < 5; i1++)
+                for (int i1 = 0; i1 < 5; ++i1)
                 {
                     k = position.getX() + (int)(1.5F + MathHelper.cos(f) * (float)i1);
                     l = position.getZ() + (int)(1.5F + MathHelper.sin(f) * (float)i1);
@@ -45,18 +44,18 @@
                 int j2 = 1 + rand.nextInt(2);
                 int j1 = j;
 
-                for (int k1 = j - j2; k1 <= j1; k1++)
+                for (int k1 = j - j2; k1 <= j1; ++k1)
                 {
                     int l1 = k1 - j1;
                     this.growLeavesLayer(worldIn, new BlockPos(k, k1, l), 1 - l1);
                 }
             }
 
-            for (int i2 = 0; i2 < i; i2++)
+            for (int i2 = 0; i2 < i; ++i2)
             {
                 BlockPos blockpos = position.up(i2);
 
-                if (this.canGrowInto(worldIn.getBlockState(blockpos).getBlock()))
+                if (this.isAirLeaves(worldIn,blockpos))
                 {
                     this.setBlockAndNotifyAdequately(worldIn, blockpos, this.woodMetadata);
 
@@ -71,7 +70,7 @@
                 {
                     BlockPos blockpos1 = blockpos.east();
 
-                    if (this.canGrowInto(worldIn.getBlockState(blockpos1).getBlock()))
+                    if (this.isAirLeaves(worldIn,blockpos1))
                     {
                         this.setBlockAndNotifyAdequately(worldIn, blockpos1, this.woodMetadata);
 
@@ -84,7 +83,7 @@
 
                     BlockPos blockpos2 = blockpos.south().east();
 
-                    if (this.canGrowInto(worldIn.getBlockState(blockpos2).getBlock()))
+                    if (this.isAirLeaves(worldIn,blockpos2))
                     {
                         this.setBlockAndNotifyAdequately(worldIn, blockpos2, this.woodMetadata);
 
@@ -97,7 +96,7 @@
 
                     BlockPos blockpos3 = blockpos.south();
 
-                    if (this.canGrowInto(worldIn.getBlockState(blockpos3).getBlock()))
+                    if (this.isAirLeaves(worldIn,blockpos3))
                     {
                         this.setBlockAndNotifyAdequately(worldIn, blockpos3, this.woodMetadata);
 
@@ -118,7 +117,7 @@
     {
         if (p_181632_2_.nextInt(3) > 0 && p_181632_1_.isAirBlock(p_181632_3_))
         {
-            this.setBlockAndNotifyAdequately(p_181632_1_, p_181632_3_, Blocks.VINE.getDefaultState().withProperty(p_181632_4_, true));
+            this.setBlockAndNotifyAdequately(p_181632_1_, p_181632_3_, Blocks.VINE.getDefaultState().withProperty(p_181632_4_, Boolean.valueOf(true)));
         }
     }
 
@@ -126,9 +125,16 @@
     {
         int i = 2;
 
-        for (int j = -2; j <= 0; j++)
+        for (int j = -2; j <= 0; ++j)
         {
             this.growLeavesLayerStrict(worldIn, p_175930_2_.up(j), p_175930_3_ + 1 - j);
         }
+    }
+
+    //Helper macro
+    private boolean isAirLeaves(World world, BlockPos pos)
+    {
+        IBlockState state = world.getBlockState(pos);
+        return state.getBlock().isAir(state, world, pos) || state.getBlock().isLeaves(state, world, pos);
     }
 }
