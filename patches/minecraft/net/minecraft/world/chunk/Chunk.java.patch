--- before/net/minecraft/world/chunk/Chunk.java
+++ after/net/minecraft/world/chunk/Chunk.java
@@ -41,21 +41,21 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class Chunk
+public class Chunk implements net.minecraftforge.common.capabilities.ICapabilityProvider
 {
     private static final Logger field_150817_t = LogManager.getLogger();
     public static final ExtendedBlockStorage field_186036_a = null;
-    private final ExtendedBlockStorage[] field_76652_q = new ExtendedBlockStorage[16];
-    private final byte[] field_76651_r = new byte[256];
-    private final int[] field_76638_b = new int[256];
-    private final boolean[] field_76639_c = new boolean[256];
+    private final ExtendedBlockStorage[] field_76652_q;
+    private final byte[] field_76651_r;
+    private final int[] field_76638_b;
+    private final boolean[] field_76639_c;
     private boolean field_76636_d;
     private final World field_76637_e;
     private final int[] field_76634_f;
     public final int field_76635_g;
     public final int field_76647_h;
     private boolean field_76650_s;
-    private final Map<BlockPos, TileEntity> field_150816_i = Maps.newHashMap();
+    private final Map<BlockPos, TileEntity> field_150816_i;
     private final ClassInheritanceMultiMap<Entity>[] field_76645_j;
     private boolean field_76646_k;
     private boolean field_150814_l;
@@ -65,13 +65,20 @@
     private long field_76641_n;
     private int field_82912_p;
     private long field_111204_q;
-    private int field_76649_t = 4096;
-    private final ConcurrentLinkedQueue<BlockPos> field_177447_w = Queues.newConcurrentLinkedQueue();
+    private int field_76649_t;
+    private final ConcurrentLinkedQueue<BlockPos> field_177447_w;
     public boolean field_189550_d;
 
     public Chunk(World p_i1995_1_, int p_i1995_2_, int p_i1995_3_)
     {
-        this.field_76645_j = new ClassInheritanceMultiMap[16];
+        this.field_76652_q = new ExtendedBlockStorage[16];
+        this.field_76651_r = new byte[256];
+        this.field_76638_b = new int[256];
+        this.field_76639_c = new boolean[256];
+        this.field_150816_i = Maps.<BlockPos, TileEntity>newHashMap();
+        this.field_76649_t = 4096;
+        this.field_177447_w = Queues.<BlockPos>newConcurrentLinkedQueue();
+        this.field_76645_j = (ClassInheritanceMultiMap[])(new ClassInheritanceMultiMap[16]);
         this.field_76637_e = p_i1995_1_;
         this.field_76635_g = p_i1995_2_;
         this.field_76647_h = p_i1995_3_;
@@ -79,11 +86,12 @@
 
         for (int i = 0; i < this.field_76645_j.length; ++i)
         {
-            this.field_76645_j[i] = new ClassInheritanceMultiMap<>(Entity.class);
+            this.field_76645_j[i] = new ClassInheritanceMultiMap(Entity.class);
         }
 
         Arrays.fill(this.field_76638_b, -999);
         Arrays.fill(this.field_76651_r, (byte) - 1);
+        capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities(this);
     }
 
     public Chunk(World p_i45645_1_, ChunkPrimer p_i45645_2_, int p_i45645_3_, int p_i45645_4_)
@@ -172,7 +180,7 @@
                 {
                     IBlockState iblockstate = this.func_186032_a(j, l - 1, k);
 
-                    if (iblockstate.func_185891_c() != 0)
+                    if (this.func_150808_b(j, l - 1, k) != 0)
                     {
                         this.field_76634_f[k << 4 | j] = l;
 
@@ -243,7 +251,9 @@
                             }
                         }
 
-                        if (--i1 <= 0 || k1 <= 0)
+                        --i1;
+
+                        if (i1 <= 0 || k1 <= 0)
                         {
                             break;
                         }
@@ -335,7 +345,7 @@
 
     private void func_76615_h(int p_76615_1_, int p_76615_2_, int p_76615_3_)
     {
-        int i = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_] & 0xFF;
+        int i = this.field_76634_f[p_76615_3_ << 4 | p_76615_1_] & 255;
         int j = i;
 
         if (p_76615_2_ > i)
@@ -388,7 +398,8 @@
 
                 while (j > 0 && k1 > 0)
                 {
-                    int i2 = this.func_150808_b(p_76615_1_, --j, p_76615_3_);
+                    --j;
+                    int i2 = this.func_150808_b(p_76615_1_, j, p_76615_3_);
 
                     if (i2 == 0)
                     {
@@ -442,12 +453,13 @@
 
     public int func_177437_b(BlockPos p_177437_1_)
     {
-        return this.func_177435_g(p_177437_1_).func_185891_c();
+        return this.func_177435_g(p_177437_1_).getLightOpacity(this.field_76637_e, p_177437_1_);
     }
 
     private int func_150808_b(int p_150808_1_, int p_150808_2_, int p_150808_3_)
     {
-        return this.func_186032_a(p_150808_1_, p_150808_2_, p_150808_3_).func_185891_c();
+        IBlockState state = this.func_186032_a(p_150808_1_, p_150808_2_, p_150808_3_); //Forge: Can sometimes be called before we are added to the global world list. So use the less accurate one during that. It'll be recalculated later
+        return !field_76636_d ? state.func_185891_c() : state.getLightOpacity(field_76637_e, new BlockPos(this.field_76635_g << 4 | p_150808_1_ & 15, p_150808_2_, this.field_76647_h << 4 | p_150808_3_ & 15));
     }
 
     public IBlockState func_177435_g(BlockPos p_177435_1_)
@@ -529,6 +541,7 @@
         {
             Block block = p_177436_2_.func_177230_c();
             Block block1 = iblockstate.func_177230_c();
+            int k1 = iblockstate.getLightOpacity(this.field_76637_e, p_177436_1_); // Relocate old light value lookup here, so that it is called before TE is removed.
             ExtendedBlockStorage extendedblockstorage = this.field_76652_q[j >> 4];
             boolean flag = false;
 
@@ -546,14 +559,19 @@
 
             extendedblockstorage.func_177484_a(i, j & 15, k, p_177436_2_);
 
-            if (block1 != block)
+            //if (block1 != block)
             {
                 if (!this.field_76637_e.field_72995_K)
                 {
+                    if (block1 != block) //Only fire block breaks when the block changes.
                     block1.func_180663_b(this.field_76637_e, p_177436_1_, iblockstate);
+                    TileEntity te = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
+                    if (te != null && te.shouldRefresh(this.field_76637_e, p_177436_1_, iblockstate, p_177436_2_)) this.field_76637_e.func_175713_t(p_177436_1_);
                 }
-                else if (block1 instanceof ITileEntityProvider)
+                else if (block1.hasTileEntity(iblockstate))
                 {
+                    TileEntity te = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
+                    if (te != null && te.shouldRefresh(this.field_76637_e, p_177436_1_, iblockstate, p_177436_2_))
                     this.field_76637_e.func_175713_t(p_177436_1_);
                 }
             }
@@ -570,8 +588,7 @@
                 }
                 else
                 {
-                    int j1 = p_177436_2_.func_185891_c();
-                    int k1 = iblockstate.func_185891_c();
+                    int j1 = p_177436_2_.getLightOpacity(this.field_76637_e, p_177436_1_);
 
                     if (j1 > 0)
                     {
@@ -591,28 +608,19 @@
                     }
                 }
 
-                if (block1 instanceof ITileEntityProvider)
-                {
-                    TileEntity tileentity = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
-
-                    if (tileentity != null)
-                    {
-                        tileentity.func_145836_u();
-                    }
-                }
-
-                if (!this.field_76637_e.field_72995_K && block1 != block)
+                // If capturing blocks, only run block physics for TE's. Non-TE's are handled in ForgeHooks.onPlaceItemIntoWorld
+                if (!this.field_76637_e.field_72995_K && block1 != block && (!this.field_76637_e.captureBlockSnapshots || block.hasTileEntity(p_177436_2_)))
                 {
                     block.func_176213_c(this.field_76637_e, p_177436_1_, p_177436_2_);
                 }
 
-                if (block instanceof ITileEntityProvider)
+                if (block.hasTileEntity(p_177436_2_))
                 {
                     TileEntity tileentity1 = this.func_177424_a(p_177436_1_, Chunk.EnumCreateEntityType.CHECK);
 
                     if (tileentity1 == null)
                     {
-                        tileentity1 = ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, block.func_176201_c(p_177436_2_));
+                        tileentity1 = block.createTileEntity(this.field_76637_e, p_177436_2_);
                         this.field_76637_e.func_175690_a(p_177436_1_, tileentity1);
                     }
 
@@ -687,14 +695,12 @@
 
         if (extendedblockstorage == field_186036_a)
         {
-            return this.field_76637_e.field_73011_w.func_191066_m() && p_177443_2_ < EnumSkyBlock.SKY.field_77198_c
-                   ? EnumSkyBlock.SKY.field_77198_c - p_177443_2_
-                   : 0;
+            return this.field_76637_e.field_73011_w.func_191066_m() && p_177443_2_ < EnumSkyBlock.SKY.field_77198_c ? EnumSkyBlock.SKY.field_77198_c - p_177443_2_ : 0;
         }
         else
         {
             int l = !this.field_76637_e.field_73011_w.func_191066_m() ? 0 : extendedblockstorage.func_76670_c(i, j & 15, k);
-            l -= p_177443_2_;
+            l = l - p_177443_2_;
             int i1 = extendedblockstorage.func_76674_d(i, j & 15, k);
 
             if (i1 > l)
@@ -709,16 +715,16 @@
     public void func_76612_a(Entity p_76612_1_)
     {
         this.field_76644_m = true;
-        int i = MathHelper.func_76128_c(p_76612_1_.field_70165_t / 16.0);
-        int j = MathHelper.func_76128_c(p_76612_1_.field_70161_v / 16.0);
+        int i = MathHelper.func_76128_c(p_76612_1_.field_70165_t / 16.0D);
+        int j = MathHelper.func_76128_c(p_76612_1_.field_70161_v / 16.0D);
 
         if (i != this.field_76635_g || j != this.field_76647_h)
         {
-            field_150817_t.warn("Wrong location! ({}, {}) should be ({}, {}), {}", i, j, this.field_76635_g, this.field_76647_h, p_76612_1_);
+            field_150817_t.warn("Wrong location! ({}, {}) should be ({}, {}), {}", Integer.valueOf(i), Integer.valueOf(j), Integer.valueOf(this.field_76635_g), Integer.valueOf(this.field_76647_h), p_76612_1_);
             p_76612_1_.func_70106_y();
         }
 
-        int k = MathHelper.func_76128_c(p_76612_1_.field_70163_u / 16.0);
+        int k = MathHelper.func_76128_c(p_76612_1_.field_70163_u / 16.0D);
 
         if (k < 0)
         {
@@ -730,11 +736,13 @@
             k = this.field_76645_j.length - 1;
         }
 
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityEvent.EnteringChunk(p_76612_1_, this.field_76635_g, this.field_76647_h, p_76612_1_.field_70176_ah, p_76612_1_.field_70164_aj));
         p_76612_1_.field_70175_ag = true;
         p_76612_1_.field_70176_ah = this.field_76635_g;
         p_76612_1_.field_70162_ai = k;
         p_76612_1_.field_70164_aj = this.field_76647_h;
         this.field_76645_j[k].add(p_76612_1_);
+        this.func_76630_e(); // Forge - ensure chunks are marked to save after an entity add
     }
 
     public void func_76622_b(Entity p_76622_1_)
@@ -755,6 +763,7 @@
         }
 
         this.field_76645_j[p_76608_2_].remove(p_76608_1_);
+        this.func_76630_e(); // Forge - ensure chunks are marked to save after entity removals
     }
 
     public boolean func_177444_d(BlockPos p_177444_1_)
@@ -770,9 +779,7 @@
     {
         IBlockState iblockstate = this.func_177435_g(p_177422_1_);
         Block block = iblockstate.func_177230_c();
-        return !block.func_149716_u()
-               ? null
-               : ((ITileEntityProvider)block).func_149915_a(this.field_76637_e, iblockstate.func_177230_c().func_176201_c(iblockstate));
+        return !block.hasTileEntity(iblockstate) ? null : block.createTileEntity(this.field_76637_e, iblockstate);
     }
 
     @Nullable
@@ -780,6 +787,12 @@
     {
         TileEntity tileentity = this.field_150816_i.get(p_177424_1_);
 
+        if (tileentity != null && tileentity.func_145837_r())
+        {
+            field_150816_i.remove(p_177424_1_);
+            tileentity = null;
+        }
+
         if (tileentity == null)
         {
             if (p_177424_2_ == Chunk.EnumCreateEntityType.IMMEDIATE)
@@ -789,13 +802,8 @@
             }
             else if (p_177424_2_ == Chunk.EnumCreateEntityType.QUEUED)
             {
-                this.field_177447_w.add(p_177424_1_);
+                this.field_177447_w.add(p_177424_1_.func_185334_h());
             }
-        }
-        else if (tileentity.func_145837_r())
-        {
-            this.field_150816_i.remove(p_177424_1_);
-            return null;
         }
 
         return tileentity;
@@ -813,14 +821,15 @@
 
     public void func_177426_a(BlockPos p_177426_1_, TileEntity p_177426_2_)
     {
+        if (p_177426_2_.func_145831_w() != this.field_76637_e) //Forge don't call unless it's changed, could screw up bad mods.
         p_177426_2_.func_145834_a(this.field_76637_e);
         p_177426_2_.func_174878_a(p_177426_1_);
 
-        if (this.func_177435_g(p_177426_1_).func_177230_c() instanceof ITileEntityProvider)
+        if (this.func_177435_g(p_177426_1_).func_177230_c().hasTileEntity(this.func_177435_g(p_177426_1_)))
         {
             if (this.field_150816_i.containsKey(p_177426_1_))
             {
-                this.field_150816_i.get(p_177426_1_).func_145843_s();
+                ((TileEntity)this.field_150816_i.get(p_177426_1_)).func_145843_s();
             }
 
             p_177426_2_.func_145829_t();
@@ -848,12 +857,14 @@
 
         for (ClassInheritanceMultiMap<Entity> classinheritancemultimap : this.field_76645_j)
         {
-            this.field_76637_e.func_175650_b(classinheritancemultimap);
+            this.field_76637_e.func_175650_b(com.google.common.collect.ImmutableList.copyOf(classinheritancemultimap));
         }
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Load(this));
     }
 
     public void func_76623_d()
     {
+        java.util.Arrays.stream(field_76645_j).forEach(multimap -> com.google.common.collect.Lists.newArrayList(multimap.func_180215_b(net.minecraft.entity.player.EntityPlayer.class)).forEach(player -> field_76637_e.func_72866_a(player, false))); // FORGE - Fix for MC-92916
         this.field_76636_d = false;
 
         for (TileEntity tileentity : this.field_150816_i.values())
@@ -865,6 +876,7 @@
         {
             this.field_76637_e.func_175681_c(classinheritancemultimap);
         }
+        net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.ChunkEvent.Unload(this));
     }
 
     public void func_76630_e()
@@ -874,8 +886,8 @@
 
     public void func_177414_a(@Nullable Entity p_177414_1_, AxisAlignedBB p_177414_2_, List<Entity> p_177414_3_, Predicate <? super Entity > p_177414_4_)
     {
-        int i = MathHelper.func_76128_c((p_177414_2_.field_72338_b - 2.0) / 16.0);
-        int j = MathHelper.func_76128_c((p_177414_2_.field_72337_e + 2.0) / 16.0);
+        int i = MathHelper.func_76128_c((p_177414_2_.field_72338_b - World.MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.func_76128_c((p_177414_2_.field_72337_e + World.MAX_ENTITY_RADIUS) / 16.0D);
         i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
         j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
 
@@ -898,8 +910,7 @@
                         {
                             for (Entity entity1 : aentity)
                             {
-                                if (entity1 != p_177414_1_ && entity1.func_174813_aQ().func_72326_a(p_177414_2_) && (p_177414_4_ == null || p_177414_4_.apply(entity1))
-                                   )
+                                if (entity1 != p_177414_1_ && entity1.func_174813_aQ().func_72326_a(p_177414_2_) && (p_177414_4_ == null || p_177414_4_.apply(entity1)))
                                 {
                                     p_177414_3_.add(entity1);
                                 }
@@ -911,12 +922,10 @@
         }
     }
 
-    public <T extends Entity> void func_177430_a(
-        Class <? extends T > p_177430_1_, AxisAlignedBB p_177430_2_, List<T> p_177430_3_, Predicate <? super T > p_177430_4_
-    )
+    public <T extends Entity> void func_177430_a(Class <? extends T > p_177430_1_, AxisAlignedBB p_177430_2_, List<T> p_177430_3_, Predicate <? super T > p_177430_4_)
     {
-        int i = MathHelper.func_76128_c((p_177430_2_.field_72338_b - 2.0) / 16.0);
-        int j = MathHelper.func_76128_c((p_177430_2_.field_72337_e + 2.0) / 16.0);
+        int i = MathHelper.func_76128_c((p_177430_2_.field_72338_b - World.MAX_ENTITY_RADIUS) / 16.0D);
+        int j = MathHelper.func_76128_c((p_177430_2_.field_72337_e + World.MAX_ENTITY_RADIUS) / 16.0D);
         i = MathHelper.func_76125_a(i, 0, this.field_76645_j.length - 1);
         j = MathHelper.func_76125_a(j, 0, this.field_76645_j.length - 1);
 
@@ -951,14 +960,7 @@
 
     public Random func_76617_a(long p_76617_1_)
     {
-        return new Random(
-                   this.field_76637_e.func_72905_C()
-                   + (long)(this.field_76635_g * this.field_76635_g * 4987142)
-                   + (long)(this.field_76635_g * 5947611)
-                   + (long)(this.field_76647_h * this.field_76647_h) * 4392871L
-                   + (long)(this.field_76647_h * 389711)
-                   ^ p_76617_1_
-               );
+        return new Random(this.field_76637_e.func_72905_C() + (long)(this.field_76635_g * this.field_76635_g * 4987142) + (long)(this.field_76635_g * 5947611) + (long)(this.field_76647_h * this.field_76647_h) * 4392871L + (long)(this.field_76647_h * 389711) ^ p_76617_1_);
     }
 
     public boolean func_76621_g()
@@ -1001,6 +1003,9 @@
 
     protected void func_186034_a(IChunkGenerator p_186034_1_)
     {
+        if (populating != null && net.minecraftforge.common.ForgeModContainer.logCascadingWorldGeneration) logCascadingWorldGeneration();
+        ChunkPos prev = populating;
+        populating = this.func_76632_l();
         if (this.func_177419_t())
         {
             if (p_186034_1_.func_185933_a(this, this.field_76635_g, this.field_76647_h))
@@ -1012,8 +1017,10 @@
         {
             this.func_150809_p();
             p_186034_1_.func_185931_b(this.field_76635_g, this.field_76647_h);
+            net.minecraftforge.fml.common.registry.GameRegistry.generateWorld(this.field_76635_g, this.field_76647_h, this.field_76637_e, p_186034_1_, this.field_76637_e.func_72863_F());
             this.func_76630_e();
         }
+        populating = prev;
     }
 
     public BlockPos func_177440_h(BlockPos p_177440_1_)
@@ -1068,7 +1075,7 @@
         {
             BlockPos blockpos = this.field_177447_w.poll();
 
-            if (this.func_177424_a(blockpos, Chunk.EnumCreateEntityType.CHECK) == null && this.func_177435_g(blockpos).func_177230_c().func_149716_u())
+            if (this.func_177424_a(blockpos, Chunk.EnumCreateEntityType.CHECK) == null && this.func_177435_g(blockpos).func_177230_c().hasTileEntity(this.func_177435_g(blockpos)))
             {
                 TileEntity tileentity = this.func_177422_i(blockpos);
                 this.field_76637_e.func_175690_a(blockpos, tileentity);
@@ -1121,7 +1128,7 @@
     {
         if (this.field_76652_q.length != p_76602_1_.length)
         {
-            field_150817_t.warn("Could not set level chunk sections, array length is {} instead of {}", p_76602_1_.length, this.field_76652_q.length);
+            field_150817_t.warn("Could not set level chunk sections, array length is {} instead of {}", Integer.valueOf(p_76602_1_.length), Integer.valueOf(this.field_76652_q.length));
         }
         else
         {
@@ -1132,6 +1139,13 @@
     @SideOnly(Side.CLIENT)
     public void func_186033_a(PacketBuffer p_186033_1_, int p_186033_2_, boolean p_186033_3_)
     {
+        for(TileEntity tileEntity : field_150816_i.values())
+        {
+            tileEntity.func_145836_u();
+            tileEntity.func_145832_p();
+            tileEntity.func_145838_q();
+        }
+
         boolean flag = this.field_76637_e.field_73011_w.func_191066_m();
 
         for (int i = 0; i < this.field_76652_q.length; ++i)
@@ -1180,10 +1194,16 @@
         this.field_76646_k = true;
         this.func_76590_a();
 
+        List<TileEntity> invalidList = new java.util.ArrayList<TileEntity>();
+
         for (TileEntity tileentity : this.field_150816_i.values())
         {
+            if (tileentity.shouldRefresh(this.field_76637_e, tileentity.func_174877_v(), tileentity.func_145838_q().func_176203_a(tileentity.func_145832_p()), func_177435_g(tileentity.func_174877_v())))
+                invalidList.add(tileentity);
             tileentity.func_145836_u();
         }
+
+        for (TileEntity te : invalidList) te.func_145843_s();
     }
 
     public Biome func_177411_a(BlockPos p_177411_1_, BiomeProvider p_177411_2_)
@@ -1194,9 +1214,14 @@
 
         if (k == 255)
         {
-            Biome biome = p_177411_2_.func_180300_a(p_177411_1_, Biomes.field_76772_c);
+            // Forge: checking for client ensures that biomes are only generated on integrated server
+            // in singleplayer. Generating biomes on the client may corrupt the biome ID arrays on
+            // the server while they are being generated because IntCache can't be thread safe,
+            // so client and server may end up filling the same array.
+            // This is not necessary in 1.13 and newer versions.
+            Biome biome = field_76637_e.field_72995_K ? Biomes.field_76772_c : p_177411_2_.func_180300_a(p_177411_1_, Biomes.field_76772_c);
             k = Biome.func_185362_a(biome);
-            this.field_76651_r[j << 4 | i] = (byte)(k & 0xFF);
+            this.field_76651_r[j << 4 | i] = (byte)(k & 255);
         }
 
         Biome biome1 = Biome.func_150568_d(k);
@@ -1212,7 +1237,7 @@
     {
         if (this.field_76651_r.length != p_76616_1_.length)
         {
-            field_150817_t.warn("Could not set level chunk biomes, array length is {} instead of {}", p_76616_1_.length, this.field_76651_r.length);
+            field_150817_t.warn("Could not set level chunk biomes, array length is {} instead of {}", Integer.valueOf(p_76616_1_.length), Integer.valueOf(this.field_76651_r.length));
         }
         else
         {
@@ -1248,14 +1273,13 @@
                     BlockPos blockpos1 = blockpos.func_177982_a(k, (j << 4) + i1, l);
                     boolean flag = i1 == 0 || i1 == 15 || k == 0 || k == 15 || l == 0 || l == 15;
 
-                    if (this.field_76652_q[j] == field_186036_a && flag
-                            || this.field_76652_q[j] != field_186036_a && this.field_76652_q[j].func_177485_a(k, i1, l).func_185904_a() == Material.field_151579_a)
+                    if (this.field_76652_q[j] == field_186036_a && flag || this.field_76652_q[j] != field_186036_a && this.field_76652_q[j].func_177485_a(k, i1, l).func_177230_c().isAir(this.field_76652_q[j].func_177485_a(k, i1, l), this.field_76637_e, blockpos1))
                     {
                         for (EnumFacing enumfacing : EnumFacing.values())
                         {
                             BlockPos blockpos2 = blockpos1.func_177972_a(enumfacing);
 
-                            if (this.field_76637_e.func_180495_p(blockpos2).func_185906_d() > 0)
+                            if (this.field_76637_e.func_180495_p(blockpos2).getLightValue(this.field_76637_e, blockpos2) > 0)
                             {
                                 this.field_76637_e.func_175664_x(blockpos2);
                             }
@@ -1360,9 +1384,7 @@
         int i = this.func_76625_h();
         boolean flag = false;
         boolean flag1 = false;
-        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(
-            (this.field_76635_g << 4) + p_150811_1_, 0, (this.field_76647_h << 4) + p_150811_2_
-        );
+        BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos((this.field_76635_g << 4) + p_150811_1_, 0, (this.field_76647_h << 4) + p_150811_2_);
 
         for (int j = i + 16 - 1; j > this.field_76637_e.func_181545_F() || j > 0 && !flag1; --j)
         {
@@ -1388,7 +1410,7 @@
         {
             blockpos$mutableblockpos.func_181079_c(blockpos$mutableblockpos.func_177958_n(), l, blockpos$mutableblockpos.func_177952_p());
 
-            if (this.func_177435_g(blockpos$mutableblockpos).func_185906_d() > 0)
+            if (this.func_177435_g(blockpos$mutableblockpos).getLightValue(this.field_76637_e, blockpos$mutableblockpos) > 0)
             {
                 this.field_76637_e.func_175664_x(blockpos$mutableblockpos);
             }
@@ -1422,11 +1444,12 @@
     {
         if (this.field_76634_f.length != p_177420_1_.length)
         {
-            field_150817_t.warn("Could not set level chunk heightmap, array length is {} instead of {}", p_177420_1_.length, this.field_76634_f.length);
+            field_150817_t.warn("Could not set level chunk heightmap, array length is {} instead of {}", Integer.valueOf(p_177420_1_.length), Integer.valueOf(this.field_76634_f.length));
         }
         else
         {
             System.arraycopy(p_177420_1_, 0, this.field_76634_f, 0, this.field_76634_f.length);
+            this.field_82912_p = com.google.common.primitives.Ints.min(this.field_76634_f); // Forge: fix MC-117412
         }
     }
 
@@ -1495,5 +1518,56 @@
         IMMEDIATE,
         QUEUED,
         CHECK;
+    }
+
+    /* ======================================== FORGE START =====================================*/
+    /**
+     * Removes the tile entity at the specified position, only if it's
+     * marked as invalid.
+     */
+    public void removeInvalidTileEntity(BlockPos pos)
+    {
+        if (field_76636_d)
+        {
+            TileEntity entity = (TileEntity)field_150816_i.get(pos);
+            if (entity != null && entity.func_145837_r())
+            {
+                field_150816_i.remove(pos);
+            }
+        }
+    }
+
+    private static ChunkPos populating = null; // keep track of cascading chunk generation during chunk population
+
+    private void logCascadingWorldGeneration()
+    {
+        net.minecraftforge.fml.common.ModContainer activeModContainer = net.minecraftforge.fml.common.Loader.instance().activeModContainer();
+        String format = "{} loaded a new chunk {} in dimension {} ({}) while populating chunk {}, causing cascading worldgen lag.";
+
+        if (activeModContainer == null) { // vanilla minecraft has problems too (MC-114332), log it at a quieter level.
+            net.minecraftforge.fml.common.FMLLog.log.debug(format, "Minecraft", this.func_76632_l(), this.field_76637_e.field_73011_w.getDimension(), this.field_76637_e.field_73011_w.func_186058_p().func_186065_b(), populating);
+            net.minecraftforge.fml.common.FMLLog.log.debug("Consider setting 'fixVanillaCascading' to 'true' in the Forge config to fix many cases where this occurs in the base game.");
+        } else {
+            net.minecraftforge.fml.common.FMLLog.log.warn(format, activeModContainer.getName(), this.func_76632_l(), this.field_76637_e.field_73011_w.getDimension(), this.field_76637_e.field_73011_w.func_186058_p().func_186065_b(), populating);
+            net.minecraftforge.fml.common.FMLLog.log.warn("Please report this to the mod's issue tracker. This log can be disabled in the Forge config.");
+        }
+    }
+
+    private final net.minecraftforge.common.capabilities.CapabilityDispatcher capabilities;
+    @Nullable
+    public net.minecraftforge.common.capabilities.CapabilityDispatcher getCapabilities()
+    {
+        return capabilities;
+    }
+    @Override
+    public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, @Nullable EnumFacing facing)
+    {
+        return capabilities == null ? false : capabilities.hasCapability(capability, facing);
+    }
+    @Override
+    @Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable EnumFacing facing)
+    {
+        return capabilities == null ? null : capabilities.getCapability(capability, facing);
     }
 }
