--- before/net/minecraft/world/storage/SaveHandler.java
+++ after/net/minecraft/world/storage/SaveHandler.java
@@ -44,7 +44,7 @@
         if (p_i46648_3_)
         {
             this.field_75771_c.mkdirs();
-            this.field_186342_h = new TemplateManager(new File(this.field_75770_b, "structures").toString(), p_i46648_4_);
+            this.field_186342_h = new TemplateManager((new File(this.field_75770_b, "structures")).toString(), p_i46648_4_);
         }
         else
         {
@@ -77,13 +77,11 @@
         }
     }
 
-    @Override
     public File func_75765_b()
     {
         return this.field_75770_b;
     }
 
-    @Override
     public void func_75762_c() throws MinecraftException
     {
         try
@@ -103,27 +101,25 @@
                 datainputstream.close();
             }
         }
-        catch (IOException ioexception)
+        catch (IOException var7)
         {
             throw new MinecraftException("Failed to check session lock, aborting");
         }
     }
 
-    @Override
     public IChunkLoader func_75763_a(WorldProvider p_75763_1_)
     {
         throw new RuntimeException("Old Chunk Storage is no longer supported.");
     }
 
     @Nullable
-    @Override
     public WorldInfo func_75757_d()
     {
         File file1 = new File(this.field_75770_b, "level.dat");
 
         if (file1.exists())
         {
-            WorldInfo worldinfo = SaveFormatOld.func_186353_a(file1, this.field_186341_a);
+            WorldInfo worldinfo = SaveFormatOld.loadAndFix(file1, this.field_186341_a, this);
 
             if (worldinfo != null)
             {
@@ -131,17 +127,19 @@
             }
         }
 
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().confirmBackupLevelDatUse(this);
         file1 = new File(this.field_75770_b, "level.dat_old");
-        return file1.exists() ? SaveFormatOld.func_186353_a(file1, this.field_186341_a) : null;
+        return file1.exists() ? SaveFormatOld.loadAndFix(file1, this.field_186341_a, this) : null;
     }
 
-    @Override
     public void func_75755_a(WorldInfo p_75755_1_, @Nullable NBTTagCompound p_75755_2_)
     {
         NBTTagCompound nbttagcompound = p_75755_1_.func_76082_a(p_75755_2_);
         NBTTagCompound nbttagcompound1 = new NBTTagCompound();
         nbttagcompound1.func_74782_a("Data", nbttagcompound);
 
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().handleWorldDataSave(this, p_75755_1_, nbttagcompound1);
+
         try
         {
             File file1 = new File(this.field_75770_b, "level.dat_new");
@@ -174,13 +172,11 @@
         }
     }
 
-    @Override
     public void func_75761_a(WorldInfo p_75761_1_)
     {
-        this.func_75755_a(p_75761_1_, null);
+        this.func_75755_a(p_75761_1_, (NBTTagCompound)null);
     }
 
-    @Override
     public void func_75753_a(EntityPlayer p_75753_1_)
     {
         try
@@ -196,15 +192,15 @@
             }
 
             file1.renameTo(file2);
+            net.minecraftforge.event.ForgeEventFactory.firePlayerSavingEvent(p_75753_1_, this.field_75771_c, p_75753_1_.func_110124_au().toString());
         }
-        catch (Exception exception)
+        catch (Exception var5)
         {
-            field_151478_a.warn("Failed to save player data for {}", p_75753_1_.func_70005_c_());
+            field_151478_a.warn("Failed to save player data for {}", (Object)p_75753_1_.func_70005_c_());
         }
     }
 
     @Nullable
-    @Override
     public NBTTagCompound func_75752_b(EntityPlayer p_75752_1_)
     {
         NBTTagCompound nbttagcompound = null;
@@ -218,9 +214,9 @@
                 nbttagcompound = CompressedStreamTools.func_74796_a(new FileInputStream(file1));
             }
         }
-        catch (Exception exception)
+        catch (Exception var4)
         {
-            field_151478_a.warn("Failed to load player data for {}", p_75752_1_.func_70005_c_());
+            field_151478_a.warn("Failed to load player data for {}", (Object)p_75752_1_.func_70005_c_());
         }
 
         if (nbttagcompound != null)
@@ -228,16 +224,15 @@
             p_75752_1_.func_70020_e(this.field_186341_a.func_188257_a(FixTypes.PLAYER, nbttagcompound));
         }
 
+        net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_75752_1_, field_75771_c, p_75752_1_.func_110124_au().toString());
         return nbttagcompound;
     }
 
-    @Override
     public IPlayerFileData func_75756_e()
     {
         return this;
     }
 
-    @Override
     public String[] func_75754_f()
     {
         String[] astring = this.field_75771_c.list();
@@ -258,20 +253,35 @@
         return astring;
     }
 
-    @Override
     public void func_75759_a()
     {
     }
 
-    @Override
     public File func_75758_b(String p_75758_1_)
     {
         return new File(this.field_75768_d, p_75758_1_ + ".dat");
     }
 
-    @Override
     public TemplateManager func_186340_h()
     {
         return this.field_186342_h;
+    }
+
+    public NBTTagCompound getPlayerNBT(net.minecraft.entity.player.EntityPlayerMP player)
+    {
+        try
+        {
+            File file1 = new File(this.field_75771_c, player.func_110124_au().toString() + ".dat");
+
+            if (file1.exists() && file1.isFile())
+            {
+                return CompressedStreamTools.func_74796_a(new FileInputStream(file1));
+            }
+        }
+        catch (Exception exception)
+        {
+            field_151478_a.warn("Failed to load player data for " + player.func_70005_c_());
+        }
+        return null;
     }
 }
