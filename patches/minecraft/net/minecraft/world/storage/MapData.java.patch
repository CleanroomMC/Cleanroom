--- before/net/minecraft/world/storage/MapData.java
+++ after/net/minecraft/world/storage/MapData.java
@@ -20,14 +20,14 @@
 {
     public int xCenter;
     public int zCenter;
-    public byte dimension;
+    public int dimension; //FML byte -> int
     public boolean trackingPosition;
     public boolean unlimitedTracking;
     public byte scale;
     public byte[] colors = new byte[16384];
-    public List<MapData.MapInfo> playersArrayList = Lists.newArrayList();
-    private final Map<EntityPlayer, MapData.MapInfo> playersHashMap = Maps.newHashMap();
-    public Map<String, MapDecoration> mapDecorations = Maps.newLinkedHashMap();
+    public List<MapData.MapInfo> playersArrayList = Lists.<MapData.MapInfo>newArrayList();
+    private final Map<EntityPlayer, MapData.MapInfo> playersHashMap = Maps.<EntityPlayer, MapData.MapInfo>newHashMap();
+    public Map<String, MapDecoration> mapDecorations = Maps.<String, MapDecoration>newLinkedHashMap();
 
     public MapData(String mapname)
     {
@@ -37,16 +37,15 @@
     public void calculateMapCenter(double x, double z, int mapScale)
     {
         int i = 128 * (1 << mapScale);
-        int j = MathHelper.floor((x + 64.0) / (double)i);
-        int k = MathHelper.floor((z + 64.0) / (double)i);
+        int j = MathHelper.floor((x + 64.0D) / (double)i);
+        int k = MathHelper.floor((z + 64.0D) / (double)i);
         this.xCenter = j * i + i / 2 - 64;
         this.zCenter = k * i + i / 2 - 64;
     }
 
-    @Override
     public void readFromNBT(NBTTagCompound nbt)
     {
-        this.dimension = nbt.getByte("dimension");
+        this.dimension = nbt.getInteger("dimension");
         this.xCenter = nbt.getInteger("xCenter");
         this.zCenter = nbt.getInteger("zCenter");
         this.scale = nbt.getByte("scale");
@@ -76,13 +75,13 @@
             int k = (128 - i) / 2;
             int l = (128 - j) / 2;
 
-            for (int i1 = 0; i1 < j; i1++)
+            for (int i1 = 0; i1 < j; ++i1)
             {
                 int j1 = i1 + l;
 
                 if (j1 >= 0 || j1 < 128)
                 {
-                    for (int k1 = 0; k1 < i; k1++)
+                    for (int k1 = 0; k1 < i; ++k1)
                     {
                         int l1 = k1 + k;
 
@@ -96,10 +95,9 @@
         }
     }
 
-    @Override
     public NBTTagCompound writeToNBT(NBTTagCompound compound)
     {
-        compound.setByte("dimension", this.dimension);
+        compound.setInteger("dimension", this.dimension);
         compound.setInteger("xCenter", this.xCenter);
         compound.setInteger("zCenter", this.zCenter);
         compound.setByte("scale", this.scale);
@@ -125,23 +123,15 @@
             this.mapDecorations.remove(player.getName());
         }
 
-        for (int i = 0; i < this.playersArrayList.size(); i++)
+        for (int i = 0; i < this.playersArrayList.size(); ++i)
         {
             MapData.MapInfo mapdata$mapinfo1 = this.playersArrayList.get(i);
 
-            if (!mapdata$mapinfo1.player.isDead
-                    && (mapdata$mapinfo1.player.inventory.hasItemStack(mapStack) || mapStack.isOnItemFrame()))
+            if (!mapdata$mapinfo1.player.isDead && (mapdata$mapinfo1.player.inventory.hasItemStack(mapStack) || mapStack.isOnItemFrame()))
             {
                 if (!mapStack.isOnItemFrame() && mapdata$mapinfo1.player.dimension == this.dimension && this.trackingPosition)
                 {
-                    this.updateDecorations(
-                        MapDecoration.Type.PLAYER,
-                        mapdata$mapinfo1.player.world,
-                        mapdata$mapinfo1.player.getName(),
-                        mapdata$mapinfo1.player.posX,
-                        mapdata$mapinfo1.player.posZ,
-                        (double)mapdata$mapinfo1.player.rotationYaw
-                    );
+                    this.updateDecorations(MapDecoration.Type.PLAYER, mapdata$mapinfo1.player.world, mapdata$mapinfo1.player.getName(), mapdata$mapinfo1.player.posX, mapdata$mapinfo1.player.posZ, (double)mapdata$mapinfo1.player.rotationYaw);
                 }
             }
             else
@@ -155,34 +145,20 @@
         {
             EntityItemFrame entityitemframe = mapStack.getItemFrame();
             BlockPos blockpos = entityitemframe.getHangingPosition();
-            this.updateDecorations(
-                MapDecoration.Type.FRAME,
-                player.world,
-                "frame-" + entityitemframe.getEntityId(),
-                (double)blockpos.getX(),
-                (double)blockpos.getZ(),
-                (double)(entityitemframe.facingDirection.getHorizontalIndex() * 90)
-            );
+            this.updateDecorations(MapDecoration.Type.FRAME, player.world, "frame-" + entityitemframe.getEntityId(), (double)blockpos.getX(), (double)blockpos.getZ(), (double)(entityitemframe.facingDirection.getHorizontalIndex() * 90));
         }
 
         if (mapStack.hasTagCompound() && mapStack.getTagCompound().hasKey("Decorations", 9))
         {
             NBTTagList nbttaglist = mapStack.getTagCompound().getTagList("Decorations", 10);
 
-            for (int j = 0; j < nbttaglist.tagCount(); j++)
+            for (int j = 0; j < nbttaglist.tagCount(); ++j)
             {
                 NBTTagCompound nbttagcompound = nbttaglist.getCompoundTagAt(j);
 
                 if (!this.mapDecorations.containsKey(nbttagcompound.getString("id")))
                 {
-                    this.updateDecorations(
-                        MapDecoration.Type.byIcon(nbttagcompound.getByte("type")),
-                        player.world,
-                        nbttagcompound.getString("id"),
-                        nbttagcompound.getDouble("x"),
-                        nbttagcompound.getDouble("z"),
-                        nbttagcompound.getDouble("rot")
-                    );
+                    this.updateDecorations(MapDecoration.Type.byIcon(nbttagcompound.getByte("type")), player.world, nbttagcompound.getString("id"), nbttagcompound.getDouble("x"), nbttagcompound.getDouble("z"), nbttagcompound.getDouble("rot"));
                 }
             }
         }
@@ -207,7 +183,7 @@
         nbttagcompound.setString("id", decorationName);
         nbttagcompound.setDouble("x", (double)target.getX());
         nbttagcompound.setDouble("z", (double)target.getZ());
-        nbttagcompound.setDouble("rot", 180.0);
+        nbttagcompound.setDouble("rot", 180.0D);
         nbttaglist.appendTag(nbttagcompound);
 
         if (type.hasMapColor())
@@ -222,19 +198,19 @@
         int i = 1 << this.scale;
         float f = (float)(worldX - (double)this.xCenter) / (float)i;
         float f1 = (float)(worldZ - (double)this.zCenter) / (float)i;
-        byte b0 = (byte)((int)((double)(f * 2.0F) + 0.5));
-        byte b1 = (byte)((int)((double)(f1 * 2.0F) + 0.5));
+        byte b0 = (byte)((int)((double)(f * 2.0F) + 0.5D));
+        byte b1 = (byte)((int)((double)(f1 * 2.0F) + 0.5D));
         int j = 63;
         byte b2;
 
         if (f >= -63.0F && f1 >= -63.0F && f <= 63.0F && f1 <= 63.0F)
         {
-            rotationIn += rotationIn < 0.0 ? -8.0 : 8.0;
-            b2 = (byte)((int)(rotationIn * 16.0 / 360.0));
+            rotationIn = rotationIn + (rotationIn < 0.0D ? -8.0D : 8.0D);
+            b2 = (byte)((int)(rotationIn * 16.0D / 360.0D));
 
-            if (this.dimension < 0)
+            if (worldIn.provider.shouldMapSpin(decorationName, worldX, worldZ, rotationIn))
             {
-                int l = (int)(worldIn.getWorldInfo().getWorldTime() / 10L);
+                int l = (int)(worldIn.getWorldTime() / 10L);
                 b2 = (byte)(l * l * 34187121 + l * 121 >> 15 & 15);
             }
         }
@@ -342,33 +318,11 @@
             if (this.isDirty)
             {
                 this.isDirty = false;
-                return new SPacketMaps(
-                           stack.getMetadata(),
-                           MapData.this.scale,
-                           MapData.this.trackingPosition,
-                           MapData.this.mapDecorations.values(),
-                           MapData.this.colors,
-                           this.minX,
-                           this.minY,
-                           this.maxX + 1 - this.minX,
-                           this.maxY + 1 - this.minY
-                       );
+                return new SPacketMaps(stack.getMetadata(), MapData.this.scale, MapData.this.trackingPosition, MapData.this.mapDecorations.values(), MapData.this.colors, this.minX, this.minY, this.maxX + 1 - this.minX, this.maxY + 1 - this.minY);
             }
             else
             {
-                return this.tick++ % 5 == 0
-                       ? new SPacketMaps(
-                           stack.getMetadata(),
-                           MapData.this.scale,
-                           MapData.this.trackingPosition,
-                           MapData.this.mapDecorations.values(),
-                           MapData.this.colors,
-                           0,
-                           0,
-                           0,
-                           0
-                       )
-                       : null;
+                return this.tick++ % 5 == 0 ? new SPacketMaps(stack.getMetadata(), MapData.this.scale, MapData.this.trackingPosition, MapData.this.mapDecorations.values(), MapData.this.colors, 0, 0, 0, 0) : null;
             }
         }
 
