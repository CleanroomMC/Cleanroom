--- before/net/minecraft/world/border/WorldBorder.java
+++ after/net/minecraft/world/border/WorldBorder.java
@@ -11,41 +11,42 @@
 
 public class WorldBorder
 {
-    private final List<IBorderListener> listeners = Lists.newArrayList();
+    private final List<IBorderListener> listeners = Lists.<IBorderListener>newArrayList();
     private double centerX;
     private double centerZ;
-    private double startDiameter = 6.0E7;
-    private double endDiameter = this.startDiameter;
+    private double startDiameter = 6.0E7D;
+    private double endDiameter;
     private long endTime;
     private long startTime;
-    private int worldSize = 29999984;
-    private double damageAmount = 0.2;
-    private double damageBuffer = 5.0;
-    private int warningTime = 15;
-    private int warningDistance = 5;
+    private int worldSize;
+    private double damageAmount;
+    private double damageBuffer;
+    private int warningTime;
+    private int warningDistance;
+
+    public WorldBorder()
+    {
+        this.endDiameter = this.startDiameter;
+        this.worldSize = 29999984;
+        this.damageAmount = 0.2D;
+        this.damageBuffer = 5.0D;
+        this.warningTime = 15;
+        this.warningDistance = 5;
+    }
 
     public boolean contains(BlockPos pos)
     {
-        return (double)(pos.getX() + 1) > this.minX()
-               && (double)pos.getX() < this.maxX()
-               && (double)(pos.getZ() + 1) > this.minZ()
-               && (double)pos.getZ() < this.maxZ();
+        return (double)(pos.getX() + 1) > this.minX() && (double)pos.getX() < this.maxX() && (double)(pos.getZ() + 1) > this.minZ() && (double)pos.getZ() < this.maxZ();
     }
 
     public boolean contains(ChunkPos range)
     {
-        return (double)range.getXEnd() > this.minX()
-               && (double)range.getXStart() < this.maxX()
-               && (double)range.getZEnd() > this.minZ()
-               && (double)range.getZStart() < this.maxZ();
+        return (double)range.getXEnd() > this.minX() && (double)range.getXStart() < this.maxX() && (double)range.getZEnd() > this.minZ() && (double)range.getZStart() < this.maxZ();
     }
 
     public boolean contains(AxisAlignedBB bb)
     {
-        return bb.maxX > this.minX()
-               && bb.minX < this.maxX()
-               && bb.maxZ > this.minZ()
-               && bb.minZ < this.maxZ();
+        return bb.maxX > this.minX() && bb.minX < this.maxX() && bb.maxZ > this.minZ() && bb.minZ < this.maxZ();
     }
 
     public double getClosestDistance(Entity entityIn)
@@ -78,7 +79,7 @@
 
     public double minX()
     {
-        double d0 = this.getCenterX() - this.getDiameter() / 2.0;
+        double d0 = this.getCenterX() - this.getDiameter() / 2.0D;
 
         if (d0 < (double)(-this.worldSize))
         {
@@ -90,7 +91,7 @@
 
     public double minZ()
     {
-        double d0 = this.getCenterZ() - this.getDiameter() / 2.0;
+        double d0 = this.getCenterZ() - this.getDiameter() / 2.0D;
 
         if (d0 < (double)(-this.worldSize))
         {
@@ -102,7 +103,7 @@
 
     public double maxX()
     {
-        double d0 = this.getCenterX() + this.getDiameter() / 2.0;
+        double d0 = this.getCenterX() + this.getDiameter() / 2.0D;
 
         if (d0 > (double)this.worldSize)
         {
@@ -114,7 +115,7 @@
 
     public double maxZ()
     {
-        double d0 = this.getCenterZ() + this.getDiameter() / 2.0;
+        double d0 = this.getCenterZ() + this.getDiameter() / 2.0D;
 
         if (d0 > (double)this.worldSize)
         {
@@ -151,7 +152,7 @@
         {
             double d0 = (double)((float)(System.currentTimeMillis() - this.startTime) / (float)(this.endTime - this.startTime));
 
-            if (!(d0 >= 1.0))
+            if (d0 < 1.0D)
             {
                 return this.startDiameter + (this.endDiameter - this.startDiameter) * d0;
             }
@@ -251,9 +252,7 @@
     @SideOnly(Side.CLIENT)
     public double getResizeSpeed()
     {
-        return this.endTime == this.startTime
-               ? 0.0
-               : Math.abs(this.startDiameter - this.endDiameter) / (double)(this.endTime - this.startTime);
+        return this.endTime == this.startTime ? 0.0D : Math.abs(this.startDiameter - this.endDiameter) / (double)(this.endTime - this.startTime);
     }
 
     public int getWarningTime()
@@ -284,5 +283,10 @@
         {
             iborderlistener.onWarningDistanceChanged(this, warningDistance);
         }
+    }
+
+    public void removeListener(IBorderListener listener)
+    {
+        this.listeners.remove(listener);
     }
 }
