--- before/net/minecraft/world/WorldServerMulti.java
+++ after/net/minecraft/world/WorldServerMulti.java
@@ -11,57 +11,51 @@
 public class WorldServerMulti extends WorldServer
 {
     private final WorldServer delegate;
+    private IBorderListener borderListener;
 
     public WorldServerMulti(MinecraftServer server, ISaveHandler saveHandlerIn, int dimensionId, WorldServer delegate, Profiler profilerIn)
     {
         super(server, saveHandlerIn, new DerivedWorldInfo(delegate.getWorldInfo()), dimensionId, profilerIn);
         this.delegate = delegate;
-        delegate.getWorldBorder().addListener(new IBorderListener()
+        this.borderListener = new IBorderListener()
         {
-            @Override
             public void onSizeChanged(WorldBorder border, double newSize)
             {
                 WorldServerMulti.this.getWorldBorder().setTransition(newSize);
             }
-            @Override
             public void onTransitionStarted(WorldBorder border, double oldSize, double newSize, long time)
             {
                 WorldServerMulti.this.getWorldBorder().setTransition(oldSize, newSize, time);
             }
-            @Override
             public void onCenterChanged(WorldBorder border, double x, double z)
             {
                 WorldServerMulti.this.getWorldBorder().setCenter(x, z);
             }
-            @Override
             public void onWarningTimeChanged(WorldBorder border, int newTime)
             {
                 WorldServerMulti.this.getWorldBorder().setWarningTime(newTime);
             }
-            @Override
             public void onWarningDistanceChanged(WorldBorder border, int newDistance)
             {
                 WorldServerMulti.this.getWorldBorder().setWarningDistance(newDistance);
             }
-            @Override
             public void onDamageAmountChanged(WorldBorder border, double newAmount)
             {
                 WorldServerMulti.this.getWorldBorder().setDamageAmount(newAmount);
             }
-            @Override
             public void onDamageBufferChanged(WorldBorder border, double newSize)
             {
                 WorldServerMulti.this.getWorldBorder().setDamageBuffer(newSize);
             }
-        });
+        };
+        this.delegate.getWorldBorder().addListener(this.borderListener);
     }
 
-    @Override
     protected void saveLevel() throws MinecraftException
     {
+        this.perWorldStorage.saveAllData();
     }
 
-    @Override
     public World init()
     {
         this.mapStorage = this.delegate.getMapStorage();
@@ -69,12 +63,12 @@
         this.lootTable = this.delegate.getLootTableManager();
         this.advancementManager = this.delegate.getAdvancementManager();
         String s = VillageCollection.fileNameForProvider(this.provider);
-        VillageCollection villagecollection = (VillageCollection)this.mapStorage.getOrLoadData(VillageCollection.class, s);
+        VillageCollection villagecollection = (VillageCollection)this.perWorldStorage.getOrLoadData(VillageCollection.class, s);
 
         if (villagecollection == null)
         {
             this.villageCollection = new VillageCollection(this);
-            this.mapStorage.setData(s, this.villageCollection);
+            this.perWorldStorage.setData(s, this.villageCollection);
         }
         else
         {
@@ -82,7 +76,16 @@
             this.villageCollection.setWorldsForAll(this);
         }
 
+        this.initCapabilities();
         return this;
+    }
+
+
+    @Override
+    public void flush()
+    {
+        super.flush();
+        this.delegate.getWorldBorder().removeListener(this.borderListener); // Unlink ourselves, to prevent world leak.
     }
 
     public void saveAdditionalData()
