--- before/net/minecraft/world/Teleporter.java
+++ after/net/minecraft/world/Teleporter.java
@@ -15,11 +15,11 @@
 import net.minecraft.util.math.ChunkPos;
 import net.minecraft.util.math.MathHelper;
 
-public class Teleporter
+public class Teleporter implements net.minecraftforge.common.util.ITeleporter
 {
     protected final WorldServer world;
     protected final Random random;
-    protected final Long2ObjectMap<Teleporter.PortalPosition> destinationCoordinateCache = new Long2ObjectOpenHashMap<>(4096);
+    protected final Long2ObjectMap<Teleporter.PortalPosition> destinationCoordinateCache = new Long2ObjectOpenHashMap<Teleporter.PortalPosition>(4096);
 
     public Teleporter(WorldServer worldIn)
     {
@@ -45,33 +45,32 @@
             int l = 1;
             int i1 = 0;
 
-            for (int j1 = -2; j1 <= 2; j1++)
+            for (int j1 = -2; j1 <= 2; ++j1)
             {
-                for (int k1 = -2; k1 <= 2; k1++)
+                for (int k1 = -2; k1 <= 2; ++k1)
                 {
-                    for (int l1 = -1; l1 < 3; l1++)
+                    for (int l1 = -1; l1 < 3; ++l1)
                     {
                         int i2 = i + k1 * 1 + j1 * 0;
                         int j2 = j + l1;
                         int k2 = k + k1 * 0 - j1 * 1;
                         boolean flag = l1 < 0;
-                        this.world
-                        .setBlockState(new BlockPos(i2, j2, k2), flag ? Blocks.OBSIDIAN.getDefaultState() : Blocks.AIR.getDefaultState());
+                        this.world.setBlockState(new BlockPos(i2, j2, k2), flag ? Blocks.OBSIDIAN.getDefaultState() : Blocks.AIR.getDefaultState());
                     }
                 }
             }
 
             entityIn.setLocationAndAngles((double)i, (double)j, (double)k, entityIn.rotationYaw, 0.0F);
-            entityIn.motionX = 0.0;
-            entityIn.motionY = 0.0;
-            entityIn.motionZ = 0.0;
+            entityIn.motionX = 0.0D;
+            entityIn.motionY = 0.0D;
+            entityIn.motionZ = 0.0D;
         }
     }
 
     public boolean placeInExistingPortal(Entity entityIn, float rotationYaw)
     {
         int i = 128;
-        double d0 = -1.0;
+        double d0 = -1.0D;
         int j = MathHelper.floor(entityIn.posX);
         int k = MathHelper.floor(entityIn.posZ);
         boolean flag = true;
@@ -80,8 +79,8 @@
 
         if (this.destinationCoordinateCache.containsKey(l))
         {
-            Teleporter.PortalPosition teleporter$portalposition = this.destinationCoordinateCache.get(l);
-            d0 = 0.0;
+            Teleporter.PortalPosition teleporter$portalposition = (Teleporter.PortalPosition)this.destinationCoordinateCache.get(l);
+            d0 = 0.0D;
             blockpos = teleporter$portalposition;
             teleporter$portalposition.lastUpdateTime = this.world.getTotalWorldTime();
             flag = false;
@@ -90,76 +89,62 @@
         {
             BlockPos blockpos3 = new BlockPos(entityIn);
 
-            for (int i1 = -128; i1 <= 128; i1++)
+            for (int i1 = -128; i1 <= 128; ++i1)
             {
-                for (int j1 = -128; j1 <= 128; j1++)
-                {
-                    BlockPos blockpos1 = blockpos3.add(i1, this.world.getActualHeight() - 1 - blockpos3.getY(), j1);
+                BlockPos blockpos2;
 
-                    while (blockpos1.getY() >= 0)
+                for (int j1 = -128; j1 <= 128; ++j1)
+                {
+                    for (BlockPos blockpos1 = blockpos3.add(i1, this.world.getActualHeight() - 1 - blockpos3.getY(), j1); blockpos1.getY() >= 0; blockpos1 = blockpos2)
                     {
-                        BlockPos blockpos2 = blockpos1.down();
+                        blockpos2 = blockpos1.down();
 
                         if (this.world.getBlockState(blockpos1).getBlock() == Blocks.PORTAL)
                         {
-                            for (blockpos2 = blockpos1.down();
-                                    this.world.getBlockState(blockpos2).getBlock() == Blocks.PORTAL;
-                                    blockpos2 = blockpos2.down()
-                                )
+                            for (blockpos2 = blockpos1.down(); this.world.getBlockState(blockpos2).getBlock() == Blocks.PORTAL; blockpos2 = blockpos2.down())
                             {
                                 blockpos1 = blockpos2;
                             }
 
                             double d1 = blockpos1.distanceSq(blockpos3);
 
-                            if (d0 < 0.0 || d1 < d0)
+                            if (d0 < 0.0D || d1 < d0)
                             {
                                 d0 = d1;
                                 blockpos = blockpos1;
                             }
                         }
-
-                        blockpos1 = blockpos2;
                     }
                 }
             }
         }
 
-        if (d0 >= 0.0)
+        if (d0 >= 0.0D)
         {
             if (flag)
             {
                 this.destinationCoordinateCache.put(l, new Teleporter.PortalPosition(blockpos, this.world.getTotalWorldTime()));
             }
 
-            double d5 = (double)blockpos.getX() + 0.5;
-            double d7 = (double)blockpos.getZ() + 0.5;
+            double d5 = (double)blockpos.getX() + 0.5D;
+            double d7 = (double)blockpos.getZ() + 0.5D;
             BlockPattern.PatternHelper blockpattern$patternhelper = Blocks.PORTAL.createPatternHelper(this.world, blockpos);
             boolean flag1 = blockpattern$patternhelper.getForwards().rotateY().getAxisDirection() == EnumFacing.AxisDirection.NEGATIVE;
-            double d2 = blockpattern$patternhelper.getForwards().getAxis() == EnumFacing.Axis.X
-                        ? (double)blockpattern$patternhelper.getFrontTopLeft().getZ()
-                        : (double)blockpattern$patternhelper.getFrontTopLeft().getX();
-            double d6 = (double)(blockpattern$patternhelper.getFrontTopLeft().getY() + 1)
-                        - entityIn.getLastPortalVec().y * (double)blockpattern$patternhelper.getHeight();
+            double d2 = blockpattern$patternhelper.getForwards().getAxis() == EnumFacing.Axis.X ? (double)blockpattern$patternhelper.getFrontTopLeft().getZ() : (double)blockpattern$patternhelper.getFrontTopLeft().getX();
+            double d6 = (double)(blockpattern$patternhelper.getFrontTopLeft().getY() + 1) - entityIn.getLastPortalVec().y * (double)blockpattern$patternhelper.getHeight();
 
             if (flag1)
             {
-                d2++;
+                ++d2;
             }
 
             if (blockpattern$patternhelper.getForwards().getAxis() == EnumFacing.Axis.X)
             {
-                d7 = d2
-                     + (1.0 - entityIn.getLastPortalVec().x)
-                     * (double)blockpattern$patternhelper.getWidth()
-                     * (double)blockpattern$patternhelper.getForwards().rotateY().getAxisDirection().getOffset();
+                d7 = d2 + (1.0D - entityIn.getLastPortalVec().x) * (double)blockpattern$patternhelper.getWidth() * (double)blockpattern$patternhelper.getForwards().rotateY().getAxisDirection().getOffset();
             }
             else
             {
-                d5 = d2
-                     + (1.0 - entityIn.getLastPortalVec().x)
-                     * (double)blockpattern$patternhelper.getWidth()
-                     * (double)blockpattern$patternhelper.getForwards().rotateY().getAxisDirection().getOffset();
+                d5 = d2 + (1.0D - entityIn.getLastPortalVec().x) * (double)blockpattern$patternhelper.getWidth() * (double)blockpattern$patternhelper.getForwards().rotateY().getAxisDirection().getOffset();
             }
 
             float f = 0.0F;
@@ -192,9 +177,7 @@
             double d4 = entityIn.motionZ;
             entityIn.motionX = d3 * (double)f + d4 * (double)f3;
             entityIn.motionZ = d3 * (double)f2 + d4 * (double)f1;
-            entityIn.rotationYaw = rotationYaw
-                                        - (float)(entityIn.getTeleportDirection().getOpposite().getHorizontalIndex() * 90)
-                                        + (float)(blockpattern$patternhelper.getForwards().getHorizontalIndex() * 90);
+            entityIn.rotationYaw = rotationYaw - (float)(entityIn.getTeleportDirection().getOpposite().getHorizontalIndex() * 90) + (float)(blockpattern$patternhelper.getForwards().getHorizontalIndex() * 90);
 
             if (entityIn instanceof EntityPlayerMP)
             {
@@ -216,7 +199,7 @@
     public boolean makePortal(Entity entityIn)
     {
         int i = 16;
-        double d0 = -1.0;
+        double d0 = -1.0D;
         int j = MathHelper.floor(entityIn.posX);
         int k = MathHelper.floor(entityIn.posY);
         int l = MathHelper.floor(entityIn.posZ);
@@ -227,25 +210,25 @@
         int i2 = this.random.nextInt(4);
         BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos();
 
-        for (int j2 = j - 16; j2 <= j + 16; j2++)
+        for (int j2 = j - 16; j2 <= j + 16; ++j2)
         {
-            double d1 = (double)j2 + 0.5 - entityIn.posX;
+            double d1 = (double)j2 + 0.5D - entityIn.posX;
 
-            for (int l2 = l - 16; l2 <= l + 16; l2++)
+            for (int l2 = l - 16; l2 <= l + 16; ++l2)
             {
-                double d2 = (double)l2 + 0.5 - entityIn.posZ;
-                label296:
+                double d2 = (double)l2 + 0.5D - entityIn.posZ;
+                label293:
 
-                for (int j3 = this.world.getActualHeight() - 1; j3 >= 0; j3--)
+                for (int j3 = this.world.getActualHeight() - 1; j3 >= 0; --j3)
                 {
                     if (this.world.isAirBlock(blockpos$mutableblockpos.setPos(j2, j3, l2)))
                     {
                         while (j3 > 0 && this.world.isAirBlock(blockpos$mutableblockpos.setPos(j2, j3 - 1, l2)))
                         {
-                            j3--;
+                            --j3;
                         }
 
-                        for (int k3 = i2; k3 < i2 + 4; k3++)
+                        for (int k3 = i2; k3 < i2 + 4; ++k3)
                         {
                             int l3 = k3 % 2;
                             int i4 = 1 - l3;
@@ -256,30 +239,29 @@
                                 i4 = -i4;
                             }
 
-                            for (int j4 = 0; j4 < 3; j4++)
+                            for (int j4 = 0; j4 < 3; ++j4)
                             {
-                                for (int k4 = 0; k4 < 4; k4++)
+                                for (int k4 = 0; k4 < 4; ++k4)
                                 {
-                                    for (int l4 = -1; l4 < 4; l4++)
+                                    for (int l4 = -1; l4 < 4; ++l4)
                                     {
                                         int i5 = j2 + (k4 - 1) * l3 + j4 * i4;
                                         int j5 = j3 + l4;
                                         int k5 = l2 + (k4 - 1) * i4 - j4 * l3;
                                         blockpos$mutableblockpos.setPos(i5, j5, k5);
 
-                                        if (l4 < 0 && !this.world.getBlockState(blockpos$mutableblockpos).getMaterial().isSolid()
-                                                || l4 >= 0 && !this.world.isAirBlock(blockpos$mutableblockpos))
+                                        if (l4 < 0 && !this.world.getBlockState(blockpos$mutableblockpos).getMaterial().isSolid() || l4 >= 0 && !this.world.isAirBlock(blockpos$mutableblockpos))
                                         {
-                                            continue label296;
+                                            continue label293;
                                         }
                                     }
                                 }
                             }
 
-                            double d5 = (double)j3 + 0.5 - entityIn.posY;
+                            double d5 = (double)j3 + 0.5D - entityIn.posY;
                             double d7 = d1 * d1 + d5 * d5 + d2 * d2;
 
-                            if (d0 < 0.0 || d7 < d0)
+                            if (d0 < 0.0D || d7 < d0)
                             {
                                 d0 = d7;
                                 i1 = j2;
@@ -293,52 +275,51 @@
             }
         }
 
-        if (d0 < 0.0)
+        if (d0 < 0.0D)
         {
-            for (int l5 = j - 16; l5 <= j + 16; l5++)
+            for (int l5 = j - 16; l5 <= j + 16; ++l5)
             {
-                double d3 = (double)l5 + 0.5 - entityIn.posX;
+                double d3 = (double)l5 + 0.5D - entityIn.posX;
 
-                for (int j6 = l - 16; j6 <= l + 16; j6++)
+                for (int j6 = l - 16; j6 <= l + 16; ++j6)
                 {
-                    double d4 = (double)j6 + 0.5 - entityIn.posZ;
-                    label233:
+                    double d4 = (double)j6 + 0.5D - entityIn.posZ;
+                    label231:
 
-                    for (int i7 = this.world.getActualHeight() - 1; i7 >= 0; i7--)
+                    for (int i7 = this.world.getActualHeight() - 1; i7 >= 0; --i7)
                     {
                         if (this.world.isAirBlock(blockpos$mutableblockpos.setPos(l5, i7, j6)))
                         {
                             while (i7 > 0 && this.world.isAirBlock(blockpos$mutableblockpos.setPos(l5, i7 - 1, j6)))
                             {
-                                i7--;
+                                --i7;
                             }
 
-                            for (int k7 = i2; k7 < i2 + 2; k7++)
+                            for (int k7 = i2; k7 < i2 + 2; ++k7)
                             {
                                 int j8 = k7 % 2;
                                 int j9 = 1 - j8;
 
-                                for (int j10 = 0; j10 < 4; j10++)
+                                for (int j10 = 0; j10 < 4; ++j10)
                                 {
-                                    for (int j11 = -1; j11 < 4; j11++)
+                                    for (int j11 = -1; j11 < 4; ++j11)
                                     {
                                         int j12 = l5 + (j10 - 1) * j8;
                                         int i13 = i7 + j11;
                                         int j13 = j6 + (j10 - 1) * j9;
                                         blockpos$mutableblockpos.setPos(j12, i13, j13);
 
-                                        if (j11 < 0 && !this.world.getBlockState(blockpos$mutableblockpos).getMaterial().isSolid()
-                                                || j11 >= 0 && !this.world.isAirBlock(blockpos$mutableblockpos))
+                                        if (j11 < 0 && !this.world.getBlockState(blockpos$mutableblockpos).getMaterial().isSolid() || j11 >= 0 && !this.world.isAirBlock(blockpos$mutableblockpos))
                                         {
-                                            continue label233;
+                                            continue label231;
                                         }
                                     }
                                 }
 
-                                double d6 = (double)i7 + 0.5 - entityIn.posY;
+                                double d6 = (double)i7 + 0.5D - entityIn.posY;
                                 double d8 = d3 * d3 + d6 * d6 + d4 * d4;
 
-                                if (d0 < 0.0 || d8 < d0)
+                                if (d0 < 0.0D || d8 < d0)
                                 {
                                     d0 = d8;
                                     i1 = l5;
@@ -365,37 +346,34 @@
             i3 = -i3;
         }
 
-        if (d0 < 0.0)
+        if (d0 < 0.0D)
         {
             j1 = MathHelper.clamp(j1, 70, this.world.getActualHeight() - 10);
             k2 = j1;
 
-            for (int j7 = -1; j7 <= 1; j7++)
+            for (int j7 = -1; j7 <= 1; ++j7)
             {
-                for (int l7 = 1; l7 < 3; l7++)
+                for (int l7 = 1; l7 < 3; ++l7)
                 {
-                    for (int k8 = -1; k8 < 3; k8++)
+                    for (int k8 = -1; k8 < 3; ++k8)
                     {
                         int k9 = i6 + (l7 - 1) * l6 + j7 * i3;
                         int k10 = k2 + k8;
                         int k11 = k6 + (l7 - 1) * i3 - j7 * l6;
                         boolean flag = k8 < 0;
-                        this.world
-                        .setBlockState(new BlockPos(k9, k10, k11), flag ? Blocks.OBSIDIAN.getDefaultState() : Blocks.AIR.getDefaultState());
+                        this.world.setBlockState(new BlockPos(k9, k10, k11), flag ? Blocks.OBSIDIAN.getDefaultState() : Blocks.AIR.getDefaultState());
                     }
                 }
             }
         }
 
-        IBlockState iblockstate = Blocks.PORTAL
-                                  .getDefaultState()
-                                  .withProperty(BlockPortal.AXIS, l6 == 0 ? EnumFacing.Axis.Z : EnumFacing.Axis.X);
+        IBlockState iblockstate = Blocks.PORTAL.getDefaultState().withProperty(BlockPortal.AXIS, l6 == 0 ? EnumFacing.Axis.Z : EnumFacing.Axis.X);
 
-        for (int i8 = 0; i8 < 4; i8++)
+        for (int i8 = 0; i8 < 4; ++i8)
         {
-            for (int l8 = 0; l8 < 4; l8++)
+            for (int l8 = 0; l8 < 4; ++l8)
             {
-                for (int l9 = -1; l9 < 4; l9++)
+                for (int l9 = -1; l9 < 4; ++l9)
                 {
                     int l10 = i6 + (l8 - 1) * l6;
                     int l11 = k2 + l9;
@@ -405,9 +383,9 @@
                 }
             }
 
-            for (int i9 = 0; i9 < 4; i9++)
+            for (int i9 = 0; i9 < 4; ++i9)
             {
-                for (int i10 = -1; i10 < 4; i10++)
+                for (int i10 = -1; i10 < 4; ++i10)
                 {
                     int i11 = i6 + (i9 - 1) * l6;
                     int i12 = k2 + i10;
@@ -430,7 +408,7 @@
 
             while (objectiterator.hasNext())
             {
-                Teleporter.PortalPosition teleporter$portalposition = objectiterator.next();
+                Teleporter.PortalPosition teleporter$portalposition = (Teleporter.PortalPosition)objectiterator.next();
 
                 if (teleporter$portalposition == null || teleporter$portalposition.lastUpdateTime < i)
                 {
@@ -449,5 +427,14 @@
             super(pos.getX(), pos.getY(), pos.getZ());
             this.lastUpdateTime = lastUpdate;
         }
+    }
+
+    @Override
+    public void placeEntity(World world, Entity entity, float yaw)
+    {
+        if (entity instanceof EntityPlayerMP)
+            placeInPortal(entity, yaw);
+        else
+            placeInExistingPortal(entity, yaw);
     }
 }
