--- before/net/minecraft/inventory/ContainerBeacon.java
+++ after/net/minecraft/inventory/ContainerBeacon.java
@@ -20,21 +20,20 @@
         int i = 36;
         int j = 137;
 
-        for (int k = 0; k < 3; k++)
+        for (int k = 0; k < 3; ++k)
         {
-            for (int l = 0; l < 9; l++)
+            for (int l = 0; l < 9; ++l)
             {
                 this.addSlotToContainer(new Slot(playerInventory, l + k * 9 + 9, 36 + l * 18, 137 + k * 18));
             }
         }
 
-        for (int i1 = 0; i1 < 9; i1++)
+        for (int i1 = 0; i1 < 9; ++i1)
         {
             this.addSlotToContainer(new Slot(playerInventory, i1, 36 + i1 * 18, 195));
         }
     }
 
-    @Override
     public void addListener(IContainerListener listener)
     {
         super.addListener(listener);
@@ -42,7 +41,6 @@
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public void updateProgressBar(int id, int data)
     {
         this.tileBeacon.setField(id, data);
@@ -53,7 +51,6 @@
         return this.tileBeacon;
     }
 
-    @Override
     public void onContainerClosed(EntityPlayer playerIn)
     {
         super.onContainerClosed(playerIn);
@@ -69,13 +66,11 @@
         }
     }
 
-    @Override
     public boolean canInteractWith(EntityPlayer playerIn)
     {
         return this.tileBeacon.isUsableByPlayer(playerIn);
     }
 
-    @Override
     public ItemStack transferStackInSlot(EntityPlayer playerIn, int index)
     {
         ItemStack itemstack = ItemStack.EMPTY;
@@ -95,12 +90,9 @@
 
                 slot.onSlotChange(itemstack1, itemstack);
             }
-            else if (!this.beaconSlot.getHasStack() && this.beaconSlot.isItemValid(itemstack1) && itemstack1.getCount() == 1)
+            else if (this.mergeItemStack(itemstack1, 0, 1, false)) //Forge Fix Shift Clicking in beacons with stacks larger then 1.
             {
-                if (!this.mergeItemStack(itemstack1, 0, 1, false))
-                {
-                    return ItemStack.EMPTY;
-                }
+                return ItemStack.EMPTY;
             }
             else if (index >= 1 && index < 28)
             {
@@ -148,14 +140,11 @@
             super(inventoryIn, index, xIn, yIn);
         }
 
-        @Override
         public boolean isItemValid(ItemStack stack)
         {
-            Item item = stack.getItem();
-            return item == Items.EMERALD || item == Items.DIAMOND || item == Items.GOLD_INGOT || item == Items.IRON_INGOT;
+            return stack.getItem().isBeaconPayment(stack);
         }
 
-        @Override
         public int getSlotStackLimit()
         {
             return 1;
