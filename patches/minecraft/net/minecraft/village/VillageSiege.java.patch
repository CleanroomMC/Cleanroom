--- before/net/minecraft/village/VillageSiege.java
+++ after/net/minecraft/village/VillageSiege.java
@@ -1,7 +1,10 @@
 package net.minecraft.village;
 
+import java.util.Iterator;
+import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.entity.EntityLiving;
+import net.minecraft.entity.IEntityLivingData;
 import net.minecraft.entity.monster.EntityZombie;
 import net.minecraft.entity.player.EntityPlayer;
 import net.minecraft.util.math.BlockPos;
@@ -39,7 +42,7 @@
             {
                 float f = this.world.getCelestialAngle(0.0F);
 
-                if ((double)f < 0.5 || (double)f > 0.501)
+                if ((double)f < 0.5D || (double)f > 0.501D)
                 {
                     return;
                 }
@@ -67,7 +70,7 @@
 
                 if (this.nextSpawnTime > 0)
                 {
-                    this.nextSpawnTime--;
+                    --this.nextSpawnTime;
                 }
                 else
                 {
@@ -76,7 +79,7 @@
                     if (this.siegeCount > 0)
                     {
                         this.spawnZombie();
-                        this.siegeCount--;
+                        --this.siegeCount;
                     }
                     else
                     {
@@ -89,27 +92,34 @@
 
     private boolean trySetupSiege()
     {
-        for (EntityPlayer entityplayer : this.world.playerEntities)
+        List<EntityPlayer> list = this.world.playerEntities;
+        Iterator iterator = list.iterator();
+
+        while (true)
         {
+            if (!iterator.hasNext())
+            {
+                return false;
+            }
+
+            EntityPlayer entityplayer = (EntityPlayer)iterator.next();
+
             if (!entityplayer.isSpectator())
             {
                 this.village = this.world.getVillageCollection().getNearestVillage(new BlockPos(entityplayer), 1);
 
-                if (this.village != null
-                        && this.village.getNumVillageDoors() >= 10
-                        && this.village.getTicksSinceLastDoorAdding() >= 20
-                        && this.village.getNumVillagers() >= 20)
+                if (this.village != null && this.village.getNumVillageDoors() >= 10 && this.village.getTicksSinceLastDoorAdding() >= 20 && this.village.getNumVillagers() >= 20)
                 {
                     BlockPos blockpos = this.village.getCenter();
                     float f = (float)this.village.getVillageRadius();
                     boolean flag = false;
 
-                    for (int i = 0; i < 10; i++)
+                    for (int i = 0; i < 10; ++i)
                     {
-                        float f1 = this.world.rand.nextFloat() * (float)(Math.PI * 2);
-                        this.spawnX = blockpos.getX() + (int)((double)(MathHelper.cos(f1) * f) * 0.9);
+                        float f1 = this.world.rand.nextFloat() * ((float)Math.PI * 2F);
+                        this.spawnX = blockpos.getX() + (int)((double)(MathHelper.cos(f1) * f) * 0.9D);
                         this.spawnY = blockpos.getY();
-                        this.spawnZ = blockpos.getZ() + (int)((double)(MathHelper.sin(f1) * f) * 0.9);
+                        this.spawnZ = blockpos.getZ() + (int)((double)(MathHelper.sin(f1) * f) * 0.9D);
                         flag = false;
 
                         for (Village village : this.world.getVillageCollection().getVillageList())
@@ -136,15 +146,16 @@
 
                     if (vec3d != null)
                     {
-                        this.nextSpawnTime = 0;
-                        this.siegeCount = 20;
-                        return true;
+                        if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.village.VillageSiegeEvent(this, world, entityplayer, village, vec3d))) return false;
+                        break;
                     }
                 }
             }
         }
 
-        return false;
+        this.nextSpawnTime = 0;
+        this.siegeCount = 20;
+        return true;
     }
 
     private boolean spawnZombie()
@@ -162,7 +173,7 @@
             try
             {
                 entityzombie = new EntityZombie(this.world);
-                entityzombie.onInitialSpawn(this.world.getDifficultyForLocation(new BlockPos(entityzombie)), null);
+                entityzombie.onInitialSpawn(this.world.getDifficultyForLocation(new BlockPos(entityzombie)), (IEntityLivingData)null);
             }
             catch (Exception exception)
             {
@@ -181,14 +192,11 @@
     @Nullable
     private Vec3d findRandomSpawnPos(BlockPos pos)
     {
-        for (int i = 0; i < 10; i++)
+        for (int i = 0; i < 10; ++i)
         {
-            BlockPos blockpos = pos.add(
-                                    this.world.rand.nextInt(16) - 8, this.world.rand.nextInt(6) - 3, this.world.rand.nextInt(16) - 8
-                                );
+            BlockPos blockpos = pos.add(this.world.rand.nextInt(16) - 8, this.world.rand.nextInt(6) - 3, this.world.rand.nextInt(16) - 8);
 
-            if (this.village.isBlockPosWithinSqVillageRadius(blockpos)
-                    && WorldEntitySpawner.canCreatureTypeSpawnAtLocation(EntityLiving.SpawnPlacementType.ON_GROUND, this.world, blockpos))
+            if (this.village.isBlockPosWithinSqVillageRadius(blockpos) && WorldEntitySpawner.canCreatureTypeSpawnAtLocation(EntityLiving.SpawnPlacementType.ON_GROUND, this.world, blockpos))
             {
                 return new Vec3d((double)blockpos.getX(), (double)blockpos.getY(), (double)blockpos.getZ());
             }
