--- before/net/minecraft/village/Village.java
+++ after/net/minecraft/village/Village.java
@@ -26,10 +26,10 @@
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.world.World;
 
-public class Village
+public class Village implements net.minecraftforge.common.capabilities.ICapabilitySerializable<NBTTagCompound>
 {
     private World world;
-    private final List<VillageDoorInfo> villageDoorInfoList = Lists.newArrayList();
+    private final List<VillageDoorInfo> villageDoorInfoList = Lists.<VillageDoorInfo>newArrayList();
     private BlockPos centerHelper = BlockPos.ORIGIN;
     private BlockPos center = BlockPos.ORIGIN;
     private int villageRadius;
@@ -37,17 +37,19 @@
     private int tickCounter;
     private int numVillagers;
     private int noBreedTicks;
-    private final Map<String, Integer> playerReputation = Maps.newHashMap();
-    private final List<Village.VillageAggressor> villageAgressors = Lists.newArrayList();
+    private final Map<UUID, Integer> playerReputation = Maps.<UUID, Integer>newHashMap();
+    private final List<Village.VillageAggressor> villageAgressors = Lists.<Village.VillageAggressor>newArrayList();
     private int numIronGolems;
 
     public Village()
     {
+        this.capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities(this);
     }
 
     public Village(World worldIn)
     {
         this.world = worldIn;
+        this.capabilities = net.minecraftforge.event.ForgeEventFactory.gatherCapabilities(this);
     }
 
     public void setWorld(World worldIn)
@@ -82,18 +84,16 @@
                 EntityIronGolem entityirongolem = new EntityIronGolem(this.world);
                 entityirongolem.setPosition(vec3d.x, vec3d.y, vec3d.z);
                 this.world.spawnEntity(entityirongolem);
-                this.numIronGolems++;
+                ++this.numIronGolems;
             }
         }
     }
 
     private Vec3d findRandomSpawnPos(BlockPos pos, int x, int y, int z)
     {
-        for (int i = 0; i < 10; i++)
+        for (int i = 0; i < 10; ++i)
         {
-            BlockPos blockpos = pos.add(
-                                    this.world.rand.nextInt(16) - 8, this.world.rand.nextInt(6) - 3, this.world.rand.nextInt(16) - 8
-                                );
+            BlockPos blockpos = pos.add(this.world.rand.nextInt(16) - 8, this.world.rand.nextInt(6) - 3, this.world.rand.nextInt(16) - 8);
 
             if (this.isBlockPosWithinSqVillageRadius(blockpos) && this.isAreaClearAround(new BlockPos(x, y, z), blockpos))
             {
@@ -115,11 +115,11 @@
             int i = blockLocation.getX() - blockSize.getX() / 2;
             int j = blockLocation.getZ() - blockSize.getZ() / 2;
 
-            for (int k = i; k < i + blockSize.getX(); k++)
+            for (int k = i; k < i + blockSize.getX(); ++k)
             {
-                for (int l = blockLocation.getY(); l < blockLocation.getY() + blockSize.getY(); l++)
+                for (int l = blockLocation.getY(); l < blockLocation.getY() + blockSize.getY(); ++l)
                 {
-                    for (int i1 = j; i1 < j + blockSize.getZ(); i1++)
+                    for (int i1 = j; i1 < j + blockSize.getZ(); ++i1)
                     {
                         if (this.world.getBlockState(new BlockPos(k, l, i1)).isNormalCube())
                         {
@@ -135,35 +135,13 @@
 
     private void updateNumIronGolems()
     {
-        List<EntityIronGolem> list = this.world
-                                     .getEntitiesWithinAABB(
-                                         EntityIronGolem.class,
-                                         new AxisAlignedBB(
-                                             (double)(this.center.getX() - this.villageRadius),
-                                             (double)(this.center.getY() - 4),
-                                             (double)(this.center.getZ() - this.villageRadius),
-                                             (double)(this.center.getX() + this.villageRadius),
-                                             (double)(this.center.getY() + 4),
-                                             (double)(this.center.getZ() + this.villageRadius)
-                                         )
-                                     );
+        List<EntityIronGolem> list = this.world.<EntityIronGolem>getEntitiesWithinAABB(EntityIronGolem.class, new AxisAlignedBB((double)(this.center.getX() - this.villageRadius), (double)(this.center.getY() - 4), (double)(this.center.getZ() - this.villageRadius), (double)(this.center.getX() + this.villageRadius), (double)(this.center.getY() + 4), (double)(this.center.getZ() + this.villageRadius)));
         this.numIronGolems = list.size();
     }
 
     private void updateNumVillagers()
     {
-        List<EntityVillager> list = this.world
-                                    .getEntitiesWithinAABB(
-                                        EntityVillager.class,
-                                        new AxisAlignedBB(
-                                            (double)(this.center.getX() - this.villageRadius),
-                                            (double)(this.center.getY() - 4),
-                                            (double)(this.center.getZ() - this.villageRadius),
-                                            (double)(this.center.getX() + this.villageRadius),
-                                            (double)(this.center.getY() + 4),
-                                            (double)(this.center.getZ() + this.villageRadius)
-                                        )
-                                    );
+        List<EntityVillager> list = this.world.<EntityVillager>getEntitiesWithinAABB(EntityVillager.class, new AxisAlignedBB((double)(this.center.getX() - this.villageRadius), (double)(this.center.getY() - 4), (double)(this.center.getZ() - this.villageRadius), (double)(this.center.getX() + this.villageRadius), (double)(this.center.getY() + 4), (double)(this.center.getZ() + this.villageRadius)));
         this.numVillagers = list.size();
 
         if (this.numVillagers == 0)
@@ -237,7 +215,7 @@
 
             if (j > 256)
             {
-                j *= 1000;
+                j = j * 1000;
             }
             else
             {
@@ -249,22 +227,7 @@
                 BlockPos blockpos = villagedoorinfo1.getDoorBlockPos();
                 EnumFacing enumfacing = villagedoorinfo1.getInsideDirection();
 
-                if (this.world
-                        .getBlockState(blockpos.offset(enumfacing, 1))
-                        .getBlock()
-                        .isPassable(this.world, blockpos.offset(enumfacing, 1))
-                        && this.world
-                        .getBlockState(blockpos.offset(enumfacing, -1))
-                        .getBlock()
-                        .isPassable(this.world, blockpos.offset(enumfacing, -1))
-                        && this.world
-                        .getBlockState(blockpos.up().offset(enumfacing, 1))
-                        .getBlock()
-                        .isPassable(this.world, blockpos.up().offset(enumfacing, 1))
-                        && this.world
-                        .getBlockState(blockpos.up().offset(enumfacing, -1))
-                        .getBlock()
-                        .isPassable(this.world, blockpos.up().offset(enumfacing, -1)))
+                if (this.world.getBlockState(blockpos.offset(enumfacing, 1)).getBlock().isPassable(this.world, blockpos.offset(enumfacing, 1)) && this.world.getBlockState(blockpos.offset(enumfacing, -1)).getBlock().isPassable(this.world, blockpos.offset(enumfacing, -1)) && this.world.getBlockState(blockpos.up().offset(enumfacing, 1)).getBlock().isPassable(this.world, blockpos.up().offset(enumfacing, 1)) && this.world.getBlockState(blockpos.up().offset(enumfacing, -1)).getBlock().isPassable(this.world, blockpos.up().offset(enumfacing, -1)))
                 {
                     villagedoorinfo = villagedoorinfo1;
                     i = j;
@@ -286,9 +249,7 @@
         {
             for (VillageDoorInfo villagedoorinfo : this.villageDoorInfoList)
             {
-                if (villagedoorinfo.getDoorBlockPos().getX() == doorBlock.getX()
-                        && villagedoorinfo.getDoorBlockPos().getZ() == doorBlock.getZ()
-                        && Math.abs(villagedoorinfo.getDoorBlockPos().getY() - doorBlock.getY()) <= 1)
+                if (villagedoorinfo.getDoorBlockPos().getX() == doorBlock.getX() && villagedoorinfo.getDoorBlockPos().getZ() == doorBlock.getZ() && Math.abs(villagedoorinfo.getDoorBlockPos().getY() - doorBlock.getY()) <= 1)
                 {
                     return villagedoorinfo;
                 }
@@ -331,12 +292,12 @@
         double d0 = Double.MAX_VALUE;
         Village.VillageAggressor village$villageaggressor = null;
 
-        for (int i = 0; i < this.villageAgressors.size(); i++)
+        for (int i = 0; i < this.villageAgressors.size(); ++i)
         {
             Village.VillageAggressor village$villageaggressor1 = this.villageAgressors.get(i);
             double d1 = village$villageaggressor1.agressor.getDistanceSq(entitylivingbaseIn);
 
-            if (!(d1 > d0))
+            if (d1 <= d0)
             {
                 village$villageaggressor = village$villageaggressor1;
                 d0 = d1;
@@ -351,17 +312,17 @@
         double d0 = Double.MAX_VALUE;
         EntityPlayer entityplayer = null;
 
-        for (String s : this.playerReputation.keySet())
+        for (UUID s : this.playerReputation.keySet())
         {
             if (this.isPlayerReputationTooLow(s))
             {
-                EntityPlayer entityplayer1 = this.world.getPlayerEntityByName(s);
+                EntityPlayer entityplayer1 = this.world.getPlayerEntityByUUID(s);
 
                 if (entityplayer1 != null)
                 {
                     double d1 = entityplayer1.getDistanceSq(villageDefender);
 
-                    if (!(d1 > d0))
+                    if (d1 <= d0)
                     {
                         entityplayer = entityplayer1;
                         d0 = d1;
@@ -403,6 +364,7 @@
                 villagedoorinfo.resetDoorOpeningRestrictionCounter();
             }
 
+            if (world.isBlockLoaded(villagedoorinfo.getDoorBlockPos())) // Forge: check that the door block is loaded to avoid loading chunks
             if (!this.isWoodDoor(villagedoorinfo.getDoorBlockPos()) || Math.abs(this.tickCounter - villagedoorinfo.getLastActivityTimestamp()) > 1200)
             {
                 this.centerHelper = this.centerHelper.subtract(villagedoorinfo.getDoorBlockPos());
@@ -422,7 +384,15 @@
     {
         IBlockState iblockstate = this.world.getBlockState(pos);
         Block block = iblockstate.getBlock();
-        return block instanceof BlockDoor ? iblockstate.getMaterial() == Material.WOOD : false;
+
+        if (block instanceof BlockDoor)
+        {
+            return iblockstate.getMaterial() == Material.WOOD;
+        }
+        else
+        {
+            return false;
+        }
     }
 
     private void updateVillageRadiusAndCenter()
@@ -436,9 +406,7 @@
         }
         else
         {
-            this.center = new BlockPos(
-                this.centerHelper.getX() / i, this.centerHelper.getY() / i, this.centerHelper.getZ() / i
-            );
+            this.center = new BlockPos(this.centerHelper.getX() / i, this.centerHelper.getY() / i, this.centerHelper.getZ() / i);
             int j = 0;
 
             for (VillageDoorInfo villagedoorinfo : this.villageDoorInfoList)
@@ -450,23 +418,49 @@
         }
     }
 
+    @Deprecated //Hasn't worked since 1.9, use UUID version below.
     public int getPlayerReputation(String playerName)
     {
+        return this.getPlayerReputation(findUUID(playerName));
+    }
+
+    public int getPlayerReputation(UUID playerName)
+    {
         Integer integer = this.playerReputation.get(playerName);
-        return integer == null ? 0 : integer;
-    }
-
+        return integer == null ? 0 : integer.intValue();
+    }
+
+    private UUID findUUID(String name)
+    {
+        if (this.world == null || this.world.getMinecraftServer() == null)
+            return EntityPlayer.getOfflineUUID(name);
+        GameProfile profile = this.world.getMinecraftServer().getPlayerProfileCache().getGameProfileForUsername(name);
+        return profile == null ? EntityPlayer.getOfflineUUID(name) : profile.getId();
+    }
+
+    @Deprecated //Hasn't worked since 1.9, use UUID version below.
     public int modifyPlayerReputation(String playerName, int reputation)
     {
+        return this.modifyPlayerReputation(findUUID(playerName), reputation);
+    }
+
+    public int modifyPlayerReputation(UUID playerName, int reputation)
+    {
         int i = this.getPlayerReputation(playerName);
         int j = MathHelper.clamp(i + reputation, -30, 10);
-        this.playerReputation.put(playerName, j);
+        this.playerReputation.put(playerName, Integer.valueOf(j));
         return j;
     }
 
+    @Deprecated //Hasn't worked since 1.9, use UUID version below.
     public boolean isPlayerReputationTooLow(String playerName)
     {
-        return this.getPlayerReputation(playerName) <= -15;
+        return this.isPlayerReputationTooLow(findUUID(playerName));
+    }
+
+    public boolean isPlayerReputationTooLow(UUID uuid)
+    {
+        return this.getPlayerReputation(uuid) <= -15;
     }
 
     public void readVillageDataFromNBT(NBTTagCompound compound)
@@ -481,39 +475,30 @@
         this.centerHelper = new BlockPos(compound.getInteger("ACX"), compound.getInteger("ACY"), compound.getInteger("ACZ"));
         NBTTagList nbttaglist = compound.getTagList("Doors", 10);
 
-        for (int i = 0; i < nbttaglist.tagCount(); i++)
+        for (int i = 0; i < nbttaglist.tagCount(); ++i)
         {
             NBTTagCompound nbttagcompound = nbttaglist.getCompoundTagAt(i);
-            VillageDoorInfo villagedoorinfo = new VillageDoorInfo(
-                new BlockPos(nbttagcompound.getInteger("X"), nbttagcompound.getInteger("Y"), nbttagcompound.getInteger("Z")),
-                nbttagcompound.getInteger("IDX"),
-                nbttagcompound.getInteger("IDZ"),
-                nbttagcompound.getInteger("TS")
-            );
+            VillageDoorInfo villagedoorinfo = new VillageDoorInfo(new BlockPos(nbttagcompound.getInteger("X"), nbttagcompound.getInteger("Y"), nbttagcompound.getInteger("Z")), nbttagcompound.getInteger("IDX"), nbttagcompound.getInteger("IDZ"), nbttagcompound.getInteger("TS"));
             this.villageDoorInfoList.add(villagedoorinfo);
         }
 
         NBTTagList nbttaglist1 = compound.getTagList("Players", 10);
 
-        for (int j = 0; j < nbttaglist1.tagCount(); j++)
+        for (int j = 0; j < nbttaglist1.tagCount(); ++j)
         {
             NBTTagCompound nbttagcompound1 = nbttaglist1.getCompoundTagAt(j);
 
-            if (nbttagcompound1.hasKey("UUID") && this.world != null && this.world.getMinecraftServer() != null)
+            if (nbttagcompound1.hasKey("UUID"))
             {
-                PlayerProfileCache playerprofilecache = this.world.getMinecraftServer().getPlayerProfileCache();
-                GameProfile gameprofile = playerprofilecache.getProfileByUUID(UUID.fromString(nbttagcompound1.getString("UUID")));
-
-                if (gameprofile != null)
-                {
-                    this.playerReputation.put(gameprofile.getName(), nbttagcompound1.getInteger("S"));
-                }
+                this.playerReputation.put(UUID.fromString(nbttagcompound1.getString("UUID")), Integer.valueOf(nbttagcompound1.getInteger("S")));
             }
             else
             {
-                this.playerReputation.put(nbttagcompound1.getString("Name"), nbttagcompound1.getInteger("S"));
+                //World is never set here, so this will always be offline UUIDs, sadly there is no way to convert this.
+                this.playerReputation.put(findUUID(nbttagcompound1.getString("Name")), Integer.valueOf(nbttagcompound1.getInteger("S")));
             }
         }
+        if (this.capabilities != null && compound.hasKey("ForgeCaps")) this.capabilities.deserializeNBT(compound.getCompoundTag("ForgeCaps"));
     }
 
     public void writeVillageDataToNBT(NBTTagCompound compound)
@@ -547,28 +532,26 @@
         compound.setTag("Doors", nbttaglist);
         NBTTagList nbttaglist1 = new NBTTagList();
 
-        for (String s : this.playerReputation.keySet())
+        for (UUID s : this.playerReputation.keySet())
         {
             NBTTagCompound nbttagcompound1 = new NBTTagCompound();
-            PlayerProfileCache playerprofilecache = this.world.getMinecraftServer().getPlayerProfileCache();
 
             try
             {
-                GameProfile gameprofile = playerprofilecache.getGameProfileForUsername(s);
-
-                if (gameprofile != null)
                 {
-                    nbttagcompound1.setString("UUID", gameprofile.getId().toString());
-                    nbttagcompound1.setInteger("S", this.playerReputation.get(s));
+                    nbttagcompound1.setString("UUID", s.toString());
+                    nbttagcompound1.setInteger("S", ((Integer)this.playerReputation.get(s)).intValue());
                     nbttaglist1.appendTag(nbttagcompound1);
                 }
             }
-            catch (RuntimeException runtimeexception)
+            catch (RuntimeException var9)
             {
+                ;
             }
         }
 
         compound.setTag("Players", nbttaglist1);
+        if (this.capabilities != null) compound.setTag("ForgeCaps", this.capabilities.serializeNBT());
     }
 
     public void endMatingSeason()
@@ -583,7 +566,7 @@
 
     public void setDefaultPlayerReputation(int defaultReputation)
     {
-        for (String s : this.playerReputation.keySet())
+        for (UUID s : this.playerReputation.keySet())
         {
             this.modifyPlayerReputation(s, defaultReputation);
         }
@@ -600,4 +583,31 @@
             this.agressionTime = agressionTimeIn;
         }
     }
+
+    /* ======================================== FORGE START =====================================*/
+    private net.minecraftforge.common.capabilities.CapabilityDispatcher capabilities;
+    public boolean hasCapability(net.minecraftforge.common.capabilities.Capability<?> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        return capabilities == null ? false : capabilities.hasCapability(capability, facing);
+    }
+
+    @Nullable
+    public <T> T getCapability(net.minecraftforge.common.capabilities.Capability<T> capability, @Nullable net.minecraft.util.EnumFacing facing)
+    {
+        return capabilities == null ? null : capabilities.getCapability(capability, facing);
+    }
+
+    public void deserializeNBT(NBTTagCompound nbt)
+    {
+        this.readVillageDataFromNBT(nbt);;
+    }
+
+    public NBTTagCompound serializeNBT()
+    {
+        NBTTagCompound ret = new NBTTagCompound();
+        this.writeVillageDataToNBT(ret);
+        return ret;
+    }
+
+    /* ========================================= FORGE END ======================================*/
 }
