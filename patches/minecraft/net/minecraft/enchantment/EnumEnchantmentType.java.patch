--- before/net/minecraft/enchantment/EnumEnchantmentType.java
+++ after/net/minecraft/enchantment/EnumEnchantmentType.java
@@ -15,7 +15,6 @@
 public enum EnumEnchantmentType
 {
     ALL {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             for (EnumEnchantmentType enumenchantmenttype : EnumEnchantmentType.values())
@@ -30,77 +29,66 @@
         }
     },
     ARMOR {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemArmor;
         }
     },
     ARMOR_FEET {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemArmor && ((ItemArmor)itemIn).armorType == EntityEquipmentSlot.FEET;
         }
     },
     ARMOR_LEGS {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemArmor && ((ItemArmor)itemIn).armorType == EntityEquipmentSlot.LEGS;
         }
     },
     ARMOR_CHEST {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemArmor && ((ItemArmor)itemIn).armorType == EntityEquipmentSlot.CHEST;
         }
     },
     ARMOR_HEAD {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemArmor && ((ItemArmor)itemIn).armorType == EntityEquipmentSlot.HEAD;
         }
     },
     WEAPON {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemSword;
         }
     },
     DIGGER {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemTool;
         }
     },
     FISHING_ROD {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemFishingRod;
         }
     },
     BREAKABLE {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn.isDamageable();
         }
     },
     BOW {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             return itemIn instanceof ItemBow;
         }
     },
     WEARABLE {
-        @Override
         public boolean canEnchantItem(Item itemIn)
         {
             boolean flag = itemIn instanceof ItemBlock && ((ItemBlock)itemIn).getBlock() instanceof BlockPumpkin;
@@ -112,5 +100,13 @@
     {
     }
 
-    public abstract boolean canEnchantItem(Item itemIn);
+    private com.google.common.base.Predicate<Item> delegate = null;
+    private EnumEnchantmentType(com.google.common.base.Predicate<Item> delegate)
+    {
+        this.delegate = delegate;
+    }
+    public boolean canEnchantItem(Item itemIn)
+    {
+        return this.delegate == null ? false : this.delegate.apply(itemIn);
+    }
 }
