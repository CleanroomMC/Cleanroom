--- before/net/minecraft/enchantment/EnchantmentThorns.java
+++ after/net/minecraft/enchantment/EnchantmentThorns.java
@@ -17,31 +17,26 @@
         this.setName("thorns");
     }
 
-    @Override
     public int getMinEnchantability(int enchantmentLevel)
     {
         return 10 + 20 * (enchantmentLevel - 1);
     }
 
-    @Override
     public int getMaxEnchantability(int enchantmentLevel)
     {
         return super.getMinEnchantability(enchantmentLevel) + 50;
     }
 
-    @Override
     public int getMaxLevel()
     {
         return 3;
     }
 
-    @Override
     public boolean canApply(ItemStack stack)
     {
         return stack.getItem() instanceof ItemArmor ? true : super.canApply(stack);
     }
 
-    @Override
     public void onUserHurt(EntityLivingBase user, Entity attacker, int level)
     {
         Random random = user.getRNG();
@@ -56,22 +51,50 @@
 
             if (!itemstack.isEmpty())
             {
-                itemstack.damageItem(3, user);
+                damageArmor(itemstack, 3, user);
             }
         }
         else if (!itemstack.isEmpty())
         {
-            itemstack.damageItem(1, user);
+            damageArmor(itemstack, 1, user);
         }
     }
 
     public static boolean shouldHit(int level, Random rnd)
     {
-        return level <= 0 ? false : rnd.nextFloat() < 0.15F * (float)level;
+        if (level <= 0)
+        {
+            return false;
+        }
+        else
+        {
+            return rnd.nextFloat() < 0.15F * (float)level;
+        }
     }
 
     public static int getDamage(int level, Random rnd)
     {
         return level > 10 ? level - 10 : 1 + rnd.nextInt(4);
+    }
+
+    private void damageArmor(ItemStack stack, int amount, EntityLivingBase entity)
+    {
+        int slot = -1;
+        int x = 0;
+        for (ItemStack i : entity.getArmorInventoryList())
+        {
+            if (i == stack){
+                slot = x;
+                break;
+            }
+            x++;
+        }
+        if (slot == -1 || !(stack.getItem() instanceof net.minecraftforge.common.ISpecialArmor))
+        {
+            stack.damageItem(1, entity);
+            return;
+        }
+        net.minecraftforge.common.ISpecialArmor armor = (net.minecraftforge.common.ISpecialArmor)stack.getItem();
+        armor.damageArmor(entity, stack, DamageSource.causeThornsDamage(entity), amount, slot);
     }
 }
