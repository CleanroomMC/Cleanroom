--- before/net/minecraft/util/text/Style.java
+++ after/net/minecraft/util/text/Style.java
@@ -30,116 +30,94 @@
     private static final Style ROOT = new Style()
     {
         @Nullable
-        @Override
         public TextFormatting getColor()
         {
             return null;
         }
-        @Override
         public boolean getBold()
         {
             return false;
         }
-        @Override
         public boolean getItalic()
         {
             return false;
         }
-        @Override
         public boolean getStrikethrough()
         {
             return false;
         }
-        @Override
         public boolean getUnderlined()
         {
             return false;
         }
-        @Override
         public boolean getObfuscated()
         {
             return false;
         }
         @Nullable
-        @Override
         public ClickEvent getClickEvent()
         {
             return null;
         }
         @Nullable
-        @Override
         public HoverEvent getHoverEvent()
         {
             return null;
         }
         @Nullable
-        @Override
         public String getInsertion()
         {
             return null;
         }
-        @Override
         public Style setColor(TextFormatting color)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setBold(Boolean boldIn)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setItalic(Boolean italic)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setStrikethrough(Boolean strikethrough)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setUnderlined(Boolean underlined)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setObfuscated(Boolean obfuscated)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setClickEvent(ClickEvent event)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setHoverEvent(HoverEvent event)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public Style setParentStyle(Style parent)
         {
             throw new UnsupportedOperationException();
         }
-        @Override
         public String toString()
         {
             return "Style.ROOT";
         }
-        @Override
         public Style createShallowCopy()
         {
             return this;
         }
-        @Override
         public Style createDeepCopy()
         {
             return this;
         }
         @SideOnly(Side.CLIENT)
-        @Override
         public String getFormattingCode()
         {
             return "";
@@ -154,40 +132,32 @@
 
     public boolean getBold()
     {
-        return this.bold == null ? this.getParent().getBold() : this.bold;
+        return this.bold == null ? this.getParent().getBold() : this.bold.booleanValue();
     }
 
     public boolean getItalic()
     {
-        return this.italic == null ? this.getParent().getItalic() : this.italic;
+        return this.italic == null ? this.getParent().getItalic() : this.italic.booleanValue();
     }
 
     public boolean getStrikethrough()
     {
-        return this.strikethrough == null ? this.getParent().getStrikethrough() : this.strikethrough;
+        return this.strikethrough == null ? this.getParent().getStrikethrough() : this.strikethrough.booleanValue();
     }
 
     public boolean getUnderlined()
     {
-        return this.underlined == null ? this.getParent().getUnderlined() : this.underlined;
+        return this.underlined == null ? this.getParent().getUnderlined() : this.underlined.booleanValue();
     }
 
     public boolean getObfuscated()
     {
-        return this.obfuscated == null ? this.getParent().getObfuscated() : this.obfuscated;
+        return this.obfuscated == null ? this.getParent().getObfuscated() : this.obfuscated.booleanValue();
     }
 
     public boolean isEmpty()
     {
-        return this.bold == null
-               && this.italic == null
-               && this.strikethrough == null
-               && this.underlined == null
-               && this.obfuscated == null
-               && this.color == null
-               && this.clickEvent == null
-               && this.hoverEvent == null
-               && this.insertion == null;
+        return this.bold == null && this.italic == null && this.strikethrough == null && this.underlined == null && this.obfuscated == null && this.color == null && this.clickEvent == null && this.hoverEvent == null && this.insertion == null;
     }
 
     @Nullable
@@ -268,7 +238,6 @@
         return this;
     }
 
-    @SideOnly(Side.CLIENT)
     public String getFormattingCode()
     {
         if (this.isEmpty())
@@ -281,32 +250,32 @@
 
             if (this.getColor() != null)
             {
-                stringbuilder.append(this.getColor());
+                stringbuilder.append((Object)this.getColor());
             }
 
             if (this.getBold())
             {
-                stringbuilder.append(TextFormatting.BOLD);
+                stringbuilder.append((Object)TextFormatting.BOLD);
             }
 
             if (this.getItalic())
             {
-                stringbuilder.append(TextFormatting.ITALIC);
+                stringbuilder.append((Object)TextFormatting.ITALIC);
             }
 
             if (this.getUnderlined())
             {
-                stringbuilder.append(TextFormatting.UNDERLINE);
+                stringbuilder.append((Object)TextFormatting.UNDERLINE);
             }
 
             if (this.getObfuscated())
             {
-                stringbuilder.append(TextFormatting.OBFUSCATED);
+                stringbuilder.append((Object)TextFormatting.OBFUSCATED);
             }
 
             if (this.getStrikethrough())
             {
-                stringbuilder.append(TextFormatting.STRIKETHROUGH);
+                stringbuilder.append((Object)TextFormatting.STRIKETHROUGH);
             }
 
             return stringbuilder.toString();
@@ -318,31 +287,11 @@
         return this.parentStyle == null ? ROOT : this.parentStyle;
     }
 
-    @Override
     public String toString()
     {
-        return "Style{hasParent="
-               + (this.parentStyle != null)
-               + ", color="
-               + this.color
-               + ", bold="
-               + this.bold
-               + ", italic="
-               + this.italic
-               + ", underlined="
-               + this.underlined
-               + ", obfuscated="
-               + this.obfuscated
-               + ", clickEvent="
-               + this.getClickEvent()
-               + ", hoverEvent="
-               + this.getHoverEvent()
-               + ", insertion="
-               + this.getInsertion()
-               + '}';
+        return "Style{hasParent=" + (this.parentStyle != null) + ", color=" + this.color + ", bold=" + this.bold + ", italic=" + this.italic + ", underlined=" + this.underlined + ", obfuscated=" + this.obfuscated + ", clickEvent=" + this.getClickEvent() + ", hoverEvent=" + this.getHoverEvent() + ", insertion=" + this.getInsertion() + '}';
     }
 
-    @Override
     public boolean equals(Object p_equals_1_)
     {
         if (this == p_equals_1_)
@@ -355,20 +304,61 @@
         }
         else
         {
-            Style style = (Style)p_equals_1_;
-            return this.getBold() == style.getBold()
-                   && this.getColor() == style.getColor()
-                   && this.getItalic() == style.getItalic()
-                   && this.getObfuscated() == style.getObfuscated()
-                   && this.getStrikethrough() == style.getStrikethrough()
-                   && this.getUnderlined() == style.getUnderlined()
-                   && (this.getClickEvent() != null ? this.getClickEvent().equals(style.getClickEvent()) : style.getClickEvent() == null)
-                   && (this.getHoverEvent() != null ? this.getHoverEvent().equals(style.getHoverEvent()) : style.getHoverEvent() == null)
-                   && (this.getInsertion() != null ? this.getInsertion().equals(style.getInsertion()) : style.getInsertion() == null);
+            boolean flag;
+            label77:
+            {
+                Style style = (Style)p_equals_1_;
+
+                if (this.getBold() == style.getBold() && this.getColor() == style.getColor() && this.getItalic() == style.getItalic() && this.getObfuscated() == style.getObfuscated() && this.getStrikethrough() == style.getStrikethrough() && this.getUnderlined() == style.getUnderlined())
+                {
+                    label71:
+                    {
+                        if (this.getClickEvent() != null)
+                        {
+                            if (!this.getClickEvent().equals(style.getClickEvent()))
+                            {
+                                break label71;
+                            }
+                        }
+                        else if (style.getClickEvent() != null)
+                        {
+                            break label71;
+                        }
+
+                        if (this.getHoverEvent() != null)
+                        {
+                            if (!this.getHoverEvent().equals(style.getHoverEvent()))
+                            {
+                                break label71;
+                            }
+                        }
+                        else if (style.getHoverEvent() != null)
+                        {
+                            break label71;
+                        }
+
+                        if (this.getInsertion() != null)
+                        {
+                            if (this.getInsertion().equals(style.getInsertion()))
+                            {
+                                break label77;
+                            }
+                        }
+                        else if (style.getInsertion() == null)
+                        {
+                            break label77;
+                        }
+                    }
+                }
+
+                flag = false;
+                return flag;
+            }
+            flag = true;
+            return flag;
         }
     }
 
-    @Override
     public int hashCode()
     {
         int i = this.color.hashCode();
@@ -379,7 +369,8 @@
         i = 31 * i + this.obfuscated.hashCode();
         i = 31 * i + this.clickEvent.hashCode();
         i = 31 * i + this.hoverEvent.hashCode();
-        return 31 * i + this.insertion.hashCode();
+        i = 31 * i + this.insertion.hashCode();
+        return i;
     }
 
     public Style createShallowCopy()
@@ -401,11 +392,11 @@
     public Style createDeepCopy()
     {
         Style style = new Style();
-        style.setBold(this.getBold());
-        style.setItalic(this.getItalic());
-        style.setStrikethrough(this.getStrikethrough());
-        style.setUnderlined(this.getUnderlined());
-        style.setObfuscated(this.getObfuscated());
+        style.setBold(Boolean.valueOf(this.getBold()));
+        style.setItalic(Boolean.valueOf(this.getItalic()));
+        style.setStrikethrough(Boolean.valueOf(this.getStrikethrough()));
+        style.setUnderlined(Boolean.valueOf(this.getUnderlined()));
+        style.setObfuscated(Boolean.valueOf(this.getObfuscated()));
         style.setColor(this.getColor());
         style.setClickEvent(this.getClickEvent());
         style.setHoverEvent(this.getHoverEvent());
@@ -456,7 +447,7 @@
 
                         if (jsonobject.has("color"))
                         {
-                            style.color = p_deserialize_3_.deserialize(jsonobject.get("color"), TextFormatting.class);
+                            style.color = (TextFormatting)p_deserialize_3_.deserialize(jsonobject.get("color"), TextFormatting.class);
                         }
 
                         if (jsonobject.has("insertion"))
@@ -490,7 +481,7 @@
                             {
                                 JsonPrimitive jsonprimitive2 = jsonobject2.getAsJsonPrimitive("action");
                                 HoverEvent.Action hoverevent$action = jsonprimitive2 == null ? null : HoverEvent.Action.getValueByCanonicalName(jsonprimitive2.getAsString());
-                                ITextComponent itextcomponent = p_deserialize_3_.deserialize(jsonobject2.get("value"), ITextComponent.class);
+                                ITextComponent itextcomponent = (ITextComponent)p_deserialize_3_.deserialize(jsonobject2.get("value"), ITextComponent.class);
 
                                 if (hoverevent$action != null && itextcomponent != null && hoverevent$action.shouldAllowInChat())
                                 {
