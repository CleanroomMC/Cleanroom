--- before/net/minecraft/util/ScreenShotHelper.java
+++ after/net/minecraft/util/ScreenShotHelper.java
@@ -2,7 +2,6 @@
 
 import java.awt.image.BufferedImage;
 import java.io.File;
-import java.nio.Buffer;
 import java.nio.IntBuffer;
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
@@ -33,7 +32,7 @@
 
     public static ITextComponent saveScreenshot(File gameDirectory, int width, int height, Framebuffer buffer)
     {
-        return saveScreenshot(gameDirectory, null, width, height, buffer);
+        return saveScreenshot(gameDirectory, (String)null, width, height, buffer);
     }
 
     public static ITextComponent saveScreenshot(File gameDirectory, @Nullable String screenshotName, int width, int height, Framebuffer buffer)
@@ -54,16 +53,20 @@
                 file2 = new File(file1, screenshotName);
             }
 
+            file2 = file2.getCanonicalFile(); // FORGE: Fix errors on Windows with paths that include \.\
+            net.minecraftforge.client.event.ScreenshotEvent event = net.minecraftforge.client.ForgeHooksClient.onScreenshot(bufferedimage, file2);
+            if (event.isCanceled()) return event.getCancelMessage(); else file2 = event.getScreenshotFile();
             ImageIO.write(bufferedimage, "png", file2);
             ITextComponent itextcomponent = new TextComponentString(file2.getName());
             itextcomponent.getStyle().setClickEvent(new ClickEvent(ClickEvent.Action.OPEN_FILE, file2.getAbsolutePath()));
-            itextcomponent.getStyle().setUnderlined(true);
-            return new TextComponentTranslation("screenshot.success", itextcomponent);
+            itextcomponent.getStyle().setUnderlined(Boolean.valueOf(true));
+            if (event.getResultMessage() != null) return event.getResultMessage();
+            return new TextComponentTranslation("screenshot.success", new Object[] {itextcomponent});
         }
         catch (Exception exception)
         {
             LOGGER.warn("Couldn't save screenshot", (Throwable)exception);
-            return new TextComponentTranslation("screenshot.failure", exception.getMessage());
+            return new TextComponentTranslation("screenshot.failure", new Object[] {exception.getMessage()});
         }
     }
 
@@ -85,7 +88,7 @@
 
         GlStateManager.glPixelStorei(3333, 1);
         GlStateManager.glPixelStorei(3317, 1);
-        ((Buffer)pixelBuffer).clear();
+        pixelBuffer.clear();
 
         if (OpenGlHelper.isFramebufferEnabled())
         {
@@ -118,7 +121,7 @@
                 return file1;
             }
 
-            i++;
+            ++i;
         }
     }
 }
