--- before/net/minecraft/nbt/NBTBase.java
+++ after/net/minecraft/nbt/NBTBase.java
@@ -6,24 +6,16 @@
 
 public abstract class NBTBase
 {
-    public static final String[] NBT_TYPES = new String[]
-        {
-            "END", "BYTE", "SHORT", "INT", "LONG", "FLOAT", "DOUBLE", "BYTE[]", "STRING", "LIST", "COMPOUND", "INT[]", "LONG[]"
-        };
+    public static final String[] NBT_TYPES = new String[] {"END", "BYTE", "SHORT", "INT", "LONG", "FLOAT", "DOUBLE", "BYTE[]", "STRING", "LIST", "COMPOUND", "INT[]", "LONG[]"};
 
     abstract void write(DataOutput output) throws IOException;
 
     abstract void read(DataInput input, int depth, NBTSizeTracker sizeTracker) throws IOException;
 
-    @Override
     public abstract String toString();
 
     public abstract byte getId();
 
-    protected NBTBase()
-    {
-    }
-
     protected static NBTBase create(byte id)
     {
         switch (id)
@@ -103,13 +95,11 @@
         return false;
     }
 
-    @Override
     public boolean equals(Object p_equals_1_)
     {
         return p_equals_1_ instanceof NBTBase && this.getId() == ((NBTBase)p_equals_1_).getId();
     }
 
-    @Override
     public int hashCode()
     {
         return this.getId();
