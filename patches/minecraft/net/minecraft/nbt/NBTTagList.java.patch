--- before/net/minecraft/nbt/NBTTagList.java
+++ after/net/minecraft/nbt/NBTTagList.java
@@ -9,13 +9,12 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public class NBTTagList extends NBTBase
+public class NBTTagList extends NBTBase implements java.lang.Iterable<NBTBase>
 {
     private static final Logger field_179239_b = LogManager.getLogger();
-    private List<NBTBase> field_74747_a = Lists.newArrayList();
+    private List<NBTBase> field_74747_a = Lists.<NBTBase>newArrayList();
     private byte field_74746_b = 0;
 
-    @Override
     void func_74734_a(DataOutput p_74734_1_) throws IOException
     {
         if (this.field_74747_a.isEmpty())
@@ -24,7 +23,7 @@
         }
         else
         {
-            this.field_74746_b = this.field_74747_a.get(0).func_74732_a();
+            this.field_74746_b = ((NBTBase)this.field_74747_a.get(0)).func_74732_a();
         }
 
         p_74734_1_.writeByte(this.field_74746_b);
@@ -32,11 +31,10 @@
 
         for (int i = 0; i < this.field_74747_a.size(); ++i)
         {
-            this.field_74747_a.get(i).func_74734_a(p_74734_1_);
+            ((NBTBase)this.field_74747_a.get(i)).func_74734_a(p_74734_1_);
         }
     }
 
-    @Override
     void func_152446_a(DataInput p_152446_1_, int p_152446_2_, NBTSizeTracker p_152446_3_) throws IOException
     {
         p_152446_3_.func_152450_a(296L);
@@ -57,7 +55,7 @@
             else
             {
                 p_152446_3_.func_152450_a(32L * (long)i);
-                this.field_74747_a = Lists.newArrayListWithCapacity(i);
+                this.field_74747_a = Lists.<NBTBase>newArrayListWithCapacity(i);
 
                 for (int j = 0; j < i; ++j)
                 {
@@ -69,13 +67,11 @@
         }
     }
 
-    @Override
     public byte func_74732_a()
     {
         return 9;
     }
 
-    @Override
     public String toString()
     {
         StringBuilder stringbuilder = new StringBuilder("[");
@@ -146,7 +142,6 @@
         return this.field_74747_a.remove(p_74744_1_);
     }
 
-    @Override
     public boolean func_82582_d()
     {
         return this.field_74747_a.isEmpty();
@@ -209,7 +204,7 @@
             }
         }
 
-        return 0.0;
+        return 0.0D;
     }
 
     public float func_150308_e(int p_150308_1_)
@@ -242,7 +237,7 @@
 
     public NBTBase func_179238_g(int p_179238_1_)
     {
-        return (NBTBase)(p_179238_1_ >= 0 && p_179238_1_ < this.field_74747_a.size() ? this.field_74747_a.get(p_179238_1_) : new NBTTagEnd());
+        return (NBTBase)(p_179238_1_ >= 0 && p_179238_1_ < this.field_74747_a.size() ? (NBTBase)this.field_74747_a.get(p_179238_1_) : new NBTTagEnd());
     }
 
     public int func_74745_c()
@@ -264,7 +259,6 @@
         return nbttaglist;
     }
 
-    @Override
     public boolean equals(Object p_equals_1_)
     {
         if (!super.equals(p_equals_1_))
@@ -278,7 +272,6 @@
         }
     }
 
-    @Override
     public int hashCode()
     {
         return super.hashCode() ^ this.field_74747_a.hashCode();
@@ -288,4 +281,5 @@
     {
         return this.field_74746_b;
     }
+    @Override public java.util.Iterator<NBTBase> iterator() {return field_74747_a.iterator();}
 }
