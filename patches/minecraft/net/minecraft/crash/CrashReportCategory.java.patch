--- before/net/minecraft/crash/CrashReportCategory.java
+++ after/net/minecraft/crash/CrashReportCategory.java
@@ -12,7 +12,7 @@
 {
     private final CrashReport crashReport;
     private final String name;
-    private final List<CrashReportCategory.Entry> children = Lists.newArrayList();
+    private final List<CrashReportCategory.Entry> children = Lists.<CrashReportCategory.Entry>newArrayList();
     private StackTraceElement[] stackTrace = new StackTraceElement[0];
 
     public CrashReportCategory(CrashReport report, String name)
@@ -40,7 +40,7 @@
         {
             stringbuilder.append(String.format("World: (%d,%d,%d)", x, y, z));
         }
-        catch (Throwable throwable2)
+        catch (Throwable var16)
         {
             stringbuilder.append("(Error finding world loc)");
         }
@@ -60,7 +60,7 @@
             int i2 = (j + 1 << 4) - 1;
             stringbuilder.append(String.format("Chunk: (at %d,%d,%d in %d,%d; contains blocks %d,0,%d to %d,255,%d)", k, l, i1, i, j, j1, k1, l1, i2));
         }
-        catch (Throwable throwable1)
+        catch (Throwable var15)
         {
             stringbuilder.append("(Error finding chunk loc)");
         }
@@ -79,11 +79,9 @@
             int j4 = l2 << 9;
             int k4 = (k2 + 1 << 9) - 1;
             int j2 = (l2 + 1 << 9) - 1;
-            stringbuilder.append(
-                String.format("Region: (%d,%d; contains chunks %d,%d to %d,%d, blocks %d,0,%d to %d,255,%d)", k2, l2, i3, j3, k3, l3, i4, j4, k4, j2)
-            );
+            stringbuilder.append(String.format("Region: (%d,%d; contains chunks %d,%d to %d,%d, blocks %d,0,%d to %d,255,%d)", k2, l2, i3, j3, k3, l3, i4, j4, k4, j2));
         }
-        catch (Throwable throwable)
+        catch (Throwable var14)
         {
             stringbuilder.append("(Error finding world loc)");
         }
@@ -123,8 +121,11 @@
         }
         else
         {
-            this.stackTrace = new StackTraceElement[astacktraceelement.length - 3 - size];
-            System.arraycopy(astacktraceelement, 3 + size, this.stackTrace, 0, this.stackTrace.length);
+            int len = astacktraceelement.length - 3 - size;
+            // Really Mojang, Still, god damn...
+            if (len <= 0) len = astacktraceelement.length;
+            this.stackTrace = new StackTraceElement[len];
+            System.arraycopy(astacktraceelement, astacktraceelement.length - len, this.stackTrace, 0, this.stackTrace.length);
             return this.stackTrace.length;
         }
     }
@@ -135,10 +136,7 @@
         {
             StackTraceElement stacktraceelement = this.stackTrace[0];
 
-            if (stacktraceelement.isNativeMethod() == s1.isNativeMethod()
-                    && stacktraceelement.getClassName().equals(s1.getClassName())
-                    && stacktraceelement.getFileName().equals(s1.getFileName())
-                    && stacktraceelement.getMethodName().equals(s1.getMethodName()))
+            if (stacktraceelement.isNativeMethod() == s1.isNativeMethod() && stacktraceelement.getClassName().equals(s1.getClassName()) && stacktraceelement.getFileName().equals(s1.getFileName()) && stacktraceelement.getMethodName().equals(s1.getMethodName()))
             {
                 if (s2 != null != this.stackTrace.length > 1)
                 {
@@ -192,7 +190,7 @@
             for (StackTraceElement stacktraceelement : this.stackTrace)
             {
                 builder.append("\n\tat ");
-                builder.append(stacktraceelement);
+                builder.append((Object)stacktraceelement);
             }
         }
     }
@@ -211,9 +209,9 @@
             {
                 try
                 {
-                    return String.format("ID #%d (%s // %s)", i, blockIn.getTranslationKey(), blockIn.getClass().getCanonicalName());
+                    return String.format("ID #%d (%s // %s // %s)", i, blockIn.getTranslationKey(), blockIn.getClass().getName(), blockIn.getRegistryName());
                 }
-                catch (Throwable throwable)
+                catch (Throwable var2)
                 {
                     return "ID #" + i;
                 }
