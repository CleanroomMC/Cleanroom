--- before/net/minecraft/item/ItemSword.java
+++ after/net/minecraft/item/ItemSword.java
@@ -34,7 +34,6 @@
         return this.material.getAttackDamage();
     }
 
-    @Override
     public float getDestroySpeed(ItemStack stack, IBlockState state)
     {
         Block block = state.getBlock();
@@ -46,27 +45,19 @@
         else
         {
             Material material = state.getMaterial();
-            return material != Material.PLANTS
-                   && material != Material.VINE
-                   && material != Material.CORAL
-                   && material != Material.LEAVES
-                   && material != Material.GOURD
-                   ? 1.0F
-                   : 1.5F;
+            return material != Material.PLANTS && material != Material.VINE && material != Material.CORAL && material != Material.LEAVES && material != Material.GOURD ? 1.0F : 1.5F;
         }
     }
 
-    @Override
     public boolean hitEntity(ItemStack stack, EntityLivingBase target, EntityLivingBase attacker)
     {
         stack.damageItem(1, attacker);
         return true;
     }
 
-    @Override
     public boolean onBlockDestroyed(ItemStack stack, World worldIn, IBlockState state, BlockPos pos, EntityLivingBase entityLiving)
     {
-        if ((double)state.getBlockHardness(worldIn, pos) != 0.0)
+        if ((double)state.getBlockHardness(worldIn, pos) != 0.0D)
         {
             stack.damageItem(2, entityLiving);
         }
@@ -74,20 +65,17 @@
         return true;
     }
 
-    @SideOnly(Side.CLIENT)
-    @Override
-    public boolean isFull3D()
-    {
-        return true;
-    }
-
-    @Override
     public boolean canHarvestBlock(IBlockState blockIn)
     {
         return blockIn.getBlock() == Blocks.WEB;
     }
 
-    @Override
+    @SideOnly(Side.CLIENT)
+    public boolean isFull3D()
+    {
+        return true;
+    }
+
     public int getItemEnchantability()
     {
         return this.material.getEnchantability();
@@ -98,23 +86,21 @@
         return this.material.toString();
     }
 
-    @Override
     public boolean getIsRepairable(ItemStack toRepair, ItemStack repair)
     {
-        return this.material.getRepairItem() == repair.getItem() ? true : super.getIsRepairable(toRepair, repair);
+        ItemStack mat = this.material.getRepairItemStack();
+        if (!mat.isEmpty() && net.minecraftforge.oredict.OreDictionary.itemMatches(mat, repair, false)) return true;
+        return super.getIsRepairable(toRepair, repair);
     }
 
-    @Override
     public Multimap<String, AttributeModifier> getItemAttributeModifiers(EntityEquipmentSlot equipmentSlot)
     {
         Multimap<String, AttributeModifier> multimap = super.getItemAttributeModifiers(equipmentSlot);
 
         if (equipmentSlot == EntityEquipmentSlot.MAINHAND)
         {
-            multimap.put(
-                SharedMonsterAttributes.ATTACK_DAMAGE.getName(), new AttributeModifier(ATTACK_DAMAGE_MODIFIER, "Weapon modifier", (double)this.attackDamage, 0)
-            );
-            multimap.put(SharedMonsterAttributes.ATTACK_SPEED.getName(), new AttributeModifier(ATTACK_SPEED_MODIFIER, "Weapon modifier", -2.4F, 0));
+            multimap.put(SharedMonsterAttributes.ATTACK_DAMAGE.getName(), new AttributeModifier(ATTACK_DAMAGE_MODIFIER, "Weapon modifier", (double)this.attackDamage, 0));
+            multimap.put(SharedMonsterAttributes.ATTACK_SPEED.getName(), new AttributeModifier(ATTACK_SPEED_MODIFIER, "Weapon modifier", -2.4000000953674316D, 0));
         }
 
         return multimap;
