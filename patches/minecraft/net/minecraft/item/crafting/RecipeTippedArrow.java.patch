--- before/net/minecraft/item/crafting/RecipeTippedArrow.java
+++ after/net/minecraft/item/crafting/RecipeTippedArrow.java
@@ -7,19 +7,16 @@
 import net.minecraft.potion.PotionUtils;
 import net.minecraft.util.NonNullList;
 import net.minecraft.world.World;
-import net.minecraftforge.fml.relauncher.Side;
-import net.minecraftforge.fml.relauncher.SideOnly;
 
-public class RecipeTippedArrow implements IRecipe
+public class RecipeTippedArrow extends net.minecraftforge.registries.IForgeRegistryEntry.Impl<IRecipe> implements IRecipe
 {
-    @Override
     public boolean matches(InventoryCrafting inv, World worldIn)
     {
         if (inv.getWidth() == 3 && inv.getHeight() == 3)
         {
-            for (int i = 0; i < inv.getWidth(); i++)
+            for (int i = 0; i < inv.getWidth(); ++i)
             {
-                for (int j = 0; j < inv.getHeight(); j++)
+                for (int j = 0; j < inv.getHeight(); ++j)
                 {
                     ItemStack itemstack = inv.getStackInRowAndColumn(i, j);
 
@@ -52,7 +49,6 @@
         }
     }
 
-    @Override
     public ItemStack getCraftingResult(InventoryCrafting inv)
     {
         ItemStack itemstack = inv.getStackInRowAndColumn(1, 1);
@@ -70,26 +66,21 @@
         }
     }
 
-    @Override
     public ItemStack getRecipeOutput()
     {
         return ItemStack.EMPTY;
     }
 
-    @Override
     public NonNullList<ItemStack> getRemainingItems(InventoryCrafting inv)
     {
-        return NonNullList.withSize(inv.getSizeInventory(), ItemStack.EMPTY);
+        return NonNullList.<ItemStack>withSize(inv.getSizeInventory(), ItemStack.EMPTY);
     }
 
-    @Override
     public boolean isDynamic()
     {
         return true;
     }
 
-    @SideOnly(Side.CLIENT)
-    @Override
     public boolean canFit(int width, int height)
     {
         return width >= 2 && height >= 2;
