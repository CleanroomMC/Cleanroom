--- before/net/minecraft/item/ItemBow.java
+++ after/net/minecraft/item/ItemBow.java
@@ -26,12 +26,9 @@
         this.maxStackSize = 1;
         this.setMaxDamage(384);
         this.setCreativeTab(CreativeTabs.COMBAT);
-        this.addPropertyOverride(
-            new ResourceLocation("pull"),
-            new IItemPropertyGetter()
+        this.addPropertyOverride(new ResourceLocation("pull"), new IItemPropertyGetter()
         {
             @SideOnly(Side.CLIENT)
-            @Override
             public float apply(ItemStack stack, @Nullable World worldIn, @Nullable EntityLivingBase entityIn)
             {
                 if (entityIn == null)
@@ -40,17 +37,13 @@
                 }
                 else
                 {
-                    return entityIn.getActiveItemStack().getItem() != Items.BOW
-                           ? 0.0F
-                           : (float)(stack.getMaxItemUseDuration() - entityIn.getItemInUseCount()) / 20.0F;
+                    return !(entityIn.getActiveItemStack().getItem() instanceof ItemBow) ? 0.0F : (float)(stack.getMaxItemUseDuration() - entityIn.getItemInUseCount()) / 20.0F;
                 }
             }
-        }
-        );
+        });
         this.addPropertyOverride(new ResourceLocation("pulling"), new IItemPropertyGetter()
         {
             @SideOnly(Side.CLIENT)
-            @Override
             public float apply(ItemStack stack, @Nullable World worldIn, @Nullable EntityLivingBase entityIn)
             {
                 return entityIn != null && entityIn.isHandActive() && entityIn.getActiveItemStack() == stack ? 1.0F : 0.0F;
@@ -70,7 +63,7 @@
         }
         else
         {
-            for (int i = 0; i < player.inventory.getSizeInventory(); i++)
+            for (int i = 0; i < player.inventory.getSizeInventory(); ++i)
             {
                 ItemStack itemstack = player.inventory.getStackInSlot(i);
 
@@ -89,7 +82,6 @@
         return stack.getItem() instanceof ItemArrow;
     }
 
-    @Override
     public void onPlayerStoppedUsing(ItemStack stack, World worldIn, EntityLivingBase entityLiving, int timeLeft)
     {
         if (entityLiving instanceof EntityPlayer)
@@ -98,6 +90,10 @@
             boolean flag = entityplayer.capabilities.isCreativeMode || EnchantmentHelper.getEnchantmentLevel(Enchantments.INFINITY, stack) > 0;
             ItemStack itemstack = this.findAmmo(entityplayer);
 
+            int i = this.getMaxItemUseDuration(stack) - timeLeft;
+            i = net.minecraftforge.event.ForgeEventFactory.onArrowLoose(stack, worldIn, entityplayer, i, !itemstack.isEmpty() || flag);
+            if (i < 0) return;
+
             if (!itemstack.isEmpty() || flag)
             {
                 if (itemstack.isEmpty())
@@ -105,17 +101,17 @@
                     itemstack = new ItemStack(Items.ARROW);
                 }
 
-                int i = this.getMaxItemUseDuration(stack) - timeLeft;
                 float f = getArrowVelocity(i);
 
-                if (!((double)f < 0.1))
+                if ((double)f >= 0.1D)
                 {
-                    boolean flag1 = flag && itemstack.getItem() == Items.ARROW;
+                    boolean flag1 = entityplayer.capabilities.isCreativeMode || (itemstack.getItem() instanceof ItemArrow && ((ItemArrow) itemstack.getItem()).isInfinite(itemstack, stack, entityplayer));
 
                     if (!worldIn.isRemote)
                     {
                         ItemArrow itemarrow = (ItemArrow)(itemstack.getItem() instanceof ItemArrow ? itemstack.getItem() : Items.ARROW);
                         EntityArrow entityarrow = itemarrow.createArrow(worldIn, itemstack, entityplayer);
+                        entityarrow = this.customizeArrow(entityarrow);
                         entityarrow.shoot(entityplayer, entityplayer.rotationPitch, entityplayer.rotationYaw, 0.0F, f * 3.0F, 1.0F);
 
                         if (f == 1.0F)
@@ -127,7 +123,7 @@
 
                         if (j > 0)
                         {
-                            entityarrow.setDamage(entityarrow.getDamage() + (double)j * 0.5 + 0.5);
+                            entityarrow.setDamage(entityarrow.getDamage() + (double)j * 0.5D + 0.5D);
                         }
 
                         int k = EnchantmentHelper.getEnchantmentLevel(Enchantments.PUNCH, stack);
@@ -144,9 +140,7 @@
 
                         stack.damageItem(1, entityplayer);
 
-                        if (flag1
-                                || entityplayer.capabilities.isCreativeMode
-                                && (itemstack.getItem() == Items.SPECTRAL_ARROW || itemstack.getItem() == Items.TIPPED_ARROW))
+                        if (flag1 || entityplayer.capabilities.isCreativeMode && (itemstack.getItem() == Items.SPECTRAL_ARROW || itemstack.getItem() == Items.TIPPED_ARROW))
                         {
                             entityarrow.pickupStatus = EntityArrow.PickupStatus.CREATIVE_ONLY;
                         }
@@ -154,16 +148,7 @@
                         worldIn.spawnEntity(entityarrow);
                     }
 
-                    worldIn.playSound(
-                        null,
-                        entityplayer.posX,
-                        entityplayer.posY,
-                        entityplayer.posZ,
-                        SoundEvents.ENTITY_ARROW_SHOOT,
-                        SoundCategory.PLAYERS,
-                        1.0F,
-                        1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + f * 0.5F
-                    );
+                    worldIn.playSound((EntityPlayer)null, entityplayer.posX, entityplayer.posY, entityplayer.posZ, SoundEvents.ENTITY_ARROW_SHOOT, SoundCategory.PLAYERS, 1.0F, 1.0F / (itemRand.nextFloat() * 0.4F + 1.2F) + f * 0.5F);
 
                     if (!flag1 && !entityplayer.capabilities.isCreativeMode)
                     {
@@ -194,38 +179,42 @@
         return f;
     }
 
-    @Override
     public int getMaxItemUseDuration(ItemStack stack)
     {
         return 72000;
     }
 
-    @Override
     public EnumAction getItemUseAction(ItemStack stack)
     {
         return EnumAction.BOW;
     }
 
-    @Override
     public ActionResult<ItemStack> onItemRightClick(World worldIn, EntityPlayer playerIn, EnumHand handIn)
     {
         ItemStack itemstack = playerIn.getHeldItem(handIn);
         boolean flag = !this.findAmmo(playerIn).isEmpty();
 
-        if (playerIn.capabilities.isCreativeMode || flag)
+        ActionResult<ItemStack> ret = net.minecraftforge.event.ForgeEventFactory.onArrowNock(itemstack, worldIn, playerIn, handIn, flag);
+        if (ret != null) return ret;
+
+        if (!playerIn.capabilities.isCreativeMode && !flag)
+        {
+            return flag ? new ActionResult(EnumActionResult.PASS, itemstack) : new ActionResult(EnumActionResult.FAIL, itemstack);
+        }
+        else
         {
             playerIn.setActiveHand(handIn);
-            return new ActionResult<>(EnumActionResult.SUCCESS, itemstack);
-        }
-        else
-        {
-            return flag ? new ActionResult<>(EnumActionResult.PASS, itemstack) : new ActionResult<>(EnumActionResult.FAIL, itemstack);
+            return new ActionResult<ItemStack>(EnumActionResult.SUCCESS, itemstack);
         }
     }
 
-    @Override
     public int getItemEnchantability()
     {
         return 1;
+    }
+
+    public EntityArrow customizeArrow(EntityArrow arrow)
+    {
+        return arrow;
     }
 }
