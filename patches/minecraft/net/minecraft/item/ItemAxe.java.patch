--- before/net/minecraft/item/ItemAxe.java
+++ after/net/minecraft/item/ItemAxe.java
@@ -9,19 +9,7 @@
 
 public class ItemAxe extends ItemTool
 {
-    private static final Set<Block> EFFECTIVE_ON = Sets.newHashSet(
-                    Blocks.PLANKS,
-                    Blocks.BOOKSHELF,
-                    Blocks.LOG,
-                    Blocks.LOG2,
-                    Blocks.CHEST,
-                    Blocks.PUMPKIN,
-                    Blocks.LIT_PUMPKIN,
-                    Blocks.MELON_BLOCK,
-                    Blocks.LADDER,
-                    Blocks.WOODEN_BUTTON,
-                    Blocks.WOODEN_PRESSURE_PLATE
-                );
+    private static final Set<Block> EFFECTIVE_ON = Sets.newHashSet(Blocks.PLANKS, Blocks.BOOKSHELF, Blocks.LOG, Blocks.LOG2, Blocks.CHEST, Blocks.PUMPKIN, Blocks.LIT_PUMPKIN, Blocks.MELON_BLOCK, Blocks.LADDER, Blocks.WOODEN_BUTTON, Blocks.WOODEN_PRESSURE_PLATE);
     private static final float[] ATTACK_DAMAGES = new float[] {6.0F, 8.0F, 8.0F, 8.0F, 6.0F};
     private static final float[] ATTACK_SPEEDS = new float[] { -3.2F, -3.2F, -3.1F, -3.0F, -3.0F};
 
@@ -32,12 +20,16 @@
         this.attackSpeed = ATTACK_SPEEDS[material.ordinal()];
     }
 
-    @Override
+    protected ItemAxe(Item.ToolMaterial material, float damage, float speed)
+    {
+        super(material, EFFECTIVE_ON);
+        this.attackDamage = damage;
+        this.attackSpeed = speed;
+    }
+
     public float getDestroySpeed(ItemStack stack, IBlockState state)
     {
         Material material = state.getMaterial();
-        return material != Material.WOOD && material != Material.PLANTS && material != Material.VINE
-               ? super.getDestroySpeed(stack, state)
-               : this.efficiency;
+        return material != Material.WOOD && material != Material.PLANTS && material != Material.VINE ? super.getDestroySpeed(stack, state) : this.efficiency;
     }
 }
