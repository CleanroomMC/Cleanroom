--- before/net/minecraft/tileentity/TileEntitySign.java
+++ after/net/minecraft/tileentity/TileEntitySign.java
@@ -22,21 +22,17 @@
 
 public class TileEntitySign extends TileEntity
 {
-    public final ITextComponent[] signText = new ITextComponent[]
-    {
-        new TextComponentString(""), new TextComponentString(""), new TextComponentString(""), new TextComponentString("")
-    };
+    public final ITextComponent[] signText = new ITextComponent[] {new TextComponentString(""), new TextComponentString(""), new TextComponentString(""), new TextComponentString("")};
     public int lineBeingEdited = -1;
     private boolean isEditable = true;
     private EntityPlayer player;
     private final CommandResultStats stats = new CommandResultStats();
 
-    @Override
     public NBTTagCompound writeToNBT(NBTTagCompound compound)
     {
         super.writeToNBT(compound);
 
-        for (int i = 0; i < 4; i++)
+        for (int i = 0; i < 4; ++i)
         {
             String s = ITextComponent.Serializer.componentToJson(this.signText[i]);
             compound.setString("Text" + (i + 1), s);
@@ -46,65 +42,53 @@
         return compound;
     }
 
-    @Override
     protected void setWorldCreate(World worldIn)
     {
         this.setWorld(worldIn);
     }
 
-    @Override
     public void readFromNBT(NBTTagCompound compound)
     {
         this.isEditable = false;
         super.readFromNBT(compound);
         ICommandSender icommandsender = new ICommandSender()
         {
-            @Override
             public String getName()
             {
                 return "Sign";
             }
-            @Override
             public boolean canUseCommand(int permLevel, String commandName)
             {
-                return true;
+                return permLevel <= 2; //Forge: Fixes  MC-75630 - Exploit with signs and command blocks
             }
-            @Override
             public BlockPos getPosition()
             {
                 return TileEntitySign.this.pos;
             }
-            @Override
             public Vec3d getPositionVector()
             {
-                return new Vec3d(
-                           (double)TileEntitySign.this.pos.getX() + 0.5,
-                           (double)TileEntitySign.this.pos.getY() + 0.5,
-                           (double)TileEntitySign.this.pos.getZ() + 0.5
-                       );
+                return new Vec3d((double)TileEntitySign.this.pos.getX() + 0.5D, (double)TileEntitySign.this.pos.getY() + 0.5D, (double)TileEntitySign.this.pos.getZ() + 0.5D);
             }
-            @Override
             public World getEntityWorld()
             {
                 return TileEntitySign.this.world;
             }
-            @Override
             public MinecraftServer getServer()
             {
                 return TileEntitySign.this.world.getMinecraftServer();
             }
         };
 
-        for (int i = 0; i < 4; i++)
+        for (int i = 0; i < 4; ++i)
         {
             String s = compound.getString("Text" + (i + 1));
             ITextComponent itextcomponent = ITextComponent.Serializer.jsonToComponent(s);
 
             try
             {
-                this.signText[i] = TextComponentUtils.processComponent(icommandsender, itextcomponent, null);
+                this.signText[i] = TextComponentUtils.processComponent(icommandsender, itextcomponent, (Entity)null);
             }
-            catch (CommandException commandexception)
+            catch (CommandException var7)
             {
                 this.signText[i] = itextcomponent;
             }
@@ -114,19 +98,16 @@
     }
 
     @Nullable
-    @Override
     public SPacketUpdateTileEntity getUpdatePacket()
     {
         return new SPacketUpdateTileEntity(this.pos, 9, this.getUpdateTag());
     }
 
-    @Override
     public NBTTagCompound getUpdateTag()
     {
         return this.writeToNBT(new NBTTagCompound());
     }
 
-    @Override
     public boolean onlyOpsCanSetNbt()
     {
         return true;
@@ -162,55 +143,41 @@
     {
         ICommandSender icommandsender = new ICommandSender()
         {
-            @Override
             public String getName()
             {
                 return playerIn.getName();
             }
-            @Override
             public ITextComponent getDisplayName()
             {
                 return playerIn.getDisplayName();
             }
-            @Override
             public void sendMessage(ITextComponent component)
             {
             }
-            @Override
             public boolean canUseCommand(int permLevel, String commandName)
             {
                 return permLevel <= 2;
             }
-            @Override
             public BlockPos getPosition()
             {
                 return TileEntitySign.this.pos;
             }
-            @Override
             public Vec3d getPositionVector()
             {
-                return new Vec3d(
-                           (double)TileEntitySign.this.pos.getX() + 0.5,
-                           (double)TileEntitySign.this.pos.getY() + 0.5,
-                           (double)TileEntitySign.this.pos.getZ() + 0.5
-                       );
+                return new Vec3d((double)TileEntitySign.this.pos.getX() + 0.5D, (double)TileEntitySign.this.pos.getY() + 0.5D, (double)TileEntitySign.this.pos.getZ() + 0.5D);
             }
-            @Override
             public World getEntityWorld()
             {
                 return playerIn.getEntityWorld();
             }
-            @Override
             public Entity getCommandSenderEntity()
             {
                 return playerIn;
             }
-            @Override
             public boolean sendCommandFeedback()
             {
                 return false;
             }
-            @Override
             public void setCommandStat(CommandResultStats.Type type, int amount)
             {
                 if (TileEntitySign.this.world != null && !TileEntitySign.this.world.isRemote)
@@ -218,7 +185,6 @@
                     TileEntitySign.this.stats.setCommandStatForSender(TileEntitySign.this.world.getMinecraftServer(), this, type, amount);
                 }
             }
-            @Override
             public MinecraftServer getServer()
             {
                 return playerIn.getServer();
