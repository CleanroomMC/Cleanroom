--- before/net/minecraft/server/MinecraftServer.java
+++ after/net/minecraft/server/MinecraftServer.java
@@ -33,6 +33,7 @@
 import java.util.concurrent.Callable;
 import java.util.concurrent.Executors;
 import java.util.concurrent.FutureTask;
+import java.util.function.Supplier;
 import javax.annotation.Nullable;
 import javax.imageio.ImageIO;
 import net.minecraft.advancements.AdvancementManager;
@@ -45,6 +46,7 @@
 import net.minecraft.crash.ICrashReportDetail;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.player.EntityPlayer;
+import net.minecraft.entity.player.EntityPlayerMP;
 import net.minecraft.init.Bootstrap;
 import net.minecraft.network.NetworkSystem;
 import net.minecraft.network.ServerStatusResponse;
@@ -93,7 +95,7 @@
     private final ISaveFormat field_71310_m;
     private final Snooper field_71307_n = new Snooper("server", this, func_130071_aq());
     private final File field_71308_o;
-    private final List<ITickable> field_71322_p = Lists.newArrayList();
+    private final List<ITickable> field_71322_p = Lists.<ITickable>newArrayList();
     public final ICommandManager field_71321_q;
     public final Profiler field_71304_b = new Profiler();
     private final NetworkSystem field_147144_o;
@@ -103,7 +105,7 @@
     @SideOnly(Side.SERVER)
     private String field_71320_r;
     private int field_71319_s = -1;
-    public WorldServer[] field_71305_c;
+    public WorldServer[] field_71305_c = new WorldServer[0];
     private PlayerList field_71318_t;
     private boolean field_71317_u = true;
     private boolean field_71316_v;
@@ -121,7 +123,8 @@
     private int field_71280_D;
     private int field_143008_E;
     public final long[] field_71311_j = new long[100];
-    public long[][] field_71312_k;
+    //public long[][] timeOfLastDimensionTick;
+    public java.util.Hashtable<Integer, long[]> worldTickTimes = new java.util.Hashtable<Integer, long[]>();
     private KeyPair field_71292_I;
     private String field_71293_J;
     private String field_71294_K;
@@ -141,21 +144,13 @@
     private final GameProfileRepository field_152365_W;
     private final PlayerProfileCache field_152366_X;
     private long field_147142_T;
-    public final Queue < FutureTask<? >> field_175589_i = Queues.newArrayDeque();
+    public final Queue < FutureTask<? >> field_175589_i = Queues. < FutureTask<? >> newArrayDeque();
     private Thread field_175590_aa;
     protected long field_175591_ab = func_130071_aq();
     @SideOnly(Side.CLIENT)
     private boolean field_184111_ab;
 
-    public MinecraftServer(
-        File p_i47054_1_,
-        Proxy p_i47054_2_,
-        DataFixer p_i47054_3_,
-        YggdrasilAuthenticationService p_i47054_4_,
-        MinecraftSessionService p_i47054_5_,
-        GameProfileRepository p_i47054_6_,
-        PlayerProfileCache p_i47054_7_
-    )
+    public MinecraftServer(File p_i47054_1_, Proxy p_i47054_2_, DataFixer p_i47054_3_, YggdrasilAuthenticationService p_i47054_4_, MinecraftSessionService p_i47054_5_, GameProfileRepository p_i47054_6_, PlayerProfileCache p_i47054_7_)
     {
         this.field_110456_c = p_i47054_2_;
         this.field_152364_T = p_i47054_4_;
@@ -184,31 +179,26 @@
             this.func_71192_d("menu.convertingLevel");
             this.func_71254_M().func_75805_a(p_71237_1_, new IProgressUpdate()
             {
-                private long field_96245_b = MinecraftServer.func_130071_aq();
-                @Override
+                private long field_96245_b = System.currentTimeMillis();
                 public void func_73720_a(String p_73720_1_)
                 {
                 }
-                @SideOnly(Side.CLIENT)
-                @Override
-                public void func_73721_b(String p_73721_1_)
-                {
-                }
-                @Override
                 public void func_73718_a(int p_73718_1_)
                 {
-                    if (MinecraftServer.func_130071_aq() - this.field_96245_b >= 1000L)
+                    if (System.currentTimeMillis() - this.field_96245_b >= 1000L)
                     {
-                        this.field_96245_b = MinecraftServer.func_130071_aq();
-                        MinecraftServer.field_147145_h.info("Converting... {}%", p_73718_1_);
+                        this.field_96245_b = System.currentTimeMillis();
+                        MinecraftServer.field_147145_h.info("Converting... {}%", (int)p_73718_1_);
                     }
                 }
                 @SideOnly(Side.CLIENT)
-                @Override
+                public void func_73721_b(String p_73721_1_)
+                {
+                }
+                @SideOnly(Side.CLIENT)
                 public void func_146586_a()
                 {
                 }
-                @Override
                 public void func_73719_c(String p_73719_1_)
                 {
                 }
@@ -233,8 +223,6 @@
     {
         this.func_71237_c(p_71247_1_);
         this.func_71192_d("menu.loadingLevel");
-        this.field_71305_c = new WorldServer[3];
-        this.field_71312_k = new long[this.field_71305_c.length][100];
         ISaveHandler isavehandler = this.field_71310_m.func_75804_a(p_71247_1_, true);
         this.func_175584_a(this.func_71270_I(), isavehandler);
         WorldInfo worldinfo = isavehandler.func_75757_d();
@@ -265,6 +253,7 @@
             worldsettings = new WorldSettings(worldinfo);
         }
 
+        if (false) { //Forge Dead code, reimplemented below
         for (int i = 0; i < this.field_71305_c.length; ++i)
         {
             int j = 0;
@@ -283,18 +272,18 @@
             {
                 if (this.func_71242_L())
                 {
-                    this.field_71305_c[i] = (WorldServer)new WorldServerDemo(this, isavehandler, worldinfo, j, this.field_71304_b).func_175643_b();
+                    this.field_71305_c[i] = (WorldServer)(new WorldServerDemo(this, isavehandler, worldinfo, j, this.field_71304_b)).func_175643_b();
                 }
                 else
                 {
-                    this.field_71305_c[i] = (WorldServer)new WorldServer(this, isavehandler, worldinfo, j, this.field_71304_b).func_175643_b();
+                    this.field_71305_c[i] = (WorldServer)(new WorldServer(this, isavehandler, worldinfo, j, this.field_71304_b)).func_175643_b();
                 }
 
                 this.field_71305_c[i].func_72963_a(worldsettings);
             }
             else
             {
-                this.field_71305_c[i] = (WorldServer)new WorldServerMulti(this, isavehandler, j, this.field_71305_c[0], this.field_71304_b).func_175643_b();
+                this.field_71305_c[i] = (WorldServer)(new WorldServerMulti(this, isavehandler, j, this.field_71305_c[0], this.field_71304_b)).func_175643_b();
             }
 
             this.field_71305_c[i].func_72954_a(new ServerWorldEventHandler(this, this.field_71305_c[i]));
@@ -304,8 +293,23 @@
                 this.field_71305_c[i].func_72912_H().func_76060_a(this.func_71265_f());
             }
         }
-
-        this.field_71318_t.func_72364_a(this.field_71305_c);
+        } //Forge: End dead code
+
+        WorldServer overWorld = (WorldServer)(func_71242_L() ? new WorldServerDemo(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b() : new WorldServer(this, isavehandler, worldinfo, 0, field_71304_b).func_175643_b());
+        overWorld.func_72963_a(worldsettings);
+        for (int dim : net.minecraftforge.common.DimensionManager.getStaticDimensionIDs())
+        {
+            WorldServer world = (dim == 0 ? overWorld : (WorldServer)new WorldServerMulti(this, isavehandler, dim, overWorld, field_71304_b).func_175643_b());
+            world.func_72954_a(new ServerWorldEventHandler(this, world));
+
+            if (!this.func_71264_H())
+            {
+                world.func_72912_H().func_76060_a(this.func_71265_f());
+            }
+            net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Load(world));
+        }
+
+        this.field_71318_t.func_72364_a(new WorldServer[]{ overWorld });
         this.func_147139_a(this.func_147135_j());
         this.func_71222_d();
     }
@@ -320,7 +324,7 @@
         this.func_71192_d("menu.generatingTerrain");
         int j1 = 0;
         field_147145_h.info("Preparing start region for level 0");
-        WorldServer worldserver = this.field_71305_c[0];
+        WorldServer worldserver = net.minecraftforge.common.DimensionManager.getWorld(j1);
         BlockPos blockpos = worldserver.func_175694_M();
         long k1 = func_130071_aq();
 
@@ -354,9 +358,9 @@
             {
                 this.func_180507_a_("level://" + URLEncoder.encode(p_175584_1_, StandardCharsets.UTF_8.toString()) + "/" + "resources.zip", "");
             }
-            catch (UnsupportedEncodingException unsupportedencodingexception)
+            catch (UnsupportedEncodingException var5)
             {
-                field_147145_h.warn("Something went wrong url encoding {}", p_175584_1_);
+                field_147145_h.warn("Something went wrong url encoding {}", (Object)p_175584_1_);
             }
         }
     }
@@ -379,7 +383,7 @@
     {
         this.field_71302_d = p_71216_1_;
         this.field_71303_e = p_71216_2_;
-        field_147145_h.info("{}: {}%", p_71216_1_, p_71216_2_);
+        field_147145_h.info("{}: {}%", p_71216_1_, Integer.valueOf(p_71216_2_));
     }
 
     protected void func_71243_i()
@@ -396,14 +400,12 @@
             {
                 if (!p_71267_1_)
                 {
-                    field_147145_h.info(
-                        "Saving chunks for level '{}'/{}", worldserver.func_72912_H().func_76065_j(), worldserver.field_73011_w.func_186058_p().func_186065_b()
-                    );
+                    field_147145_h.info("Saving chunks for level '{}'/{}", worldserver.func_72912_H().func_76065_j(), worldserver.field_73011_w.func_186058_p().func_186065_b());
                 }
 
                 try
                 {
-                    worldserver.func_73044_a(true, null);
+                    worldserver.func_73044_a(true, (IProgressUpdate)null);
                 }
                 catch (MinecraftException minecraftexception)
                 {
@@ -447,27 +449,24 @@
             {
                 if (worldserver1 != null)
                 {
+                    net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.world.WorldEvent.Unload(worldserver1));
                     worldserver1.func_73041_k();
                 }
             }
+
+            WorldServer[] tmp = field_71305_c;
+            for (WorldServer world : tmp)
+            {
+                net.minecraftforge.common.DimensionManager.setWorld(world.field_73011_w.getDimension(), null, this);
+            }
         }
 
         if (this.field_71307_n.func_76468_d())
         {
             this.field_71307_n.func_76470_e();
         }
-    }
-
-    @SideOnly(Side.SERVER)
-    public String func_71211_k()
-    {
-        return this.field_71320_r;
-    }
-
-    @SideOnly(Side.SERVER)
-    public void func_71189_e(String p_71189_1_)
-    {
-        this.field_71320_r = p_71189_1_;
+
+        CommandBase.func_71529_a(null); // Forge: fix MC-128561
     }
 
     public boolean func_71278_l()
@@ -480,13 +479,13 @@
         this.field_71317_u = false;
     }
 
-    @Override
     public void run()
     {
         try
         {
             if (this.func_71197_b())
             {
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().handleServerStarted();
                 this.field_175591_ab = func_130071_aq();
                 long i = 0L;
                 this.field_147147_p.func_151315_a(new TextComponentString(this.field_71286_C));
@@ -500,9 +499,7 @@
 
                     if (j > 2000L && this.field_175591_ab - this.field_71299_R >= 15000L)
                     {
-                        field_147145_h.warn(
-                            "Can't keep up! Did the system time change, or is the server overloaded? Running {}ms behind, skipping {} tick(s)", j, j / 50L
-                        );
+                        field_147145_h.warn("Can't keep up! Did the system time change, or is the server overloaded? Running {}ms behind, skipping {} tick(s)", Long.valueOf(j), Long.valueOf(j / 50L));
                         j = 2000L;
                         this.field_71299_R = this.field_175591_ab;
                     }
@@ -533,11 +530,19 @@
                     Thread.sleep(Math.max(1L, 50L - i));
                     this.field_71296_Q = true;
                 }
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().handleServerStopping();
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().expectServerStopped(); // has to come before finalTick to avoid race conditions
             }
             else
             {
-                this.func_71228_a(null);
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().expectServerStopped(); // has to come before finalTick to avoid race conditions
+                this.func_71228_a((CrashReport)null);
             }
+        }
+        catch (net.minecraftforge.fml.common.StartupQuery.AbortedException e)
+        {
+            // ignore silently
+            net.minecraftforge.fml.common.FMLCommonHandler.instance().expectServerStopped(); // has to come before finalTick to avoid race conditions
         }
         catch (Throwable throwable1)
         {
@@ -553,26 +558,24 @@
                 crashreport = this.func_71230_b(new CrashReport("Exception in server tick loop", throwable1));
             }
 
-            File file1 = new File(
-                new File(this.func_71238_n(), "crash-reports"), "crash-" + new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss").format(new Date()) + "-server.txt"
-            );
+            File file1 = new File(new File(this.func_71238_n(), "crash-reports"), "crash-" + (new SimpleDateFormat("yyyy-MM-dd_HH.mm.ss")).format(new Date()) + "-server.txt");
 
             if (crashreport.func_147149_a(file1))
             {
-                field_147145_h.error("This crash report has been saved to: {}", file1.getAbsolutePath());
+                field_147145_h.error("This crash report has been saved to: {}", (Object)file1.getAbsolutePath());
             }
             else
             {
                 field_147145_h.error("We were unable to save this crash report to disk.");
             }
 
+            net.minecraftforge.fml.common.FMLCommonHandler.instance().expectServerStopped(); // has to come before finalTick to avoid race conditions
             this.func_71228_a(crashreport);
         }
         finally
         {
             try
             {
-                this.field_71316_v = true;
                 this.func_71260_j();
             }
             catch (Throwable throwable)
@@ -581,6 +584,8 @@
             }
             finally
             {
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().handleServerStopped();
+                this.field_71316_v = true;
                 this.func_71240_o();
             }
         }
@@ -607,6 +612,7 @@
                 ImageIO.write(bufferedimage, "PNG", new ByteBufOutputStream(bytebuf));
                 ByteBuf bytebuf1 = Base64.encode(bytebuf);
                 p_184107_1_.func_151320_a("data:image/png;base64," + bytebuf1.toString(StandardCharsets.UTF_8));
+                bytebuf1.release(); // Forge: fix MC-122085
             }
             catch (Exception exception)
             {
@@ -648,6 +654,7 @@
     public void func_71217_p()
     {
         long i = System.nanoTime();
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().onPreServerTick();
         ++this.field_71315_w;
 
         if (this.field_71295_T)
@@ -669,11 +676,12 @@
 
             for (int k = 0; k < agameprofile.length; ++k)
             {
-                agameprofile[k] = this.field_71318_t.func_181057_v().get(j + k).func_146103_bH();
+                agameprofile[k] = ((EntityPlayerMP)this.field_71318_t.func_181057_v().get(j + k)).func_146103_bH();
             }
 
             Collections.shuffle(Arrays.asList(agameprofile));
             this.field_147147_p.func_151318_b().func_151330_a(agameprofile);
+            this.field_147147_p.invalidateJson();
         }
 
         if (this.field_71315_w % 900 == 0)
@@ -701,6 +709,7 @@
 
         this.field_71304_b.func_76319_b();
         this.field_71304_b.func_76319_b();
+        net.minecraftforge.fml.common.FMLCommonHandler.instance().onPostServerTick();
     }
 
     public void func_71190_q()
@@ -716,28 +725,31 @@
         }
 
         this.field_71304_b.func_76318_c("levels");
+        net.minecraftforge.common.chunkio.ChunkIOExecutor.tick();
 
-        for (int j = 0; j < this.field_71305_c.length; ++j)
+        Integer[] ids = net.minecraftforge.common.DimensionManager.getIDs(this.field_71315_w % 200 == 0);
+        for (int x = 0; x < ids.length; x++)
         {
+            int id = ids[x];
             long i = System.nanoTime();
 
-            if (j == 0 || this.func_71255_r())
+            if (id == 0 || this.func_71255_r())
             {
-                WorldServer worldserver = this.field_71305_c[j];
-                this.field_71304_b.func_194340_a(() -> worldserver.func_72912_H().func_76065_j());
+                WorldServer worldserver = net.minecraftforge.common.DimensionManager.getWorld(id);
+                this.field_71304_b.func_194340_a(() ->
+                {
+                    return worldserver.func_72912_H().func_76065_j();
+                });
 
                 if (this.field_71315_w % 20 == 0)
                 {
                     this.field_71304_b.func_76320_a("timeSync");
-                    this.field_71318_t
-                    .func_148537_a(
-                        new SPacketTimeUpdate(worldserver.func_82737_E(), worldserver.func_72820_D(), worldserver.func_82736_K().func_82766_b("doDaylightCycle")),
-                        worldserver.field_73011_w.func_186058_p().func_186068_a()
-                    );
+                    this.field_71318_t.func_148537_a(new SPacketTimeUpdate(worldserver.func_82737_E(), worldserver.func_72820_D(), worldserver.func_82736_K().func_82766_b("doDaylightCycle")), worldserver.field_73011_w.getDimension());
                     this.field_71304_b.func_76319_b();
                 }
 
                 this.field_71304_b.func_76320_a("tick");
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().onPreWorldTick(worldserver);
 
                 try
                 {
@@ -761,6 +773,7 @@
                     throw new ReportedException(crashreport1);
                 }
 
+                net.minecraftforge.fml.common.FMLCommonHandler.instance().onPostWorldTick(worldserver);
                 this.field_71304_b.func_76319_b();
                 this.field_71304_b.func_76320_a("tracker");
                 worldserver.func_73039_n().func_72788_a();
@@ -768,9 +781,11 @@
                 this.field_71304_b.func_76319_b();
             }
 
-            this.field_71312_k[j][this.field_71315_w % 100] = System.nanoTime() - i;
+            worldTickTimes.get(id)[this.field_71315_w % 100] = System.nanoTime() - i;
         }
 
+        this.field_71304_b.func_76318_c("dim_unloading");
+        net.minecraftforge.common.DimensionManager.unloadWorlds(worldTickTimes);
         this.field_71304_b.func_76318_c("connection");
         this.func_147137_ag().func_151269_c();
         this.field_71304_b.func_76318_c("players");
@@ -781,7 +796,7 @@
 
         for (int k = 0; k < this.field_71322_p.size(); ++k)
         {
-            this.field_71322_p.get(k).func_73660_a();
+            ((ITickable)this.field_71322_p.get(k)).func_73660_a();
         }
 
         this.field_71304_b.func_76319_b();
@@ -792,136 +807,10 @@
         return true;
     }
 
-    @SideOnly(Side.SERVER)
-    public void func_82010_a(ITickable p_82010_1_)
-    {
-        this.field_71322_p.add(p_82010_1_);
-    }
-
-    @SideOnly(Side.SERVER)
-    public static void main(String[] p_main_0_)
-    {
-        Bootstrap.func_151354_b();
-
-        try
-        {
-            boolean flag = true;
-            String s = null;
-            String s1 = ".";
-            String s2 = null;
-            boolean flag1 = false;
-            boolean flag2 = false;
-            int i = -1;
-
-            for (int j = 0; j < p_main_0_.length; ++j)
-            {
-                String s3 = p_main_0_[j];
-                String s4 = j == p_main_0_.length - 1 ? null : p_main_0_[j + 1];
-                boolean flag3 = false;
-
-                if ("nogui".equals(s3) || "--nogui".equals(s3))
-                {
-                    flag = false;
-                }
-                else if ("--port".equals(s3) && s4 != null)
-                {
-                    flag3 = true;
-
-                    try
-                    {
-                        i = Integer.parseInt(s4);
-                    }
-                    catch (NumberFormatException numberformatexception)
-                    {
-                    }
-                }
-                else if ("--singleplayer".equals(s3) && s4 != null)
-                {
-                    flag3 = true;
-                    s = s4;
-                }
-                else if ("--universe".equals(s3) && s4 != null)
-                {
-                    flag3 = true;
-                    s1 = s4;
-                }
-                else if ("--world".equals(s3) && s4 != null)
-                {
-                    flag3 = true;
-                    s2 = s4;
-                }
-                else if ("--demo".equals(s3))
-                {
-                    flag1 = true;
-                }
-                else if ("--bonusChest".equals(s3))
-                {
-                    flag2 = true;
-                }
-
-                if (flag3)
-                {
-                    ++j;
-                }
-            }
-
-            YggdrasilAuthenticationService yggdrasilauthenticationservice = new YggdrasilAuthenticationService(Proxy.NO_PROXY, UUID.randomUUID().toString());
-            MinecraftSessionService minecraftsessionservice = yggdrasilauthenticationservice.createMinecraftSessionService();
-            GameProfileRepository gameprofilerepository = yggdrasilauthenticationservice.createProfileRepository();
-            PlayerProfileCache playerprofilecache = new PlayerProfileCache(gameprofilerepository, new File(s1, field_152367_a.getName()));
-            final DedicatedServer dedicatedserver = new DedicatedServer(
-                new File(s1), DataFixesManager.func_188279_a(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache
-            );
-
-            if (s != null)
-            {
-                dedicatedserver.func_71224_l(s);
-            }
-
-            if (s2 != null)
-            {
-                dedicatedserver.func_71261_m(s2);
-            }
-
-            if (i >= 0)
-            {
-                dedicatedserver.func_71208_b(i);
-            }
-
-            if (flag1)
-            {
-                dedicatedserver.func_71204_b(true);
-            }
-
-            if (flag2)
-            {
-                dedicatedserver.func_71194_c(true);
-            }
-
-            if (flag && !GraphicsEnvironment.isHeadless())
-            {
-                dedicatedserver.func_120011_ar();
-            }
-
-            dedicatedserver.func_71256_s();
-            Runtime.getRuntime().addShutdownHook(new Thread("Server Shutdown Thread")
-            {
-                @Override
-                public void run()
-                {
-                    dedicatedserver.func_71260_j();
-                }
-            });
-        }
-        catch (Exception exception)
-        {
-            field_147145_h.fatal("Failed to start the minecraft server", (Throwable)exception);
-        }
-    }
-
     public void func_71256_s()
     {
-        this.field_175590_aa = new Thread(this, "Server thread");
+        net.minecraftforge.fml.common.StartupQuery.reset();
+        this.field_175590_aa = new Thread(net.minecraftforge.fml.common.thread.SidedThreadGroups.SERVER, this, "Server thread");
         this.field_175590_aa.start();
     }
 
@@ -930,12 +819,6 @@
         return new File(this.func_71238_n(), p_71209_1_);
     }
 
-    @SideOnly(Side.SERVER)
-    public void func_71244_g(String p_71244_1_)
-    {
-        field_147145_h.info(p_71244_1_);
-    }
-
     public void func_71236_h(String p_71236_1_)
     {
         field_147145_h.warn(p_71236_1_);
@@ -943,14 +826,13 @@
 
     public WorldServer func_71218_a(int p_71218_1_)
     {
-        if (p_71218_1_ == -1)
-        {
-            return this.field_71305_c[1];
-        }
-        else
-        {
-            return p_71218_1_ == 1 ? this.field_71305_c[2] : this.field_71305_c[0];
-        }
+        WorldServer ret = net.minecraftforge.common.DimensionManager.getWorld(p_71218_1_, true);
+        if (ret == null)
+        {
+            net.minecraftforge.common.DimensionManager.initDimension(p_71218_1_);
+            ret = net.minecraftforge.common.DimensionManager.getWorld(p_71218_1_);
+        }
+        return ret;
     }
 
     public String func_71249_w()
@@ -978,30 +860,9 @@
         return this.field_71318_t.func_152600_g();
     }
 
-    @SideOnly(Side.SERVER)
-    public boolean func_71239_B()
-    {
-        return false;
-    }
-
-    @SideOnly(Side.SERVER)
-    public void func_71201_j(String p_71201_1_)
-    {
-        field_147145_h.error(p_71201_1_);
-    }
-
-    @SideOnly(Side.SERVER)
-    public void func_71198_k(String p_71198_1_)
-    {
-        if (this.func_71239_B())
-        {
-            field_147145_h.info(p_71198_1_);
-        }
-    }
-
     public String getServerModName()
     {
-        return "vanilla";
+        return net.minecraftforge.fml.common.FMLCommonHandler.instance().getModName();
     }
 
     public CrashReport func_71230_b(CrashReport p_71230_1_)
@@ -1016,21 +877,13 @@
 
         if (this.field_71318_t != null)
         {
-            p_71230_1_.func_85056_g()
-            .func_189529_a(
-                "Player Count",
-                new ICrashReportDetail<String>()
+            p_71230_1_.func_85056_g().func_189529_a("Player Count", new ICrashReportDetail<String>()
             {
                 public String call()
                 {
-                    return MinecraftServer.this.field_71318_t.func_72394_k()
-                           + " / "
-                           + MinecraftServer.this.field_71318_t.func_72352_l()
-                           + "; "
-                           + MinecraftServer.this.field_71318_t.func_181057_v();
+                    return MinecraftServer.this.field_71318_t.func_72394_k() + " / " + MinecraftServer.this.field_71318_t.func_72352_l() + "; " + MinecraftServer.this.field_71318_t.func_181057_v();
                 }
-            }
-            );
+            });
         }
 
         return p_71230_1_;
@@ -1038,7 +891,7 @@
 
     public List<String> func_184104_a(ICommandSender p_184104_1_, String p_184104_2_, @Nullable BlockPos p_184104_3_, boolean p_184104_4_)
     {
-        List<String> list = Lists.newArrayList();
+        List<String> list = Lists.<String>newArrayList();
         boolean flag = p_184104_2_.startsWith("/");
 
         if (flag)
@@ -1090,19 +943,16 @@
         return this.field_71308_o != null;
     }
 
-    @Override
     public String func_70005_c_()
     {
         return "Server";
     }
 
-    @Override
     public void func_145747_a(ITextComponent p_145747_1_)
     {
         field_147145_h.info(p_145747_1_.func_150260_c());
     }
 
-    @Override
     public boolean func_70003_b(int p_70003_1_, String p_70003_2_)
     {
         return true;
@@ -1118,18 +968,6 @@
         return this.field_71292_I;
     }
 
-    @SideOnly(Side.SERVER)
-    public int func_71215_F()
-    {
-        return this.field_71319_s;
-    }
-
-    @SideOnly(Side.SERVER)
-    public void func_71208_b(int p_71208_1_)
-    {
-        this.field_71319_s = p_71208_1_;
-    }
-
     public String func_71214_G()
     {
         return this.field_71293_J;
@@ -1174,24 +1012,24 @@
 
     public void func_147139_a(EnumDifficulty p_147139_1_)
     {
-        for (WorldServer worldserver : this.field_71305_c)
+        for (WorldServer worldserver1 : this.field_71305_c)
         {
-            if (worldserver != null)
+            if (worldserver1 != null)
             {
-                if (worldserver.func_72912_H().func_76093_s())
+                if (worldserver1.func_72912_H().func_76093_s())
                 {
-                    worldserver.func_72912_H().func_176144_a(EnumDifficulty.HARD);
-                    worldserver.func_72891_a(true, true);
+                    worldserver1.func_72912_H().func_176144_a(EnumDifficulty.HARD);
+                    worldserver1.func_72891_a(true, true);
                 }
                 else if (this.func_71264_H())
                 {
-                    worldserver.func_72912_H().func_176144_a(p_147139_1_);
-                    worldserver.func_72891_a(worldserver.func_175659_aa() != EnumDifficulty.PEACEFUL, true);
+                    worldserver1.func_72912_H().func_176144_a(p_147139_1_);
+                    worldserver1.func_72891_a(worldserver1.func_175659_aa() != EnumDifficulty.PEACEFUL, true);
                 }
                 else
                 {
-                    worldserver.func_72912_H().func_176144_a(p_147139_1_);
-                    worldserver.func_72891_a(this.func_71193_K(), this.field_71324_y);
+                    worldserver1.func_72912_H().func_176144_a(p_147139_1_);
+                    worldserver1.func_72891_a(this.func_71193_K(), this.field_71324_y);
                 }
             }
         }
@@ -1238,58 +1076,55 @@
         this.field_175588_P = p_180507_2_;
     }
 
-    @Override
     public void func_70000_a(Snooper p_70000_1_)
     {
-        p_70000_1_.func_152768_a("whitelist_enabled", false);
-        p_70000_1_.func_152768_a("whitelist_count", 0);
+        p_70000_1_.func_152768_a("whitelist_enabled", Boolean.valueOf(false));
+        p_70000_1_.func_152768_a("whitelist_count", Integer.valueOf(0));
 
         if (this.field_71318_t != null)
         {
-            p_70000_1_.func_152768_a("players_current", this.func_71233_x());
-            p_70000_1_.func_152768_a("players_max", this.func_71275_y());
-            p_70000_1_.func_152768_a("players_seen", this.field_71318_t.func_72373_m().length);
+            p_70000_1_.func_152768_a("players_current", Integer.valueOf(this.func_71233_x()));
+            p_70000_1_.func_152768_a("players_max", Integer.valueOf(this.func_71275_y()));
+            p_70000_1_.func_152768_a("players_seen", Integer.valueOf(this.field_71318_t.func_72373_m().length));
         }
 
-        p_70000_1_.func_152768_a("uses_auth", this.field_71325_x);
+        p_70000_1_.func_152768_a("uses_auth", Boolean.valueOf(this.field_71325_x));
         p_70000_1_.func_152768_a("gui_state", this.func_71279_ae() ? "enabled" : "disabled");
-        p_70000_1_.func_152768_a("run_time", (func_130071_aq() - p_70000_1_.func_130105_g()) / 60L * 1000L);
-        p_70000_1_.func_152768_a("avg_tick_ms", (int)(MathHelper.func_76127_a(this.field_71311_j) * 1.0E-6));
-        int i = 0;
+        p_70000_1_.func_152768_a("run_time", Long.valueOf((func_130071_aq() - p_70000_1_.func_130105_g()) / 60L * 1000L));
+        p_70000_1_.func_152768_a("avg_tick_ms", Integer.valueOf((int)(MathHelper.func_76127_a(this.field_71311_j) * 1.0E-6D)));
+        int l = 0;
 
         if (this.field_71305_c != null)
         {
-            for (WorldServer worldserver : this.field_71305_c)
+            for (WorldServer worldserver1 : this.field_71305_c)
             {
-                if (worldserver != null)
+                if (worldserver1 != null)
                 {
-                    WorldInfo worldinfo = worldserver.func_72912_H();
-                    p_70000_1_.func_152768_a("world[" + i + "][dimension]", worldserver.field_73011_w.func_186058_p().func_186068_a());
-                    p_70000_1_.func_152768_a("world[" + i + "][mode]", worldinfo.func_76077_q());
-                    p_70000_1_.func_152768_a("world[" + i + "][difficulty]", worldserver.func_175659_aa());
-                    p_70000_1_.func_152768_a("world[" + i + "][hardcore]", worldinfo.func_76093_s());
-                    p_70000_1_.func_152768_a("world[" + i + "][generator_name]", worldinfo.func_76067_t().func_77127_a());
-                    p_70000_1_.func_152768_a("world[" + i + "][generator_version]", worldinfo.func_76067_t().func_77131_c());
-                    p_70000_1_.func_152768_a("world[" + i + "][height]", this.field_71280_D);
-                    p_70000_1_.func_152768_a("world[" + i + "][chunks_loaded]", worldserver.func_72863_F().func_73152_e());
-                    ++i;
+                    WorldInfo worldinfo = worldserver1.func_72912_H();
+                    p_70000_1_.func_152768_a("world[" + l + "][dimension]", Integer.valueOf(worldserver1.field_73011_w.func_186058_p().func_186068_a()));
+                    p_70000_1_.func_152768_a("world[" + l + "][mode]", worldinfo.func_76077_q());
+                    p_70000_1_.func_152768_a("world[" + l + "][difficulty]", worldserver1.func_175659_aa());
+                    p_70000_1_.func_152768_a("world[" + l + "][hardcore]", Boolean.valueOf(worldinfo.func_76093_s()));
+                    p_70000_1_.func_152768_a("world[" + l + "][generator_name]", worldinfo.func_76067_t().func_77127_a());
+                    p_70000_1_.func_152768_a("world[" + l + "][generator_version]", Integer.valueOf(worldinfo.func_76067_t().func_77131_c()));
+                    p_70000_1_.func_152768_a("world[" + l + "][height]", Integer.valueOf(this.field_71280_D));
+                    p_70000_1_.func_152768_a("world[" + l + "][chunks_loaded]", Integer.valueOf(worldserver1.func_72863_F().func_73152_e()));
+                    ++l;
                 }
             }
         }
 
-        p_70000_1_.func_152768_a("worlds", i);
+        p_70000_1_.func_152768_a("worlds", Integer.valueOf(l));
     }
 
-    @Override
     public void func_70001_b(Snooper p_70001_1_)
     {
-        p_70001_1_.func_152767_b("singleplayer", this.func_71264_H());
+        p_70001_1_.func_152767_b("singleplayer", Boolean.valueOf(this.func_71264_H()));
         p_70001_1_.func_152767_b("server_brand", this.getServerModName());
         p_70001_1_.func_152767_b("gui_supported", GraphicsEnvironment.isHeadless() ? "headless" : "supported");
-        p_70001_1_.func_152767_b("dedicated", this.func_71262_S());
+        p_70001_1_.func_152767_b("dedicated", Boolean.valueOf(this.func_71262_S()));
     }
 
-    @Override
     public boolean func_70002_Q()
     {
         return true;
@@ -1312,12 +1147,6 @@
         return this.field_190519_A;
     }
 
-    @SideOnly(Side.SERVER)
-    public void func_190517_e(boolean p_190517_1_)
-    {
-        this.field_190519_A = p_190517_1_;
-    }
-
     public boolean func_71268_U()
     {
         return this.field_71324_y;
@@ -1399,9 +1228,9 @@
 
     public void func_71235_a(GameType p_71235_1_)
     {
-        for (WorldServer worldserver : this.field_71305_c)
+        for (WorldServer worldserver1 : this.field_71305_c)
         {
-            worldserver.func_72912_H().func_76060_a(p_71235_1_);
+            worldserver1.func_72912_H().func_76060_a(p_71235_1_);
         }
     }
 
@@ -1439,29 +1268,16 @@
         return this.field_71307_n;
     }
 
-    @Override
     public World func_130014_f_()
     {
         return this.field_71305_c[0];
     }
 
-    @SideOnly(Side.SERVER)
-    public int func_82357_ak()
-    {
-        return 16;
-    }
-
     public boolean func_175579_a(World p_175579_1_, BlockPos p_175579_2_, EntityPlayer p_175579_3_)
     {
         return false;
     }
 
-    @SideOnly(Side.SERVER)
-    public void func_104055_i(boolean p_104055_1_)
-    {
-        this.field_104057_T = p_104055_1_;
-    }
-
     public boolean func_104056_am()
     {
         return this.field_104057_T;
@@ -1515,11 +1331,11 @@
     @Nullable
     public Entity func_175576_a(UUID p_175576_1_)
     {
-        for (WorldServer worldserver : this.field_71305_c)
+        for (WorldServer worldserver1 : this.field_71305_c)
         {
-            if (worldserver != null)
+            if (worldserver1 != null)
             {
-                Entity entity = worldserver.func_175733_a(p_175576_1_);
+                Entity entity = worldserver1.func_175733_a(p_175576_1_);
 
                 if (entity != null)
                 {
@@ -1531,13 +1347,11 @@
         return null;
     }
 
-    @Override
     public boolean func_174792_t_()
     {
         return this.field_71305_c[0].func_82736_K().func_82766_b("sendCommandFeedback");
     }
 
-    @Override
     public MinecraftServer func_184102_h()
     {
         return this;
@@ -1554,7 +1368,7 @@
 
         if (!this.func_152345_ab() && !this.func_71241_aa())
         {
-            ListenableFutureTask<V> listenablefuturetask = ListenableFutureTask.create(p_175586_1_);
+            ListenableFutureTask<V> listenablefuturetask = ListenableFutureTask.<V>create(p_175586_1_);
 
             synchronized (this.field_175589_i)
             {
@@ -1566,23 +1380,21 @@
         {
             try
             {
-                return Futures.immediateFuture(p_175586_1_.call());
+                return Futures.<V>immediateFuture(p_175586_1_.call());
             }
             catch (Exception exception)
             {
-                return Futures.immediateFailedCheckedFuture(exception);
+                return Futures.immediateFailedFuture(exception);
             }
         }
     }
 
-    @Override
     public ListenableFuture<Object> func_152344_a(Runnable p_152344_1_)
     {
         Validate.notNull(p_152344_1_);
-        return this.func_175586_a(Executors.callable(p_152344_1_));
+        return this.<Object>func_175586_a(Executors.callable(p_152344_1_));
     }
 
-    @Override
     public boolean func_152345_ab()
     {
         return Thread.currentThread() == this.field_175590_aa;
@@ -1593,18 +1405,6 @@
         return 256;
     }
 
-    @SideOnly(Side.SERVER)
-    public long func_175587_aJ()
-    {
-        return this.field_175591_ab;
-    }
-
-    @SideOnly(Side.SERVER)
-    public Thread func_175583_aK()
-    {
-        return this.field_175590_aa;
-    }
-
     public int func_184108_a(@Nullable WorldServer p_184108_1_)
     {
         return p_184108_1_ != null ? p_184108_1_.func_82736_K().func_180263_c("spawnRadius") : 10;
@@ -1634,5 +1434,229 @@
         {
             this.func_152344_a(this::func_193031_aM);
         }
+    }
+
+    @SideOnly(Side.SERVER)
+    public String func_71211_k()
+    {
+        return this.field_71320_r;
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_71189_e(String p_71189_1_)
+    {
+        this.field_71320_r = p_71189_1_;
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_82010_a(ITickable p_82010_1_)
+    {
+        this.field_71322_p.add(p_82010_1_);
+    }
+
+    @SideOnly(Side.SERVER)
+    public static void main(String[] p_main_0_)
+    {
+        //Forge: Copied from DedicatedServer.init as to run as early as possible, Old code left in place intentionally.
+        //Done in good faith with permission: https://github.com/MinecraftForge/MinecraftForge/issues/3659#issuecomment-390467028
+        ServerEula eula = new ServerEula(new File("eula.txt"));
+        if (!eula.func_154346_a())
+        {
+            field_147145_h.info("You need to agree to the EULA in order to run the server. Go to eula.txt for more info.");
+            eula.func_154348_b();
+            return;
+        }
+
+        Bootstrap.func_151354_b();
+
+        try
+        {
+            boolean flag = true;
+            String s = null;
+            String s1 = ".";
+            String s2 = null;
+            boolean flag1 = false;
+            boolean flag2 = false;
+            int l = -1;
+
+            for (int i1 = 0; i1 < p_main_0_.length; ++i1)
+            {
+                String s3 = p_main_0_[i1];
+                String s4 = i1 == p_main_0_.length - 1 ? null : p_main_0_[i1 + 1];
+                boolean flag3 = false;
+
+                if (!"nogui".equals(s3) && !"--nogui".equals(s3))
+                {
+                    if ("--port".equals(s3) && s4 != null)
+                    {
+                        flag3 = true;
+
+                        try
+                        {
+                            l = Integer.parseInt(s4);
+                        }
+                        catch (NumberFormatException var13)
+                        {
+                            ;
+                        }
+                    }
+                    else if ("--singleplayer".equals(s3) && s4 != null)
+                    {
+                        flag3 = true;
+                        s = s4;
+                    }
+                    else if ("--universe".equals(s3) && s4 != null)
+                    {
+                        flag3 = true;
+                        s1 = s4;
+                    }
+                    else if ("--world".equals(s3) && s4 != null)
+                    {
+                        flag3 = true;
+                        s2 = s4;
+                    }
+                    else if ("--demo".equals(s3))
+                    {
+                        flag1 = true;
+                    }
+                    else if ("--bonusChest".equals(s3))
+                    {
+                        flag2 = true;
+                    }
+                }
+                else
+                {
+                    flag = false;
+                }
+
+                if (flag3)
+                {
+                    ++i1;
+                }
+            }
+
+            YggdrasilAuthenticationService yggdrasilauthenticationservice = new YggdrasilAuthenticationService(Proxy.NO_PROXY, UUID.randomUUID().toString());
+            MinecraftSessionService minecraftsessionservice = yggdrasilauthenticationservice.createMinecraftSessionService();
+            GameProfileRepository gameprofilerepository = yggdrasilauthenticationservice.createProfileRepository();
+            PlayerProfileCache playerprofilecache = new PlayerProfileCache(gameprofilerepository, new File(s1, field_152367_a.getName()));
+            final DedicatedServer dedicatedserver = new DedicatedServer(new File(s1), DataFixesManager.func_188279_a(), yggdrasilauthenticationservice, minecraftsessionservice, gameprofilerepository, playerprofilecache);
+
+            if (s != null)
+            {
+                dedicatedserver.func_71224_l(s);
+            }
+
+            if (s2 != null)
+            {
+                dedicatedserver.func_71261_m(s2);
+            }
+
+            if (l >= 0)
+            {
+                dedicatedserver.func_71208_b(l);
+            }
+
+            if (flag1)
+            {
+                dedicatedserver.func_71204_b(true);
+            }
+
+            if (flag2)
+            {
+                dedicatedserver.func_71194_c(true);
+            }
+
+            if (flag && !GraphicsEnvironment.isHeadless())
+            {
+                dedicatedserver.func_120011_ar();
+            }
+
+            dedicatedserver.func_71256_s();
+            Runtime.getRuntime().addShutdownHook(new Thread("Server Shutdown Thread")
+            {
+                public void run()
+                {
+                    dedicatedserver.func_71260_j();
+                }
+            });
+        }
+        catch (Exception exception)
+        {
+            field_147145_h.fatal("Failed to start the minecraft server", (Throwable)exception);
+        }
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_71244_g(String p_71244_1_)
+    {
+        field_147145_h.info(p_71244_1_);
+    }
+
+    @SideOnly(Side.SERVER)
+    public boolean func_71239_B()
+    {
+        return false;
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_71201_j(String p_71201_1_)
+    {
+        field_147145_h.error(p_71201_1_);
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_71198_k(String p_71198_1_)
+    {
+        if (this.func_71239_B())
+        {
+            field_147145_h.info(p_71198_1_);
+        }
+    }
+
+    @SideOnly(Side.SERVER)
+    public int func_71215_F()
+    {
+        return this.field_71319_s;
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_71208_b(int p_71208_1_)
+    {
+        this.field_71319_s = p_71208_1_;
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_190517_e(boolean p_190517_1_)
+    {
+        this.field_190519_A = p_190517_1_;
+    }
+
+    @SideOnly(Side.SERVER)
+    public int func_82357_ak()
+    {
+        return 16;
+    }
+
+    @SideOnly(Side.SERVER)
+    public void func_104055_i(boolean p_104055_1_)
+    {
+        this.field_104057_T = p_104055_1_;
+    }
+
+    @SideOnly(Side.SERVER)
+    public long func_175587_aJ()
+    {
+        return this.field_175591_ab;
+    }
+
+    @SideOnly(Side.SERVER)
+    public Thread func_175583_aK()
+    {
+        return this.field_175590_aa;
+    }
+
+    public DataFixer getDataFixer()
+    {
+        return this.field_184112_s;
     }
 }
