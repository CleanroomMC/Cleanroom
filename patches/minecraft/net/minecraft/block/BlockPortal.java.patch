--- before/net/minecraft/block/BlockPortal.java
+++ after/net/minecraft/block/BlockPortal.java
@@ -4,6 +4,7 @@
 import java.util.Random;
 import javax.annotation.Nullable;
 import net.minecraft.block.material.Material;
+import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockFaceShape;
 import net.minecraft.block.state.BlockStateContainer;
@@ -31,12 +32,10 @@
 
 public class BlockPortal extends BlockBreakable
 {
-    public static final PropertyEnum<EnumFacing.Axis> AXIS = PropertyEnum.create(
-                    "axis", EnumFacing.Axis.class, EnumFacing.Axis.X, EnumFacing.Axis.Z
-                );
-    protected static final AxisAlignedBB X_AABB = new AxisAlignedBB(0.0, 0.0, 0.375, 1.0, 1.0, 0.625);
-    protected static final AxisAlignedBB Z_AABB = new AxisAlignedBB(0.375, 0.0, 0.0, 0.625, 1.0, 1.0);
-    protected static final AxisAlignedBB Y_AABB = new AxisAlignedBB(0.375, 0.0, 0.375, 0.625, 1.0, 0.625);
+    public static final PropertyEnum<EnumFacing.Axis> AXIS = PropertyEnum.<EnumFacing.Axis>create("axis", EnumFacing.Axis.class, EnumFacing.Axis.X, EnumFacing.Axis.Z);
+    protected static final AxisAlignedBB X_AABB = new AxisAlignedBB(0.0D, 0.0D, 0.375D, 1.0D, 1.0D, 0.625D);
+    protected static final AxisAlignedBB Z_AABB = new AxisAlignedBB(0.375D, 0.0D, 0.0D, 0.625D, 1.0D, 1.0D);
+    protected static final AxisAlignedBB Y_AABB = new AxisAlignedBB(0.375D, 0.0D, 0.375D, 0.625D, 1.0D, 0.625D);
 
     public BlockPortal()
     {
@@ -45,7 +44,6 @@
         this.setTickRandomly(true);
     }
 
-    @Override
     public AxisAlignedBB getBoundingBox(IBlockState state, IBlockAccess source, BlockPos pos)
     {
         switch ((EnumFacing.Axis)state.getValue(AXIS))
@@ -60,32 +58,23 @@
         }
     }
 
-    @Override
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         super.updateTick(worldIn, pos, state, rand);
 
-        if (worldIn.provider.isSurfaceWorld()
-                && worldIn.getGameRules().getBoolean("doMobSpawning")
-                && rand.nextInt(2000) < worldIn.getDifficulty().getId())
+        if (worldIn.provider.isSurfaceWorld() && worldIn.getGameRules().getBoolean("doMobSpawning") && rand.nextInt(2000) < worldIn.getDifficulty().getId())
         {
             int i = pos.getY();
-            BlockPos blockpos = pos;
+            BlockPos blockpos;
 
-            while (!worldIn.getBlockState(blockpos).isTopSolid() && blockpos.getY() > 0)
+            for (blockpos = pos; !worldIn.getBlockState(blockpos).isTopSolid() && blockpos.getY() > 0; blockpos = blockpos.down())
             {
-                blockpos = blockpos.down();
+                ;
             }
 
             if (i > 0 && !worldIn.getBlockState(blockpos.up()).isNormalCube())
             {
-                Entity entity = ItemMonsterPlacer.spawnCreature(
-                                    worldIn,
-                                    EntityList.getKey(EntityPigZombie.class),
-                                    (double)blockpos.getX() + 0.5,
-                                    (double)blockpos.getY() + 1.1,
-                                    (double)blockpos.getZ() + 0.5
-                                );
+                Entity entity = ItemMonsterPlacer.spawnCreature(worldIn, EntityList.getKey(EntityPigZombie.class), (double)blockpos.getX() + 0.5D, (double)blockpos.getY() + 1.1D, (double)blockpos.getZ() + 0.5D);
 
                 if (entity != null)
                 {
@@ -96,7 +85,6 @@
     }
 
     @Nullable
-    @Override
     public AxisAlignedBB getCollisionBoundingBox(IBlockState blockState, IBlockAccess worldIn, BlockPos pos)
     {
         return NULL_AABB;
@@ -114,7 +102,6 @@
         }
     }
 
-    @Override
     public boolean isFullCube(IBlockState state)
     {
         return false;
@@ -124,7 +111,7 @@
     {
         BlockPortal.Size blockportal$size = new BlockPortal.Size(worldIn, pos, EnumFacing.Axis.X);
 
-        if (blockportal$size.isValid() && blockportal$size.portalBlockCount == 0)
+        if (blockportal$size.isValid() && blockportal$size.portalBlockCount == 0 && !net.minecraftforge.event.ForgeEventFactory.onTrySpawnPortal(worldIn, pos, blockportal$size))
         {
             blockportal$size.placePortalBlocks();
             return true;
@@ -133,7 +120,7 @@
         {
             BlockPortal.Size blockportal$size1 = new BlockPortal.Size(worldIn, pos, EnumFacing.Axis.Z);
 
-            if (blockportal$size1.isValid() && blockportal$size1.portalBlockCount == 0)
+            if (blockportal$size1.isValid() && blockportal$size1.portalBlockCount == 0 && !net.minecraftforge.event.ForgeEventFactory.onTrySpawnPortal(worldIn, pos, blockportal$size1))
             {
                 blockportal$size1.placePortalBlocks();
                 return true;
@@ -145,10 +132,9 @@
         }
     }
 
-    @Override
     public void neighborChanged(IBlockState state, World worldIn, BlockPos pos, Block blockIn, BlockPos fromPos)
     {
-        EnumFacing.Axis enumfacing$axis = state.getValue(AXIS);
+        EnumFacing.Axis enumfacing$axis = (EnumFacing.Axis)state.getValue(AXIS);
 
         if (enumfacing$axis == EnumFacing.Axis.X)
         {
@@ -171,7 +157,6 @@
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public boolean shouldSideBeRendered(IBlockState blockState, IBlockAccess blockAccess, BlockPos pos, EnumFacing side)
     {
         pos = pos.offset(side);
@@ -179,7 +164,7 @@
 
         if (blockState.getBlock() == this)
         {
-            enumfacing$axis = blockState.getValue(AXIS);
+            enumfacing$axis = (EnumFacing.Axis)blockState.getValue(AXIS);
 
             if (enumfacing$axis == null)
             {
@@ -197,14 +182,10 @@
             }
         }
 
-        boolean flag = blockAccess.getBlockState(pos.west()).getBlock() == this
-                       && blockAccess.getBlockState(pos.west(2)).getBlock() != this;
-        boolean flag1 = blockAccess.getBlockState(pos.east()).getBlock() == this
-                        && blockAccess.getBlockState(pos.east(2)).getBlock() != this;
-        boolean flag2 = blockAccess.getBlockState(pos.north()).getBlock() == this
-                        && blockAccess.getBlockState(pos.north(2)).getBlock() != this;
-        boolean flag3 = blockAccess.getBlockState(pos.south()).getBlock() == this
-                        && blockAccess.getBlockState(pos.south(2)).getBlock() != this;
+        boolean flag = blockAccess.getBlockState(pos.west()).getBlock() == this && blockAccess.getBlockState(pos.west(2)).getBlock() != this;
+        boolean flag1 = blockAccess.getBlockState(pos.east()).getBlock() == this && blockAccess.getBlockState(pos.east(2)).getBlock() != this;
+        boolean flag2 = blockAccess.getBlockState(pos.north()).getBlock() == this && blockAccess.getBlockState(pos.north(2)).getBlock() != this;
+        boolean flag3 = blockAccess.getBlockState(pos.south()).getBlock() == this && blockAccess.getBlockState(pos.south(2)).getBlock() != this;
         boolean flag4 = flag || flag1 || enumfacing$axis == EnumFacing.Axis.X;
         boolean flag5 = flag2 || flag3 || enumfacing$axis == EnumFacing.Axis.Z;
 
@@ -216,26 +197,27 @@
         {
             return true;
         }
+        else if (flag5 && side == EnumFacing.NORTH)
+        {
+            return true;
+        }
         else
         {
-            return flag5 && side == EnumFacing.NORTH ? true : flag5 && side == EnumFacing.SOUTH;
+            return flag5 && side == EnumFacing.SOUTH;
         }
     }
 
-    @Override
     public int quantityDropped(Random random)
     {
         return 0;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public BlockRenderLayer getRenderLayer()
     {
         return BlockRenderLayer.TRANSLUCENT;
     }
 
-    @Override
     public void onEntityCollision(World worldIn, BlockPos pos, IBlockState state, Entity entityIn)
     {
         if (!entityIn.isRiding() && !entityIn.isBeingRidden() && entityIn.isNonBoss())
@@ -245,42 +227,31 @@
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public void randomDisplayTick(IBlockState stateIn, World worldIn, BlockPos pos, Random rand)
     {
         if (rand.nextInt(100) == 0)
         {
-            worldIn.playSound(
-                (double)pos.getX() + 0.5,
-                (double)pos.getY() + 0.5,
-                (double)pos.getZ() + 0.5,
-                SoundEvents.BLOCK_PORTAL_AMBIENT,
-                SoundCategory.BLOCKS,
-                0.5F,
-                rand.nextFloat() * 0.4F + 0.8F,
-                false
-            );
+            worldIn.playSound((double)pos.getX() + 0.5D, (double)pos.getY() + 0.5D, (double)pos.getZ() + 0.5D, SoundEvents.BLOCK_PORTAL_AMBIENT, SoundCategory.BLOCKS, 0.5F, rand.nextFloat() * 0.4F + 0.8F, false);
         }
 
-        for (int i = 0; i < 4; i++)
+        for (int i = 0; i < 4; ++i)
         {
             double d0 = (double)((float)pos.getX() + rand.nextFloat());
             double d1 = (double)((float)pos.getY() + rand.nextFloat());
             double d2 = (double)((float)pos.getZ() + rand.nextFloat());
-            double d3 = ((double)rand.nextFloat() - 0.5) * 0.5;
-            double d4 = ((double)rand.nextFloat() - 0.5) * 0.5;
-            double d5 = ((double)rand.nextFloat() - 0.5) * 0.5;
+            double d3 = ((double)rand.nextFloat() - 0.5D) * 0.5D;
+            double d4 = ((double)rand.nextFloat() - 0.5D) * 0.5D;
+            double d5 = ((double)rand.nextFloat() - 0.5D) * 0.5D;
             int j = rand.nextInt(2) * 2 - 1;
 
-            if (worldIn.getBlockState(pos.west()).getBlock() != this
-                    && worldIn.getBlockState(pos.east()).getBlock() != this)
+            if (worldIn.getBlockState(pos.west()).getBlock() != this && worldIn.getBlockState(pos.east()).getBlock() != this)
             {
-                d0 = (double)pos.getX() + 0.5 + 0.25 * (double)j;
+                d0 = (double)pos.getX() + 0.5D + 0.25D * (double)j;
                 d3 = (double)(rand.nextFloat() * 2.0F * (float)j);
             }
             else
             {
-                d2 = (double)pos.getZ() + 0.5 + 0.25 * (double)j;
+                d2 = (double)pos.getZ() + 0.5D + 0.25D * (double)j;
                 d5 = (double)(rand.nextFloat() * 2.0F * (float)j);
             }
 
@@ -288,25 +259,21 @@
         }
     }
 
-    @Override
     public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state)
     {
         return ItemStack.EMPTY;
     }
 
-    @Override
     public IBlockState getStateFromMeta(int meta)
     {
         return this.getDefaultState().withProperty(AXIS, (meta & 3) == 2 ? EnumFacing.Axis.Z : EnumFacing.Axis.X);
     }
 
-    @Override
     public int getMetaFromState(IBlockState state)
     {
         return getMetaForAxis(state.getValue(AXIS));
     }
 
-    @Override
     public IBlockState withRotation(IBlockState state, Rotation rot)
     {
         switch (rot)
@@ -329,10 +296,9 @@
         }
     }
 
-    @Override
     protected BlockStateContainer createBlockState()
     {
-        return new BlockStateContainer(this, AXIS);
+        return new BlockStateContainer(this, new IProperty[] {AXIS});
     }
 
     public BlockPattern.PatternHelper createPatternHelper(World worldIn, BlockPos p_181089_2_)
@@ -359,27 +325,17 @@
 
             for (EnumFacing.AxisDirection enumfacing$axisdirection : EnumFacing.AxisDirection.values())
             {
-                BlockPattern.PatternHelper blockpattern$patternhelper = new BlockPattern.PatternHelper(
-                    enumfacing.getAxisDirection() == enumfacing$axisdirection
-                    ? blockpos
-                    : blockpos.offset(blockportal$size.rightDir, blockportal$size.getWidth() - 1),
-                    EnumFacing.getFacingFromAxis(enumfacing$axisdirection, enumfacing$axis),
-                    EnumFacing.UP,
-                    loadingcache,
-                    blockportal$size.getWidth(),
-                    blockportal$size.getHeight(),
-                    1
-                );
+                BlockPattern.PatternHelper blockpattern$patternhelper = new BlockPattern.PatternHelper(enumfacing.getAxisDirection() == enumfacing$axisdirection ? blockpos : blockpos.offset(blockportal$size.rightDir, blockportal$size.getWidth() - 1), EnumFacing.getFacingFromAxis(enumfacing$axisdirection, enumfacing$axis), EnumFacing.UP, loadingcache, blockportal$size.getWidth(), blockportal$size.getHeight(), 1);
 
-                for (int i = 0; i < blockportal$size.getWidth(); i++)
+                for (int i = 0; i < blockportal$size.getWidth(); ++i)
                 {
-                    for (int j = 0; j < blockportal$size.getHeight(); j++)
+                    for (int j = 0; j < blockportal$size.getHeight(); ++j)
                     {
                         BlockWorldState blockworldstate = blockpattern$patternhelper.translateOffset(i, j, 1);
 
                         if (blockworldstate.getBlockState() != null && blockworldstate.getBlockState().getMaterial() != Material.AIR)
                         {
-                            aint[enumfacing$axisdirection.ordinal()]++;
+                            ++aint[enumfacing$axisdirection.ordinal()];
                         }
                     }
                 }
@@ -395,21 +351,10 @@
                 }
             }
 
-            return new BlockPattern.PatternHelper(
-                       enumfacing.getAxisDirection() == enumfacing$axisdirection1
-                       ? blockpos
-                       : blockpos.offset(blockportal$size.rightDir, blockportal$size.getWidth() - 1),
-                       EnumFacing.getFacingFromAxis(enumfacing$axisdirection1, enumfacing$axis),
-                       EnumFacing.UP,
-                       loadingcache,
-                       blockportal$size.getWidth(),
-                       blockportal$size.getHeight(),
-                       1
-                   );
+            return new BlockPattern.PatternHelper(enumfacing.getAxisDirection() == enumfacing$axisdirection1 ? blockpos : blockpos.offset(blockportal$size.rightDir, blockportal$size.getWidth() - 1), EnumFacing.getFacingFromAxis(enumfacing$axisdirection1, enumfacing$axis), EnumFacing.UP, loadingcache, blockportal$size.getWidth(), blockportal$size.getHeight(), 1);
         }
     }
 
-    @Override
     public BlockFaceShape getBlockFaceShape(IBlockAccess worldIn, IBlockState state, BlockPos pos, EnumFacing face)
     {
         return BlockFaceShape.UNDEFINED;
@@ -442,15 +387,9 @@
                     this.rightDir = EnumFacing.SOUTH;
                 }
 
-                BlockPos blockpos = p_i45694_2_;
-
-                while (
-                    p_i45694_2_.getY() > blockpos.getY() - 21
-                    && p_i45694_2_.getY() > 0
-                    && this.isEmptyBlock(worldIn.getBlockState(p_i45694_2_.down()).getBlock())
-                )
+                for (BlockPos blockpos = p_i45694_2_; p_i45694_2_.getY() > blockpos.getY() - 21 && p_i45694_2_.getY() > 0 && this.isEmptyBlock(worldIn.getBlockState(p_i45694_2_.down()).getBlock()); p_i45694_2_ = p_i45694_2_.down())
                 {
-                    p_i45694_2_ = p_i45694_2_.down();
+                    ;
                 }
 
                 int i = this.getDistanceUntilEdge(p_i45694_2_, this.leftDir) - 1;
@@ -477,12 +416,11 @@
             {
                 int i;
 
-                for (i = 0; i < 22; i++)
+                for (i = 0; i < 22; ++i)
                 {
                     BlockPos blockpos = p_180120_1_.offset(p_180120_2_, i);
 
-                    if (!this.isEmptyBlock(this.world.getBlockState(blockpos).getBlock())
-                            || this.world.getBlockState(blockpos.down()).getBlock() != Blocks.OBSIDIAN)
+                    if (!this.isEmptyBlock(this.world.getBlockState(blockpos).getBlock()) || this.world.getBlockState(blockpos.down()).getBlock() != Blocks.OBSIDIAN)
                     {
                         break;
                     }
@@ -506,9 +444,9 @@
             {
                 label56:
 
-                for (this.height = 0; this.height < 21; this.height++)
+                for (this.height = 0; this.height < 21; ++this.height)
                 {
-                    for (int i = 0; i < this.width; i++)
+                    for (int i = 0; i < this.width; ++i)
                     {
                         BlockPos blockpos = this.bottomLeft.offset(this.rightDir, i).up(this.height);
                         Block block = this.world.getBlockState(blockpos).getBlock();
@@ -520,7 +458,7 @@
 
                         if (block == Blocks.PORTAL)
                         {
-                            this.portalBlockCount++;
+                            ++this.portalBlockCount;
                         }
 
                         if (i == 0)
@@ -544,10 +482,9 @@
                     }
                 }
 
-                for (int j = 0; j < this.width; j++)
+                for (int j = 0; j < this.width; ++j)
                 {
-                    if (this.world.getBlockState(this.bottomLeft.offset(this.rightDir, j).up(this.height)).getBlock()
-                            != Blocks.OBSIDIAN)
+                    if (this.world.getBlockState(this.bottomLeft.offset(this.rightDir, j).up(this.height)).getBlock() != Blocks.OBSIDIAN)
                     {
                         this.height = 0;
                         break;
@@ -579,16 +516,13 @@
 
             public void placePortalBlocks()
             {
-                for (int i = 0; i < this.width; i++)
+                for (int i = 0; i < this.width; ++i)
                 {
                     BlockPos blockpos = this.bottomLeft.offset(this.rightDir, i);
 
-                    for (int j = 0; j < this.height; j++)
+                    for (int j = 0; j < this.height; ++j)
                     {
-                        this.world
-                        .setBlockState(
-                            blockpos.up(j), Blocks.PORTAL.getDefaultState().withProperty(BlockPortal.AXIS, this.axis), 2
-                        );
+                        this.world.setBlockState(blockpos.up(j), Blocks.PORTAL.getDefaultState().withProperty(BlockPortal.AXIS, this.axis), 2);
                     }
                 }
             }
