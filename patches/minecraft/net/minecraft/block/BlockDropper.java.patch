--- before/net/minecraft/block/BlockDropper.java
+++ after/net/minecraft/block/BlockDropper.java
@@ -16,23 +16,20 @@
 {
     private final IBehaviorDispenseItem dropBehavior = new BehaviorDefaultDispenseItem();
 
-    @Override
     protected IBehaviorDispenseItem getBehavior(ItemStack stack)
     {
         return this.dropBehavior;
     }
 
-    @Override
     public TileEntity createNewTileEntity(World worldIn, int meta)
     {
         return new TileEntityDropper();
     }
 
-    @Override
     protected void dispense(World worldIn, BlockPos pos)
     {
         BlockSourceImpl blocksourceimpl = new BlockSourceImpl(worldIn, pos);
-        TileEntityDispenser tileentitydispenser = blocksourceimpl.getBlockTileEntity();
+        TileEntityDispenser tileentitydispenser = (TileEntityDispenser)blocksourceimpl.getBlockTileEntity();
 
         if (tileentitydispenser != null)
         {
@@ -46,13 +43,11 @@
             {
                 ItemStack itemstack = tileentitydispenser.getStackInSlot(i);
 
-                if (!itemstack.isEmpty())
+                if (!itemstack.isEmpty() && net.minecraftforge.items.VanillaInventoryCodeHooks.dropperInsertHook(worldIn, pos, tileentitydispenser, i, itemstack))
                 {
-                    EnumFacing enumfacing = worldIn.getBlockState(pos).getValue(FACING);
+                    EnumFacing enumfacing = (EnumFacing)worldIn.getBlockState(pos).getValue(FACING);
                     BlockPos blockpos = pos.offset(enumfacing);
-                    IInventory iinventory = TileEntityHopper.getInventoryAtPosition(
-                                                worldIn, (double)blockpos.getX(), (double)blockpos.getY(), (double)blockpos.getZ()
-                                            );
+                    IInventory iinventory = TileEntityHopper.getInventoryAtPosition(worldIn, (double)blockpos.getX(), (double)blockpos.getY(), (double)blockpos.getZ());
                     ItemStack itemstack1;
 
                     if (iinventory == null)
@@ -61,9 +56,7 @@
                     }
                     else
                     {
-                        itemstack1 = TileEntityHopper.putStackInInventoryAllSlots(
-                                         tileentitydispenser, iinventory, itemstack.copy().splitStack(1), enumfacing.getOpposite()
-                                     );
+                        itemstack1 = TileEntityHopper.putStackInInventoryAllSlots(tileentitydispenser, iinventory, itemstack.copy().splitStack(1), enumfacing.getOpposite());
 
                         if (itemstack1.isEmpty())
                         {
