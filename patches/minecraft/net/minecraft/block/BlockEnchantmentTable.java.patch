--- before/net/minecraft/block/BlockEnchantmentTable.java
+++ after/net/minecraft/block/BlockEnchantmentTable.java
@@ -25,7 +25,7 @@
 
 public class BlockEnchantmentTable extends BlockContainer
 {
-    protected static final AxisAlignedBB AABB = new AxisAlignedBB(0.0, 0.0, 0.0, 1.0, 0.75, 1.0);
+    protected static final AxisAlignedBB AABB = new AxisAlignedBB(0.0D, 0.0D, 0.0D, 1.0D, 0.75D, 1.0D);
 
     protected BlockEnchantmentTable()
     {
@@ -34,27 +34,24 @@
         this.setCreativeTab(CreativeTabs.DECORATIONS);
     }
 
-    @Override
     public AxisAlignedBB getBoundingBox(IBlockState state, IBlockAccess source, BlockPos pos)
     {
         return AABB;
     }
 
-    @Override
     public boolean isFullCube(IBlockState state)
     {
         return false;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public void randomDisplayTick(IBlockState stateIn, World worldIn, BlockPos pos, Random rand)
     {
         super.randomDisplayTick(stateIn, worldIn, pos, rand);
 
-        for (int i = -2; i <= 2; i++)
+        for (int i = -2; i <= 2; ++i)
         {
-            for (int j = -2; j <= 2; j++)
+            for (int j = -2; j <= 2; ++j)
             {
                 if (i > -2 && i < 2 && j == -1)
                 {
@@ -63,26 +60,18 @@
 
                 if (rand.nextInt(16) == 0)
                 {
-                    for (int k = 0; k <= 1; k++)
+                    for (int k = 0; k <= 1; ++k)
                     {
                         BlockPos blockpos = pos.add(i, k, j);
 
-                        if (worldIn.getBlockState(blockpos).getBlock() == Blocks.BOOKSHELF)
+                        if (net.minecraftforge.common.ForgeHooks.getEnchantPower(worldIn, blockpos) > 0)
                         {
                             if (!worldIn.isAirBlock(pos.add(i / 2, 0, j / 2)))
                             {
                                 break;
                             }
 
-                            worldIn.spawnParticle(
-                                EnumParticleTypes.ENCHANTMENT_TABLE,
-                                (double)pos.getX() + 0.5,
-                                (double)pos.getY() + 2.0,
-                                (double)pos.getZ() + 0.5,
-                                (double)((float)i + rand.nextFloat()) - 0.5,
-                                (double)((float)k - rand.nextFloat() - 1.0F),
-                                (double)((float)j + rand.nextFloat()) - 0.5
-                            );
+                            worldIn.spawnParticle(EnumParticleTypes.ENCHANTMENT_TABLE, (double)pos.getX() + 0.5D, (double)pos.getY() + 2.0D, (double)pos.getZ() + 0.5D, (double)((float)i + rand.nextFloat()) - 0.5D, (double)((float)k - rand.nextFloat() - 1.0F), (double)((float)j + rand.nextFloat()) - 0.5D);
                         }
                     }
                 }
@@ -90,36 +79,22 @@
         }
     }
 
-    @Override
     public boolean isOpaqueCube(IBlockState state)
     {
         return false;
     }
 
-    @Override
     public EnumBlockRenderType getRenderType(IBlockState state)
     {
         return EnumBlockRenderType.MODEL;
     }
 
-    @Override
     public TileEntity createNewTileEntity(World worldIn, int meta)
     {
         return new TileEntityEnchantmentTable();
     }
 
-    @Override
-    public boolean onBlockActivated(
-        World worldIn,
-        BlockPos pos,
-        IBlockState state,
-        EntityPlayer playerIn,
-        EnumHand hand,
-        EnumFacing facing,
-        float hitX,
-        float hitY,
-        float hitZ
-    )
+    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
     {
         if (worldIn.isRemote)
         {
@@ -138,7 +113,6 @@
         }
     }
 
-    @Override
     public void onBlockPlacedBy(World worldIn, BlockPos pos, IBlockState state, EntityLivingBase placer, ItemStack stack)
     {
         super.onBlockPlacedBy(worldIn, pos, state, placer, stack);
@@ -154,7 +128,6 @@
         }
     }
 
-    @Override
     public BlockFaceShape getBlockFaceShape(IBlockAccess worldIn, IBlockState state, BlockPos pos, EnumFacing face)
     {
         return face == EnumFacing.DOWN ? BlockFaceShape.SOLID : BlockFaceShape.UNDEFINED;
