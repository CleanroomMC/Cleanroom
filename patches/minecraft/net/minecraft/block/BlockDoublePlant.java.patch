--- before/net/minecraft/block/BlockDoublePlant.java
+++ after/net/minecraft/block/BlockDoublePlant.java
@@ -3,6 +3,7 @@
 import java.util.Random;
 import javax.annotation.Nullable;
 import net.minecraft.block.material.Material;
+import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockStateContainer;
 import net.minecraft.block.state.IBlockState;
@@ -23,28 +24,21 @@
 import net.minecraft.world.IBlockAccess;
 import net.minecraft.world.World;
 
-public class BlockDoublePlant extends BlockBush implements IGrowable
+public class BlockDoublePlant extends BlockBush implements IGrowable, net.minecraftforge.common.IShearable
 {
-    public static final PropertyEnum<BlockDoublePlant.EnumPlantType> VARIANT = PropertyEnum.create("variant", BlockDoublePlant.EnumPlantType.class);
-    public static final PropertyEnum<BlockDoublePlant.EnumBlockHalf> HALF = PropertyEnum.create("half", BlockDoublePlant.EnumBlockHalf.class);
+    public static final PropertyEnum<BlockDoublePlant.EnumPlantType> VARIANT = PropertyEnum.<BlockDoublePlant.EnumPlantType>create("variant", BlockDoublePlant.EnumPlantType.class);
+    public static final PropertyEnum<BlockDoublePlant.EnumBlockHalf> HALF = PropertyEnum.<BlockDoublePlant.EnumBlockHalf>create("half", BlockDoublePlant.EnumBlockHalf.class);
     public static final PropertyEnum<EnumFacing> FACING = BlockHorizontal.FACING;
 
     public BlockDoublePlant()
     {
         super(Material.VINE);
-        this.setDefaultState(
-            this.blockState
-            .getBaseState()
-            .withProperty(VARIANT, BlockDoublePlant.EnumPlantType.SUNFLOWER)
-            .withProperty(HALF, BlockDoublePlant.EnumBlockHalf.LOWER)
-            .withProperty(FACING, EnumFacing.NORTH)
-        );
+        this.setDefaultState(this.blockState.getBaseState().withProperty(VARIANT, BlockDoublePlant.EnumPlantType.SUNFLOWER).withProperty(HALF, BlockDoublePlant.EnumBlockHalf.LOWER).withProperty(FACING, EnumFacing.NORTH));
         this.setHardness(0.0F);
         this.setSoundType(SoundType.PLANT);
         this.setTranslationKey("doublePlant");
     }
 
-    @Override
     public AxisAlignedBB getBoundingBox(IBlockState state, IBlockAccess source, BlockPos pos)
     {
         return FULL_BLOCK_AABB;
@@ -55,7 +49,7 @@
         if (state.getBlock() == this)
         {
             state = state.getActualState(blockAccess, pos);
-            return state.getValue(VARIANT);
+            return (BlockDoublePlant.EnumPlantType)state.getValue(VARIANT);
         }
         else
         {
@@ -63,13 +57,11 @@
         }
     }
 
-    @Override
     public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
     {
         return super.canPlaceBlockAt(worldIn, pos) && worldIn.isAirBlock(pos.up());
     }
 
-    @Override
     public boolean isReplaceable(IBlockAccess worldIn, BlockPos pos)
     {
         IBlockState iblockstate = worldIn.getBlockState(pos);
@@ -80,12 +72,11 @@
         }
         else
         {
-            BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = iblockstate.getActualState(worldIn, pos).getValue(VARIANT);
+            BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = (BlockDoublePlant.EnumPlantType)iblockstate.getActualState(worldIn, pos).getValue(VARIANT);
             return blockdoubleplant$enumplanttype == BlockDoublePlant.EnumPlantType.FERN || blockdoubleplant$enumplanttype == BlockDoublePlant.EnumPlantType.GRASS;
         }
     }
 
-    @Override
     protected void checkAndDropBlock(World worldIn, BlockPos pos, IBlockState state)
     {
         if (!this.canBlockStay(worldIn, pos, state))
@@ -96,6 +87,8 @@
             Block block = (Block)(flag ? this : worldIn.getBlockState(blockpos).getBlock());
             Block block1 = (Block)(flag ? worldIn.getBlockState(blockpos1).getBlock() : this);
 
+            if (!flag) this.dropBlockAsItem(worldIn, pos, state, 0); //Forge move above the setting to air.
+
             if (block == this)
             {
                 worldIn.setBlockState(blockpos, Blocks.AIR.getDefaultState(), 2);
@@ -104,18 +97,13 @@
             if (block1 == this)
             {
                 worldIn.setBlockState(blockpos1, Blocks.AIR.getDefaultState(), 3);
-
-                if (!flag)
-                {
-                    this.dropBlockAsItem(worldIn, blockpos1, state, 0);
-                }
             }
         }
     }
 
-    @Override
     public boolean canBlockStay(World worldIn, BlockPos pos, IBlockState state)
     {
+        if (state.getBlock() != this) return super.canBlockStay(worldIn, pos, state); //Forge: This function is called during world gen and placement, before this block is set, so if we are not 'here' then assume it's the pre-check.
         if (state.getValue(HALF) == BlockDoublePlant.EnumBlockHalf.UPPER)
         {
             return worldIn.getBlockState(pos.down()).getBlock() == this;
@@ -127,7 +115,6 @@
         }
     }
 
-    @Override
     public Item getItemDropped(IBlockState state, Random rand, int fortune)
     {
         if (state.getValue(HALF) == BlockDoublePlant.EnumBlockHalf.UPPER)
@@ -136,7 +123,7 @@
         }
         else
         {
-            BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = state.getValue(VARIANT);
+            BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = (BlockDoublePlant.EnumPlantType)state.getValue(VARIANT);
 
             if (blockdoubleplant$enumplanttype == BlockDoublePlant.EnumPlantType.FERN)
             {
@@ -153,48 +140,29 @@
         }
     }
 
-    @Override
     public int damageDropped(IBlockState state)
     {
-        return state.getValue(HALF) != BlockDoublePlant.EnumBlockHalf.UPPER
-               && state.getValue(VARIANT) != BlockDoublePlant.EnumPlantType.GRASS
-               ? state.getValue(VARIANT).getMeta()
-               : 0;
+        return state.getValue(HALF) != BlockDoublePlant.EnumBlockHalf.UPPER && state.getValue(VARIANT) != BlockDoublePlant.EnumPlantType.GRASS ? ((BlockDoublePlant.EnumPlantType)state.getValue(VARIANT)).getMeta() : 0;
     }
 
     public void placeAt(World worldIn, BlockPos lowerPos, BlockDoublePlant.EnumPlantType variant, int flags)
     {
-        worldIn.setBlockState(
-            lowerPos,
-            this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.LOWER).withProperty(VARIANT, variant),
-            flags
-        );
-        worldIn.setBlockState(
-            lowerPos.up(), this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.UPPER), flags
-        );
+        worldIn.setBlockState(lowerPos, this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.LOWER).withProperty(VARIANT, variant), flags);
+        worldIn.setBlockState(lowerPos.up(), this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.UPPER), flags);
     }
 
-    @Override
     public void onBlockPlacedBy(World worldIn, BlockPos pos, IBlockState state, EntityLivingBase placer, ItemStack stack)
     {
         worldIn.setBlockState(pos.up(), this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.UPPER), 2);
     }
 
-    @Override
-    public void harvestBlock(
-        World worldIn, EntityPlayer player, BlockPos pos, IBlockState state, @Nullable TileEntity te, ItemStack stack
-    )
+    public void harvestBlock(World worldIn, EntityPlayer player, BlockPos pos, IBlockState state, @Nullable TileEntity te, ItemStack stack)
     {
-        if (worldIn.isRemote
-                || stack.getItem() != Items.SHEARS
-                || state.getValue(HALF) != BlockDoublePlant.EnumBlockHalf.LOWER
-                || !this.onHarvest(worldIn, pos, state, player))
         {
             super.harvestBlock(worldIn, player, pos, state, te, stack);
         }
     }
 
-    @Override
     public void onBlockHarvested(World worldIn, BlockPos pos, IBlockState state, EntityPlayer player)
     {
         if (state.getValue(HALF) == BlockDoublePlant.EnumBlockHalf.UPPER)
@@ -208,10 +176,9 @@
                 else
                 {
                     IBlockState iblockstate = worldIn.getBlockState(pos.down());
-                    BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = iblockstate.getValue(VARIANT);
+                    BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = (BlockDoublePlant.EnumPlantType)iblockstate.getValue(VARIANT);
 
-                    if (blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.FERN
-                            && blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.GRASS)
+                    if (blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.FERN && blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.GRASS)
                     {
                         worldIn.destroyBlock(pos.down(), true);
                     }
@@ -241,7 +208,7 @@
 
     private boolean onHarvest(World worldIn, BlockPos pos, IBlockState state, EntityPlayer player)
     {
-        BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = state.getValue(VARIANT);
+        BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = (BlockDoublePlant.EnumPlantType)state.getValue(VARIANT);
 
         if (blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.FERN && blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.GRASS)
         {
@@ -250,14 +217,10 @@
         else
         {
             player.addStat(StatList.getBlockStats(this));
-            int i = (blockdoubleplant$enumplanttype == BlockDoublePlant.EnumPlantType.GRASS ? BlockTallGrass.EnumType.GRASS : BlockTallGrass.EnumType.FERN)
-                    .getMeta();
-            spawnAsEntity(worldIn, pos, new ItemStack(Blocks.TALLGRASS, 2, i));
             return true;
         }
     }
 
-    @Override
     public void getSubBlocks(CreativeTabs itemIn, NonNullList<ItemStack> items)
     {
         for (BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype : BlockDoublePlant.EnumPlantType.values())
@@ -266,42 +229,32 @@
         }
     }
 
-    @Override
     public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state)
     {
         return new ItemStack(this, 1, this.getType(worldIn, pos, state).getMeta());
     }
 
-    @Override
     public boolean canGrow(World worldIn, BlockPos pos, IBlockState state, boolean isClient)
     {
         BlockDoublePlant.EnumPlantType blockdoubleplant$enumplanttype = this.getType(worldIn, pos, state);
         return blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.GRASS && blockdoubleplant$enumplanttype != BlockDoublePlant.EnumPlantType.FERN;
     }
 
-    @Override
     public boolean canUseBonemeal(World worldIn, Random rand, BlockPos pos, IBlockState state)
     {
         return true;
     }
 
-    @Override
     public void grow(World worldIn, Random rand, BlockPos pos, IBlockState state)
     {
         spawnAsEntity(worldIn, pos, new ItemStack(this, 1, this.getType(worldIn, pos, state).getMeta()));
     }
 
-    @Override
     public IBlockState getStateFromMeta(int meta)
     {
-        return (meta & 8) > 0
-               ? this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.UPPER)
-               : this.getDefaultState()
-               .withProperty(HALF, BlockDoublePlant.EnumBlockHalf.LOWER)
-               .withProperty(VARIANT, BlockDoublePlant.EnumPlantType.byMetadata(meta & 7));
+        return (meta & 8) > 0 ? this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.UPPER) : this.getDefaultState().withProperty(HALF, BlockDoublePlant.EnumBlockHalf.LOWER).withProperty(VARIANT, BlockDoublePlant.EnumPlantType.byMetadata(meta & 7));
     }
 
-    @Override
     public IBlockState getActualState(IBlockState state, IBlockAccess worldIn, BlockPos pos)
     {
         if (state.getValue(HALF) == BlockDoublePlant.EnumBlockHalf.UPPER)
@@ -317,38 +270,49 @@
         return state;
     }
 
-    @Override
     public int getMetaFromState(IBlockState state)
     {
-        return state.getValue(HALF) == BlockDoublePlant.EnumBlockHalf.UPPER
-               ? 8 | state.getValue(FACING).getHorizontalIndex()
-               : state.getValue(VARIANT).getMeta();
+        return state.getValue(HALF) == BlockDoublePlant.EnumBlockHalf.UPPER ? 8 | ((EnumFacing)state.getValue(FACING)).getHorizontalIndex() : ((BlockDoublePlant.EnumPlantType)state.getValue(VARIANT)).getMeta();
     }
 
-    @Override
     protected BlockStateContainer createBlockState()
     {
-        return new BlockStateContainer(this, HALF, VARIANT, FACING);
+        return new BlockStateContainer(this, new IProperty[] {HALF, VARIANT, FACING});
     }
 
-    @Override
     public Block.EnumOffsetType getOffsetType()
     {
         return Block.EnumOffsetType.XZ;
     }
 
+    @Override
+    public boolean isShearable(ItemStack item, IBlockAccess world, BlockPos pos)
+    {
+        IBlockState state = world.getBlockState(pos);
+        EnumPlantType type = (EnumPlantType)state.getValue(VARIANT);
+        return state.getValue(HALF) == EnumBlockHalf.LOWER && (type == EnumPlantType.FERN || type == EnumPlantType.GRASS);
+    }
+
+    @Override
+    public java.util.List<ItemStack> onSheared(ItemStack item, net.minecraft.world.IBlockAccess world, BlockPos pos, int fortune)
+    {
+        java.util.List<ItemStack> ret = new java.util.ArrayList<ItemStack>();
+        EnumPlantType type = (EnumPlantType)world.getBlockState(pos).getValue(VARIANT);
+        if (type == EnumPlantType.FERN) ret.add(new ItemStack(Blocks.TALLGRASS, 2, BlockTallGrass.EnumType.FERN.getMeta()));
+        if (type == EnumPlantType.GRASS) ret.add(new ItemStack(Blocks.TALLGRASS, 2, BlockTallGrass.EnumType.GRASS.getMeta()));
+        return ret;
+    }
+
     public static enum EnumBlockHalf implements IStringSerializable
     {
         UPPER,
         LOWER;
 
-        @Override
         public String toString()
         {
             return this.getName();
         }
 
-        @Override
         public String getName()
         {
             return this == UPPER ? "upper" : "lower";
@@ -386,7 +350,6 @@
             return this.meta;
         }
 
-        @Override
         public String toString()
         {
             return this.name;
@@ -402,7 +365,6 @@
             return META_LOOKUP[meta];
         }
 
-        @Override
         public String getName()
         {
             return this.name;
