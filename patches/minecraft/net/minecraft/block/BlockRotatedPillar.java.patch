--- before/net/minecraft/block/BlockRotatedPillar.java
+++ after/net/minecraft/block/BlockRotatedPillar.java
@@ -2,6 +2,7 @@
 
 import net.minecraft.block.material.MapColor;
 import net.minecraft.block.material.Material;
+import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyEnum;
 import net.minecraft.block.state.BlockStateContainer;
 import net.minecraft.block.state.IBlockState;
@@ -15,7 +16,7 @@
 
 public class BlockRotatedPillar extends Block
 {
-    public static final PropertyEnum<EnumFacing.Axis> AXIS = PropertyEnum.create("axis", EnumFacing.Axis.class);
+    public static final PropertyEnum<EnumFacing.Axis> AXIS = PropertyEnum.<EnumFacing.Axis>create("axis", EnumFacing.Axis.class);
 
     protected BlockRotatedPillar(Material materialIn)
     {
@@ -28,6 +29,20 @@
     }
 
     @Override
+    public boolean rotateBlock(net.minecraft.world.World world, BlockPos pos, EnumFacing axis)
+    {
+        net.minecraft.block.state.IBlockState state = world.getBlockState(pos);
+        for (net.minecraft.block.properties.IProperty<?> prop : state.getProperties().keySet())
+        {
+            if (prop.getName().equals("axis"))
+            {
+                world.setBlockState(pos, state.cycleProperty(prop));
+                return true;
+            }
+        }
+        return false;
+    }
+
     public IBlockState withRotation(IBlockState state, Rotation rot)
     {
         switch (rot)
@@ -50,7 +65,6 @@
         }
     }
 
-    @Override
     public IBlockState getStateFromMeta(int meta)
     {
         EnumFacing.Axis enumfacing$axis = EnumFacing.Axis.Y;
@@ -68,11 +82,10 @@
         return this.getDefaultState().withProperty(AXIS, enumfacing$axis);
     }
 
-    @Override
     public int getMetaFromState(IBlockState state)
     {
         int i = 0;
-        EnumFacing.Axis enumfacing$axis = state.getValue(AXIS);
+        EnumFacing.Axis enumfacing$axis = (EnumFacing.Axis)state.getValue(AXIS);
 
         if (enumfacing$axis == EnumFacing.Axis.X)
         {
@@ -86,31 +99,18 @@
         return i;
     }
 
-    @Override
     protected BlockStateContainer createBlockState()
     {
-        return new BlockStateContainer(this, AXIS);
+        return new BlockStateContainer(this, new IProperty[] {AXIS});
     }
 
-    @Override
     protected ItemStack getSilkTouchDrop(IBlockState state)
     {
         return new ItemStack(Item.getItemFromBlock(this));
     }
 
-    @Override
-    public IBlockState getStateForPlacement(
-        World worldIn,
-        BlockPos pos,
-        EnumFacing facing,
-        float hitX,
-        float hitY,
-        float hitZ,
-        int meta,
-        EntityLivingBase placer
-    )
+    public IBlockState getStateForPlacement(World worldIn, BlockPos pos, EnumFacing facing, float hitX, float hitY, float hitZ, int meta, EntityLivingBase placer)
     {
-        return super.getStateForPlacement(worldIn, pos, facing, hitX, hitY, hitZ, meta, placer)
-               .withProperty(AXIS, facing.getAxis());
+        return super.getStateForPlacement(worldIn, pos, facing, hitX, hitY, hitZ, meta, placer).withProperty(AXIS, facing.getAxis());
     }
 }
