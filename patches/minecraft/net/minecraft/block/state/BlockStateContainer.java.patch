--- before/net/minecraft/block/state/BlockStateContainer.java
+++ after/net/minecraft/block/state/BlockStateContainer.java
@@ -3,6 +3,7 @@
 import com.google.common.base.Function;
 import com.google.common.base.MoreObjects;
 import com.google.common.collect.HashBasedTable;
+import com.google.common.collect.ImmutableCollection;
 import com.google.common.collect.ImmutableList;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.ImmutableSortedMap;
@@ -11,6 +12,7 @@
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Table;
+import com.google.common.collect.UnmodifiableIterator;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
@@ -57,25 +59,33 @@
 
     public BlockStateContainer(Block p_i45663_1_, IProperty<?>... p_i45663_2_)
     {
-        this.field_177627_c = p_i45663_1_;
-        Map < String, IProperty<? >> map = Maps.newHashMap();
-
-        for (IProperty<?> iproperty : p_i45663_2_)
+        this(p_i45663_1_, p_i45663_2_, null);
+    }
+
+    protected StateImplementation createState(Block block, ImmutableMap<IProperty<?>, Comparable<?>> properties, @Nullable ImmutableMap<net.minecraftforge.common.property.IUnlistedProperty<?>, java.util.Optional<?>> unlistedProperties)
+    {
+        return new StateImplementation(block, properties);
+    }
+
+    protected BlockStateContainer(Block blockIn, IProperty<?>[] properties, ImmutableMap<net.minecraftforge.common.property.IUnlistedProperty<?>, java.util.Optional<?>> unlistedProperties)
+    {
+        this.field_177627_c = blockIn;
+        Map < String, IProperty<? >> map = Maps. < String, IProperty<? >> newHashMap();
+
+        for (IProperty<?> iproperty : properties)
         {
-            func_185919_a(p_i45663_1_, iproperty);
+            func_185919_a(blockIn, iproperty);
             map.put(iproperty.func_177701_a(), iproperty);
         }
 
         this.field_177624_d = ImmutableSortedMap.copyOf(map);
-        Map < Map < IProperty<?>, Comparable<? >> , BlockStateContainer.StateImplementation > map2 = Maps.newLinkedHashMap();
-        List<BlockStateContainer.StateImplementation> list1 = Lists.newArrayList();
+        Map < Map < IProperty<?>, Comparable<? >> , BlockStateContainer.StateImplementation > map2 = Maps. < Map < IProperty<?>, Comparable<? >> , BlockStateContainer.StateImplementation > newLinkedHashMap();
+        List<BlockStateContainer.StateImplementation> list1 = Lists.<BlockStateContainer.StateImplementation>newArrayList();
 
         for (List < Comparable<? >> list : Cartesian.func_179321_a(this.func_177620_e()))
         {
-            Map < IProperty<?>, Comparable<? >> map1 = MapPopulator.func_179400_b(this.field_177624_d.values(), list);
-            BlockStateContainer.StateImplementation blockstatecontainer$stateimplementation = new BlockStateContainer.StateImplementation(
-                p_i45663_1_, ImmutableMap.copyOf(map1)
-            );
+            Map < IProperty<?>, Comparable<? >> map1 = MapPopulator. < IProperty<?>, Comparable<? >> func_179400_b(this.field_177624_d.values(), list);
+            BlockStateContainer.StateImplementation blockstatecontainer$stateimplementation = createState(blockIn, ImmutableMap.copyOf(map1), unlistedProperties);
             map2.put(map1, blockstatecontainer$stateimplementation);
             list1.add(blockstatecontainer$stateimplementation);
         }
@@ -119,10 +129,13 @@
 
     private List < Iterable < Comparable<? >>> func_177620_e()
     {
-        List < Iterable < Comparable<? >>> list = Lists.newArrayList();
+        List < Iterable < Comparable<? >>> list = Lists. < Iterable < Comparable<? >>> newArrayList();
+        ImmutableCollection < IProperty<? >> immutablecollection = this.field_177624_d.values();
+        UnmodifiableIterator unmodifiableiterator = immutablecollection.iterator();
 
-        for (IProperty<?> iproperty : this.field_177624_d.values())
+        while (unmodifiableiterator.hasNext())
         {
+            IProperty<?> iproperty = (IProperty)unmodifiableiterator.next();
             list.add(((IProperty)iproperty).func_177700_c());
         }
 
@@ -131,7 +144,7 @@
 
     public IBlockState func_177621_b()
     {
-        return this.field_177625_e.get(0);
+        return (IBlockState)this.field_177625_e.get(0);
     }
 
     public Block func_177622_c()
@@ -144,19 +157,15 @@
         return this.field_177624_d.values();
     }
 
-    @Override
     public String toString()
     {
-        return MoreObjects.toStringHelper(this)
-               .add("block", Block.field_149771_c.func_177774_c(this.field_177627_c))
-               .add("properties", Iterables.transform(this.field_177624_d.values(), field_177626_b))
-               .toString();
+        return MoreObjects.toStringHelper(this).add("block", Block.field_149771_c.func_177774_c(this.field_177627_c)).add("properties", Iterables.transform(this.field_177624_d.values(), field_177626_b)).toString();
     }
 
     @Nullable
     public IProperty<?> func_185920_a(String p_185920_1_)
     {
-        return this.field_177624_d.get(p_185920_1_);
+        return (IProperty)this.field_177624_d.get(p_185920_1_);
     }
 
     public static class StateImplementation extends BlockStateBase
@@ -171,16 +180,21 @@
                 this.field_177237_b = p_i45660_2_;
             }
 
-            @Override
+            protected StateImplementation(Block blockIn, ImmutableMap<IProperty<?>, Comparable<?>> propertiesIn, ImmutableTable<IProperty<?>, Comparable<?>, IBlockState> propertyValueTable)
+            {
+                this.field_177239_a = blockIn;
+                this.field_177237_b = propertiesIn;
+                this.field_177238_c = propertyValueTable;
+            }
+
             public Collection < IProperty<? >> func_177227_a()
             {
-                return Collections.unmodifiableCollection(this.field_177237_b.keySet());
+                return Collections. < IProperty<? >> unmodifiableCollection(this.field_177237_b.keySet());
             }
 
-            @Override
             public <T extends Comparable<T>> T func_177229_b(IProperty<T> p_177229_1_)
             {
-                Comparable<?> comparable = this.field_177237_b.get(p_177229_1_);
+                Comparable<?> comparable = (Comparable)this.field_177237_b.get(p_177229_1_);
 
                 if (comparable == null)
                 {
@@ -188,14 +202,13 @@
                 }
                 else
                 {
-                    return p_177229_1_.func_177699_b().cast(comparable);
+                    return (T)(p_177229_1_.func_177699_b().cast(comparable));
                 }
             }
 
-            @Override
             public <T extends Comparable<T>, V extends T> IBlockState func_177226_a(IProperty<T> p_177226_1_, V p_177226_2_)
             {
-                Comparable<?> comparable = this.field_177237_b.get(p_177226_1_);
+                Comparable<?> comparable = (Comparable)this.field_177237_b.get(p_177226_1_);
 
                 if (comparable == null)
                 {
@@ -211,15 +224,7 @@
 
                     if (iblockstate == null)
                     {
-                        throw new IllegalArgumentException(
-                            "Cannot set property "
-                            + p_177226_1_
-                            + " to "
-                            + p_177226_2_
-                            + " on block "
-                            + Block.field_149771_c.func_177774_c(this.field_177239_a)
-                            + ", it is not an allowed value"
-                        );
+                        throw new IllegalArgumentException("Cannot set property " + p_177226_1_ + " to " + p_177226_2_ + " on block " + Block.field_149771_c.func_177774_c(this.field_177239_a) + ", it is not an allowed value");
                     }
                     else
                     {
@@ -228,25 +233,21 @@
                 }
             }
 
-            @Override
             public ImmutableMap < IProperty<?>, Comparable<? >> func_177228_b()
             {
                 return this.field_177237_b;
             }
 
-            @Override
             public Block func_177230_c()
             {
                 return this.field_177239_a;
             }
 
-            @Override
             public boolean equals(Object p_equals_1_)
             {
                 return this == p_equals_1_;
             }
 
-            @Override
             public int hashCode()
             {
                 return this.field_177237_b.hashCode();
@@ -260,11 +261,13 @@
                 }
                 else
                 {
-                    Table < IProperty<?>, Comparable<?>, IBlockState > table = HashBasedTable.create();
+                    Table < IProperty<?>, Comparable<?>, IBlockState > table = HashBasedTable. < IProperty<?>, Comparable<?>, IBlockState > create();
+                    UnmodifiableIterator unmodifiableiterator = this.field_177237_b.entrySet().iterator();
 
-                    for (Entry < IProperty<?>, Comparable<? >> entry : this.field_177237_b.entrySet())
+                    while (unmodifiableiterator.hasNext())
                     {
-                        IProperty<?> iproperty = entry.getKey();
+                        Entry < IProperty<?>, Comparable<? >> entry = (Entry)unmodifiableiterator.next();
+                        IProperty<?> iproperty = (IProperty)entry.getKey();
 
                         for (Comparable<?> comparable : iproperty.func_177700_c())
                         {
@@ -281,252 +284,300 @@
 
             private Map < IProperty<?>, Comparable<? >> func_177236_b(IProperty<?> p_177236_1_, Comparable<?> p_177236_2_)
             {
-                Map < IProperty<?>, Comparable<? >> map = Maps.newHashMap(this.field_177237_b);
+                Map < IProperty<?>, Comparable<? >> map = Maps. < IProperty<?>, Comparable<? >> newHashMap(this.field_177237_b);
                 map.put(p_177236_1_, p_177236_2_);
                 return map;
             }
 
-            @Override
             public Material func_185904_a()
             {
                 return this.field_177239_a.func_149688_o(this);
             }
 
-            @Override
             public boolean func_185913_b()
             {
                 return this.field_177239_a.func_149730_j(this);
             }
 
-            @Override
             public boolean func_189884_a(Entity p_189884_1_)
             {
                 return this.field_177239_a.func_189872_a(this, p_189884_1_);
             }
 
-            @Override
             public int func_185891_c()
             {
                 return this.field_177239_a.func_149717_k(this);
             }
 
-            @Override
             public int func_185906_d()
             {
                 return this.field_177239_a.func_149750_m(this);
             }
 
             @SideOnly(Side.CLIENT)
-            @Override
             public boolean func_185895_e()
             {
                 return this.field_177239_a.func_149751_l(this);
             }
 
-            @Override
             public boolean func_185916_f()
             {
                 return this.field_177239_a.func_149710_n(this);
             }
 
-            @Override
             public MapColor func_185909_g(IBlockAccess p_185909_1_, BlockPos p_185909_2_)
             {
                 return this.field_177239_a.func_180659_g(this, p_185909_1_, p_185909_2_);
             }
 
-            @Override
             public IBlockState func_185907_a(Rotation p_185907_1_)
             {
                 return this.field_177239_a.func_185499_a(this, p_185907_1_);
             }
 
-            @Override
             public IBlockState func_185902_a(Mirror p_185902_1_)
             {
                 return this.field_177239_a.func_185471_a(this, p_185902_1_);
             }
 
-            @Override
             public boolean func_185917_h()
             {
                 return this.field_177239_a.func_149686_d(this);
             }
 
             @SideOnly(Side.CLIENT)
-            @Override
             public boolean func_191057_i()
             {
                 return this.field_177239_a.func_190946_v(this);
             }
 
-            @Override
             public EnumBlockRenderType func_185901_i()
             {
                 return this.field_177239_a.func_149645_b(this);
             }
 
             @SideOnly(Side.CLIENT)
-            @Override
             public int func_185889_a(IBlockAccess p_185889_1_, BlockPos p_185889_2_)
             {
                 return this.field_177239_a.func_185484_c(this, p_185889_1_, p_185889_2_);
             }
 
             @SideOnly(Side.CLIENT)
-            @Override
             public float func_185892_j()
             {
                 return this.field_177239_a.func_185485_f(this);
             }
 
-            @Override
             public boolean func_185898_k()
             {
                 return this.field_177239_a.func_149637_q(this);
             }
 
-            @Override
             public boolean func_185915_l()
             {
                 return this.field_177239_a.func_149721_r(this);
             }
 
-            @Override
             public boolean func_185897_m()
             {
                 return this.field_177239_a.func_149744_f(this);
             }
 
-            @Override
             public int func_185911_a(IBlockAccess p_185911_1_, BlockPos p_185911_2_, EnumFacing p_185911_3_)
             {
                 return this.field_177239_a.func_180656_a(this, p_185911_1_, p_185911_2_, p_185911_3_);
             }
 
-            @Override
             public boolean func_185912_n()
             {
                 return this.field_177239_a.func_149740_M(this);
             }
 
-            @Override
             public int func_185888_a(World p_185888_1_, BlockPos p_185888_2_)
             {
                 return this.field_177239_a.func_180641_l(this, p_185888_1_, p_185888_2_);
             }
 
-            @Override
             public float func_185887_b(World p_185887_1_, BlockPos p_185887_2_)
             {
                 return this.field_177239_a.func_176195_g(this, p_185887_1_, p_185887_2_);
             }
 
-            @Override
             public float func_185903_a(EntityPlayer p_185903_1_, World p_185903_2_, BlockPos p_185903_3_)
             {
                 return this.field_177239_a.func_180647_a(this, p_185903_1_, p_185903_2_, p_185903_3_);
             }
 
-            @Override
             public int func_185893_b(IBlockAccess p_185893_1_, BlockPos p_185893_2_, EnumFacing p_185893_3_)
             {
                 return this.field_177239_a.func_176211_b(this, p_185893_1_, p_185893_2_, p_185893_3_);
             }
 
-            @Override
             public EnumPushReaction func_185905_o()
             {
                 return this.field_177239_a.func_149656_h(this);
             }
 
-            @Override
             public IBlockState func_185899_b(IBlockAccess p_185899_1_, BlockPos p_185899_2_)
             {
                 return this.field_177239_a.func_176221_a(this, p_185899_1_, p_185899_2_);
             }
 
             @SideOnly(Side.CLIENT)
-            @Override
             public AxisAlignedBB func_185918_c(World p_185918_1_, BlockPos p_185918_2_)
             {
                 return this.field_177239_a.func_180640_a(this, p_185918_1_, p_185918_2_);
             }
 
             @SideOnly(Side.CLIENT)
-            @Override
             public boolean func_185894_c(IBlockAccess p_185894_1_, BlockPos p_185894_2_, EnumFacing p_185894_3_)
             {
                 return this.field_177239_a.func_176225_a(this, p_185894_1_, p_185894_2_, p_185894_3_);
             }
 
-            @Override
             public boolean func_185914_p()
             {
                 return this.field_177239_a.func_149662_c(this);
             }
 
             @Nullable
-            @Override
             public AxisAlignedBB func_185890_d(IBlockAccess p_185890_1_, BlockPos p_185890_2_)
             {
                 return this.field_177239_a.func_180646_a(this, p_185890_1_, p_185890_2_);
             }
 
-            @Override
-            public void func_185908_a(
-                World p_185908_1_, BlockPos p_185908_2_, AxisAlignedBB p_185908_3_, List<AxisAlignedBB> p_185908_4_, @Nullable Entity p_185908_5_, boolean p_185908_6_
-            )
+            public void func_185908_a(World p_185908_1_, BlockPos p_185908_2_, AxisAlignedBB p_185908_3_, List<AxisAlignedBB> p_185908_4_, @Nullable Entity p_185908_5_, boolean p_185908_6_)
             {
                 this.field_177239_a.func_185477_a(this, p_185908_1_, p_185908_2_, p_185908_3_, p_185908_4_, p_185908_5_, p_185908_6_);
             }
 
-            @Override
             public AxisAlignedBB func_185900_c(IBlockAccess p_185900_1_, BlockPos p_185900_2_)
             {
                 return this.field_177239_a.func_185496_a(this, p_185900_1_, p_185900_2_);
             }
 
-            @Override
             public RayTraceResult func_185910_a(World p_185910_1_, BlockPos p_185910_2_, Vec3d p_185910_3_, Vec3d p_185910_4_)
             {
                 return this.field_177239_a.func_180636_a(this, p_185910_1_, p_185910_2_, p_185910_3_, p_185910_4_);
             }
 
-            @Override
             public boolean func_185896_q()
             {
                 return this.field_177239_a.func_185481_k(this);
             }
 
-            @Override
             public Vec3d func_191059_e(IBlockAccess p_191059_1_, BlockPos p_191059_2_)
             {
                 return this.field_177239_a.func_190949_e(this, p_191059_1_, p_191059_2_);
             }
 
-            @Override
             public boolean func_189547_a(World p_189547_1_, BlockPos p_189547_2_, int p_189547_3_, int p_189547_4_)
             {
                 return this.field_177239_a.func_189539_a(this, p_189547_1_, p_189547_2_, p_189547_3_, p_189547_4_);
             }
 
-            @Override
             public void func_189546_a(World p_189546_1_, BlockPos p_189546_2_, Block p_189546_3_, BlockPos p_189546_4_)
             {
                 this.field_177239_a.func_189540_a(this, p_189546_1_, p_189546_2_, p_189546_3_, p_189546_4_);
             }
 
-            @Override
             public boolean func_191058_s()
             {
                 return this.field_177239_a.func_176214_u(this);
             }
 
-            @Override
             public BlockFaceShape func_193401_d(IBlockAccess p_193401_1_, BlockPos p_193401_2_, EnumFacing p_193401_3_)
             {
                 return this.field_177239_a.func_193383_a(p_193401_1_, this, p_193401_2_, p_193401_3_);
             }
-        }
+
+            //Forge Start
+            @Override
+            public ImmutableTable<IProperty<?>, Comparable<?>, IBlockState> getPropertyValueTable()
+            {
+                return field_177238_c;
+            }
+
+            @Override
+            public int getLightOpacity(IBlockAccess world, BlockPos pos)
+            {
+                return this.field_177239_a.getLightOpacity(this, world, pos);
+            }
+
+            @Override
+            public int getLightValue(IBlockAccess world, BlockPos pos)
+            {
+                return this.field_177239_a.getLightValue(this, world, pos);
+            }
+
+            @Override
+            public boolean isSideSolid(IBlockAccess world, BlockPos pos, EnumFacing side)
+            {
+                return this.field_177239_a.isSideSolid(this, world, pos, side);
+            }
+
+            @Override
+            public boolean doesSideBlockChestOpening(IBlockAccess world, BlockPos pos, EnumFacing side)
+            {
+                return this.field_177239_a.doesSideBlockChestOpening(this, world, pos, side);
+            }
+
+            @Override
+            public boolean doesSideBlockRendering(IBlockAccess world, BlockPos pos, EnumFacing side)
+            {
+                return this.field_177239_a.doesSideBlockRendering(this, world, pos, side);
+            }
+        }
+
+    /**
+     * Forge added class to make building things easier.
+     * Will return an instance of BlockStateContainer appropriate for
+     * the list of properties passed in.
+     *
+     * Example usage:
+     *
+     *   protected BlockStateContainer createBlockState()
+     *   {
+     *       return (new BlockStateContainer.Builder(this)).add(FACING).add(SOME_UNLISTED).build();
+     *   }
+     *
+     */
+    public static class Builder
+    {
+        private final Block block;
+        private final List<IProperty<?>> listed = Lists.newArrayList();
+        private final List<net.minecraftforge.common.property.IUnlistedProperty<?>> unlisted = Lists.newArrayList();
+
+        public Builder(Block block)
+        {
+            this.block = block;
+        }
+
+        public Builder add(IProperty<?>... props)
+        {
+            for (IProperty<?> prop : props)
+                this.listed.add(prop);
+            return this;
+        }
+
+        public Builder add(net.minecraftforge.common.property.IUnlistedProperty<?>... props)
+        {
+            for (net.minecraftforge.common.property.IUnlistedProperty<?> prop : props)
+                this.unlisted.add(prop);
+            return this;
+        }
+
+        public BlockStateContainer build()
+        {
+            IProperty<?>[] listed = new IProperty[this.listed.size()];
+            listed = this.listed.toArray(listed);
+            if (this.unlisted.size() == 0)
+                return new BlockStateContainer(this.block, listed);
+
+            net.minecraftforge.common.property.IUnlistedProperty<?>[] unlisted = new net.minecraftforge.common.property.IUnlistedProperty[this.unlisted.size()];
+            unlisted = this.unlisted.toArray(unlisted);
+
+            return new net.minecraftforge.common.property.ExtendedBlockState(this.block, listed, unlisted);
+        }
+    }
 }
