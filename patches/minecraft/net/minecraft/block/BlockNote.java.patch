--- before/net/minecraft/block/BlockNote.java
+++ after/net/minecraft/block/BlockNote.java
@@ -21,18 +21,7 @@
 
 public class BlockNote extends BlockContainer
 {
-    private static final List<SoundEvent> INSTRUMENTS = Lists.newArrayList(
-                    SoundEvents.BLOCK_NOTE_HARP,
-                    SoundEvents.BLOCK_NOTE_BASEDRUM,
-                    SoundEvents.BLOCK_NOTE_SNARE,
-                    SoundEvents.BLOCK_NOTE_HAT,
-                    SoundEvents.BLOCK_NOTE_BASS,
-                    SoundEvents.BLOCK_NOTE_FLUTE,
-                    SoundEvents.BLOCK_NOTE_BELL,
-                    SoundEvents.BLOCK_NOTE_GUITAR,
-                    SoundEvents.BLOCK_NOTE_CHIME,
-                    SoundEvents.BLOCK_NOTE_XYLOPHONE
-                );
+    private static final List<SoundEvent> INSTRUMENTS = Lists.newArrayList(SoundEvents.BLOCK_NOTE_HARP, SoundEvents.BLOCK_NOTE_BASEDRUM, SoundEvents.BLOCK_NOTE_SNARE, SoundEvents.BLOCK_NOTE_HAT, SoundEvents.BLOCK_NOTE_BASS, SoundEvents.BLOCK_NOTE_FLUTE, SoundEvents.BLOCK_NOTE_BELL, SoundEvents.BLOCK_NOTE_GUITAR, SoundEvents.BLOCK_NOTE_CHIME, SoundEvents.BLOCK_NOTE_XYLOPHONE);
 
     public BlockNote()
     {
@@ -40,7 +29,6 @@
         this.setCreativeTab(CreativeTabs.REDSTONE);
     }
 
-    @Override
     public void neighborChanged(IBlockState state, World worldIn, BlockPos pos, Block blockIn, BlockPos fromPos)
     {
         boolean flag = worldIn.isBlockPowered(pos);
@@ -62,18 +50,7 @@
         }
     }
 
-    @Override
-    public boolean onBlockActivated(
-        World worldIn,
-        BlockPos pos,
-        IBlockState state,
-        EntityPlayer playerIn,
-        EnumHand hand,
-        EnumFacing facing,
-        float hitX,
-        float hitY,
-        float hitZ
-    )
+    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
     {
         if (worldIn.isRemote)
         {
@@ -86,7 +63,9 @@
             if (tileentity instanceof TileEntityNote)
             {
                 TileEntityNote tileentitynote = (TileEntityNote)tileentity;
+                int old = tileentitynote.note;
                 tileentitynote.changePitch();
+                if (old == tileentitynote.note) return false;
                 tileentitynote.triggerNote(worldIn, pos);
                 playerIn.addStat(StatList.NOTEBLOCK_TUNED);
             }
@@ -95,7 +74,6 @@
         }
     }
 
-    @Override
     public void onBlockClicked(World worldIn, BlockPos pos, EntityPlayer playerIn)
     {
         if (!worldIn.isRemote)
@@ -110,7 +88,6 @@
         }
     }
 
-    @Override
     public TileEntity createNewTileEntity(World worldIn, int meta)
     {
         return new TileEntityNote();
@@ -126,24 +103,18 @@
         return INSTRUMENTS.get(eventId);
     }
 
-    @Override
     public boolean eventReceived(IBlockState state, World worldIn, BlockPos pos, int id, int param)
     {
-        float f = (float)Math.pow(2.0, (double)(param - 12) / 12.0);
-        worldIn.playSound(null, pos, this.getInstrument(id), SoundCategory.RECORDS, 3.0F, f);
-        worldIn.spawnParticle(
-            EnumParticleTypes.NOTE,
-            (double)pos.getX() + 0.5,
-            (double)pos.getY() + 1.2,
-            (double)pos.getZ() + 0.5,
-            (double)param / 24.0,
-            0.0,
-            0.0
-        );
+        net.minecraftforge.event.world.NoteBlockEvent.Play e = new net.minecraftforge.event.world.NoteBlockEvent.Play(worldIn, pos, state, param, id);
+        if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(e)) return false;
+        id = e.getInstrument().ordinal();
+        param = e.getVanillaNoteId();
+        float f = (float)Math.pow(2.0D, (double)(param - 12) / 12.0D);
+        worldIn.playSound((EntityPlayer)null, pos, this.getInstrument(id), SoundCategory.RECORDS, 3.0F, f);
+        worldIn.spawnParticle(EnumParticleTypes.NOTE, (double)pos.getX() + 0.5D, (double)pos.getY() + 1.2D, (double)pos.getZ() + 0.5D, (double)param / 24.0D, 0.0D, 0.0D);
         return true;
     }
 
-    @Override
     public EnumBlockRenderType getRenderType(IBlockState state)
     {
         return EnumBlockRenderType.MODEL;
