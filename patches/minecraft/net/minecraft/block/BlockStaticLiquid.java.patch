--- before/net/minecraft/block/BlockStaticLiquid.java
+++ after/net/minecraft/block/BlockStaticLiquid.java
@@ -21,7 +21,6 @@
         }
     }
 
-    @Override
     public void neighborChanged(IBlockState state, World worldIn, BlockPos pos, Block blockIn, BlockPos fromPos)
     {
         if (!this.checkForMixing(worldIn, pos, state))
@@ -37,7 +36,6 @@
         worldIn.scheduleUpdate(pos, blockdynamicliquid, this.tickRate(worldIn));
     }
 
-    @Override
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (this.material == Material.LAVA)
@@ -50,26 +48,26 @@
                 {
                     BlockPos blockpos = pos;
 
-                    for (int j = 0; j < i; j++)
+                    for (int j = 0; j < i; ++j)
                     {
                         blockpos = blockpos.add(rand.nextInt(3) - 1, 1, rand.nextInt(3) - 1);
 
-                        if (blockpos.getY() >= 0 && blockpos.getY() < 256 && !worldIn.isBlockLoaded(blockpos))
+                        if (blockpos.getY() >= 0 && blockpos.getY() < worldIn.getHeight() && !worldIn.isBlockLoaded(blockpos))
                         {
                             return;
                         }
 
-                        Block block = worldIn.getBlockState(blockpos).getBlock();
+                        IBlockState block = worldIn.getBlockState(blockpos);
 
-                        if (block.material == Material.AIR)
+                        if (block.getBlock().isAir(block, worldIn, blockpos))
                         {
                             if (this.isSurroundingBlockFlammable(worldIn, blockpos))
                             {
-                                worldIn.setBlockState(blockpos, Blocks.FIRE.getDefaultState());
+                                worldIn.setBlockState(blockpos, net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(worldIn, blockpos, pos, Blocks.FIRE.getDefaultState()));
                                 return;
                             }
                         }
-                        else if (block.material.blocksMovement())
+                        else if (block.getMaterial().blocksMovement())
                         {
                             return;
                         }
@@ -77,7 +75,7 @@
                 }
                 else
                 {
-                    for (int k = 0; k < 3; k++)
+                    for (int k = 0; k < 3; ++k)
                     {
                         BlockPos blockpos1 = pos.add(rand.nextInt(3) - 1, 0, rand.nextInt(3) - 1);
 
@@ -88,7 +86,7 @@
 
                         if (worldIn.isAirBlock(blockpos1.up()) && this.getCanBlockBurn(worldIn, blockpos1))
                         {
-                            worldIn.setBlockState(blockpos1.up(), Blocks.FIRE.getDefaultState());
+                            worldIn.setBlockState(blockpos1.up(), net.minecraftforge.event.ForgeEventFactory.fireFluidPlaceBlockEvent(worldIn, blockpos1.up(), pos, Blocks.FIRE.getDefaultState()));
                         }
                     }
                 }
@@ -111,8 +109,6 @@
 
     private boolean getCanBlockBurn(World worldIn, BlockPos pos)
     {
-        return pos.getY() >= 0 && pos.getY() < 256 && !worldIn.isBlockLoaded(pos)
-               ? false
-               : worldIn.getBlockState(pos).getMaterial().getCanBurn();
+        return pos.getY() >= 0 && pos.getY() < 256 && !worldIn.isBlockLoaded(pos) ? false : worldIn.getBlockState(pos).getMaterial().getCanBurn();
     }
 }
