--- before/net/minecraft/block/BlockChorusFlower.java
+++ after/net/minecraft/block/BlockChorusFlower.java
@@ -4,6 +4,7 @@
 import javax.annotation.Nullable;
 import net.minecraft.block.material.MapColor;
 import net.minecraft.block.material.Material;
+import net.minecraft.block.properties.IProperty;
 import net.minecraft.block.properties.PropertyInteger;
 import net.minecraft.block.state.BlockFaceShape;
 import net.minecraft.block.state.BlockStateContainer;
@@ -30,18 +31,16 @@
     protected BlockChorusFlower()
     {
         super(Material.PLANTS, MapColor.PURPLE);
-        this.setDefaultState(this.blockState.getBaseState().withProperty(AGE, 0));
+        this.setDefaultState(this.blockState.getBaseState().withProperty(AGE, Integer.valueOf(0)));
         this.setCreativeTab(CreativeTabs.DECORATIONS);
         this.setTickRandomly(true);
     }
 
-    @Override
     public Item getItemDropped(IBlockState state, Random rand, int fortune)
     {
         return Items.AIR;
     }
 
-    @Override
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (!this.canSurvive(worldIn, pos))
@@ -54,9 +53,9 @@
 
             if (worldIn.isAirBlock(blockpos) && blockpos.getY() < 256)
             {
-                int i = state.getValue(AGE);
+                int i = ((Integer)state.getValue(AGE)).intValue();
 
-                if (i < 5 && rand.nextInt(1) == 0)
+                if (i < 5 &&  net.minecraftforge.common.ForgeHooks.onCropsGrowPre(worldIn, blockpos, state, rand.nextInt(1) == 0))
                 {
                     boolean flag = false;
                     boolean flag1 = false;
@@ -71,7 +70,7 @@
                     {
                         int j = 1;
 
-                        for (int k = 0; k < 4; k++)
+                        for (int k = 0; k < 4; ++k)
                         {
                             Block block1 = worldIn.getBlockState(pos.down(j + 1)).getBlock();
 
@@ -85,14 +84,14 @@
                                 break;
                             }
 
-                            j++;
+                            ++j;
                         }
 
                         int i1 = 4;
 
                         if (flag1)
                         {
-                            i1++;
+                            ++i1;
                         }
 
                         if (j < 2 || rand.nextInt(i1) >= j)
@@ -105,7 +104,7 @@
                         flag = true;
                     }
 
-                    if (flag && areAllNeighborsEmpty(worldIn, blockpos, null) && worldIn.isAirBlock(pos.up(2)))
+                    if (flag && areAllNeighborsEmpty(worldIn, blockpos, (EnumFacing)null) && worldIn.isAirBlock(pos.up(2)))
                     {
                         worldIn.setBlockState(pos, Blocks.CHORUS_PLANT.getDefaultState(), 2);
                         this.placeGrownFlower(worldIn, blockpos, i);
@@ -117,17 +116,15 @@
 
                         if (flag1)
                         {
-                            l++;
+                            ++l;
                         }
 
-                        for (int j1 = 0; j1 < l; j1++)
+                        for (int j1 = 0; j1 < l; ++j1)
                         {
                             EnumFacing enumfacing = EnumFacing.Plane.HORIZONTAL.random(rand);
                             BlockPos blockpos1 = pos.offset(enumfacing);
 
-                            if (worldIn.isAirBlock(blockpos1)
-                                    && worldIn.isAirBlock(blockpos1.down())
-                                    && areAllNeighborsEmpty(worldIn, blockpos1, enumfacing.getOpposite()))
+                            if (worldIn.isAirBlock(blockpos1) && worldIn.isAirBlock(blockpos1.down()) && areAllNeighborsEmpty(worldIn, blockpos1, enumfacing.getOpposite()))
                             {
                                 this.placeGrownFlower(worldIn, blockpos1, i + 1);
                                 flag2 = true;
@@ -147,6 +144,7 @@
                     {
                         this.placeDeadFlower(worldIn, pos);
                     }
+                    net.minecraftforge.common.ForgeHooks.onCropsGrowPost(worldIn, pos, state, worldIn.getBlockState(pos));
                 }
             }
         }
@@ -154,13 +152,13 @@
 
     private void placeGrownFlower(World worldIn, BlockPos pos, int age)
     {
-        worldIn.setBlockState(pos, this.getDefaultState().withProperty(AGE, age), 2);
+        worldIn.setBlockState(pos, this.getDefaultState().withProperty(AGE, Integer.valueOf(age)), 2);
         worldIn.playEvent(1033, pos, 0);
     }
 
     private void placeDeadFlower(World worldIn, BlockPos pos)
     {
-        worldIn.setBlockState(pos, this.getDefaultState().withProperty(AGE, 5), 2);
+        worldIn.setBlockState(pos, this.getDefaultState().withProperty(AGE, Integer.valueOf(5)), 2);
         worldIn.playEvent(1034, pos, 0);
     }
 
@@ -177,25 +175,21 @@
         return true;
     }
 
-    @Override
     public boolean isFullCube(IBlockState state)
     {
         return false;
     }
 
-    @Override
     public boolean isOpaqueCube(IBlockState state)
     {
         return false;
     }
 
-    @Override
     public boolean canPlaceBlockAt(World worldIn, BlockPos pos)
     {
         return super.canPlaceBlockAt(worldIn, pos) && this.canSurvive(worldIn, pos);
     }
 
-    @Override
     public void neighborChanged(IBlockState state, World worldIn, BlockPos pos, Block blockIn, BlockPos fromPos)
     {
         if (!this.canSurvive(worldIn, pos))
@@ -222,7 +216,7 @@
 
                     if (block1 == Blocks.CHORUS_PLANT)
                     {
-                        i++;
+                        ++i;
                     }
                     else if (iblockstate1.getMaterial() != Material.AIR)
                     {
@@ -243,44 +237,36 @@
         }
     }
 
-    @Override
-    public void harvestBlock(
-        World worldIn, EntityPlayer player, BlockPos pos, IBlockState state, @Nullable TileEntity te, ItemStack stack
-    )
+    public void harvestBlock(World worldIn, EntityPlayer player, BlockPos pos, IBlockState state, @Nullable TileEntity te, ItemStack stack)
     {
         super.harvestBlock(worldIn, player, pos, state, te, stack);
         spawnAsEntity(worldIn, pos, new ItemStack(Item.getItemFromBlock(this)));
     }
 
-    @Override
     protected ItemStack getSilkTouchDrop(IBlockState state)
     {
         return ItemStack.EMPTY;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public BlockRenderLayer getRenderLayer()
     {
         return BlockRenderLayer.CUTOUT;
     }
 
-    @Override
     public IBlockState getStateFromMeta(int meta)
     {
-        return this.getDefaultState().withProperty(AGE, meta);
+        return this.getDefaultState().withProperty(AGE, Integer.valueOf(meta));
     }
 
-    @Override
     public int getMetaFromState(IBlockState state)
     {
-        return state.getValue(AGE);
+        return ((Integer)state.getValue(AGE)).intValue();
     }
 
-    @Override
     protected BlockStateContainer createBlockState()
     {
-        return new BlockStateContainer(this, AGE);
+        return new BlockStateContainer(this, new IProperty[] {AGE});
     }
 
     public static void generatePlant(World worldIn, BlockPos pos, Random rand, int p_185603_3_)
@@ -295,14 +281,14 @@
 
         if (p_185601_5_ == 0)
         {
-            i++;
+            ++i;
         }
 
-        for (int j = 0; j < i; j++)
+        for (int j = 0; j < i; ++j)
         {
             BlockPos blockpos = p_185601_1_.up(j + 1);
 
-            if (!areAllNeighborsEmpty(worldIn, blockpos, null))
+            if (!areAllNeighborsEmpty(worldIn, blockpos, (EnumFacing)null))
             {
                 return;
             }
@@ -318,19 +304,15 @@
 
             if (p_185601_5_ == 0)
             {
-                l++;
+                ++l;
             }
 
-            for (int k = 0; k < l; k++)
+            for (int k = 0; k < l; ++k)
             {
                 EnumFacing enumfacing = EnumFacing.Plane.HORIZONTAL.random(rand);
                 BlockPos blockpos1 = p_185601_1_.up(i).offset(enumfacing);
 
-                if (Math.abs(blockpos1.getX() - p_185601_3_.getX()) < p_185601_4_
-                        && Math.abs(blockpos1.getZ() - p_185601_3_.getZ()) < p_185601_4_
-                        && worldIn.isAirBlock(blockpos1)
-                        && worldIn.isAirBlock(blockpos1.down())
-                        && areAllNeighborsEmpty(worldIn, blockpos1, enumfacing.getOpposite()))
+                if (Math.abs(blockpos1.getX() - p_185601_3_.getX()) < p_185601_4_ && Math.abs(blockpos1.getZ() - p_185601_3_.getZ()) < p_185601_4_ && worldIn.isAirBlock(blockpos1) && worldIn.isAirBlock(blockpos1.down()) && areAllNeighborsEmpty(worldIn, blockpos1, enumfacing.getOpposite()))
                 {
                     flag = true;
                     worldIn.setBlockState(blockpos1, Blocks.CHORUS_PLANT.getDefaultState(), 2);
@@ -341,11 +323,10 @@
 
         if (!flag)
         {
-            worldIn.setBlockState(p_185601_1_.up(i), Blocks.CHORUS_FLOWER.getDefaultState().withProperty(AGE, 5), 2);
+            worldIn.setBlockState(p_185601_1_.up(i), Blocks.CHORUS_FLOWER.getDefaultState().withProperty(AGE, Integer.valueOf(5)), 2);
         }
     }
 
-    @Override
     public BlockFaceShape getBlockFaceShape(IBlockAccess worldIn, IBlockState state, BlockPos pos, EnumFacing face)
     {
         return BlockFaceShape.UNDEFINED;
