--- before/net/minecraft/block/BlockRedstoneOre.java
+++ after/net/minecraft/block/BlockRedstoneOre.java
@@ -33,38 +33,24 @@
         this.isOn = isOn;
     }
 
-    @Override
     public int tickRate(World worldIn)
     {
         return 30;
     }
 
-    @Override
     public void onBlockClicked(World worldIn, BlockPos pos, EntityPlayer playerIn)
     {
         this.activate(worldIn, pos);
         super.onBlockClicked(worldIn, pos, playerIn);
     }
 
-    @Override
     public void onEntityWalk(World worldIn, BlockPos pos, Entity entityIn)
     {
         this.activate(worldIn, pos);
         super.onEntityWalk(worldIn, pos, entityIn);
     }
 
-    @Override
-    public boolean onBlockActivated(
-        World worldIn,
-        BlockPos pos,
-        IBlockState state,
-        EntityPlayer playerIn,
-        EnumHand hand,
-        EnumFacing facing,
-        float hitX,
-        float hitY,
-        float hitZ
-    )
+    public boolean onBlockActivated(World worldIn, BlockPos pos, IBlockState state, EntityPlayer playerIn, EnumHand hand, EnumFacing facing, float hitX, float hitY, float hitZ)
     {
         this.activate(worldIn, pos);
         return super.onBlockActivated(worldIn, pos, state, playerIn, hand, facing, hitX, hitY, hitZ);
@@ -80,7 +66,6 @@
         }
     }
 
-    @Override
     public void updateTick(World worldIn, BlockPos pos, IBlockState state, Random rand)
     {
         if (this == Blocks.LIT_REDSTONE_ORE)
@@ -89,38 +74,37 @@
         }
     }
 
-    @Override
     public Item getItemDropped(IBlockState state, Random rand, int fortune)
     {
         return Items.REDSTONE;
     }
 
-    @Override
     public int quantityDroppedWithBonus(int fortune, Random random)
     {
         return this.quantityDropped(random) + random.nextInt(fortune + 1);
     }
 
-    @Override
     public int quantityDropped(Random random)
     {
         return 4 + random.nextInt(2);
     }
 
-    @Override
     public void dropBlockAsItemWithChance(World worldIn, BlockPos pos, IBlockState state, float chance, int fortune)
     {
         super.dropBlockAsItemWithChance(worldIn, pos, state, chance, fortune);
+    }
 
-        if (this.getItemDropped(state, worldIn.rand, fortune) != Item.getItemFromBlock(this))
+    @Override
+    public int getExpDrop(IBlockState state, net.minecraft.world.IBlockAccess world, BlockPos pos, int fortune)
+    {
+        if (this.getItemDropped(state, RANDOM, fortune) != Item.getItemFromBlock(this))
         {
-            int i = 1 + worldIn.rand.nextInt(5);
-            this.dropXpOnBlockBreak(worldIn, pos, i);
+            return 1 + RANDOM.nextInt(5);
         }
+        return 0;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public void randomDisplayTick(IBlockState stateIn, World worldIn, BlockPos pos, Random rand)
     {
         if (this.isOn)
@@ -132,9 +116,9 @@
     private void spawnParticles(World worldIn, BlockPos pos)
     {
         Random random = worldIn.rand;
-        double d0 = 0.0625;
+        double d0 = 0.0625D;
 
-        for (int i = 0; i < 6; i++)
+        for (int i = 0; i < 6; ++i)
         {
             double d1 = (double)((float)pos.getX() + random.nextFloat());
             double d2 = (double)((float)pos.getY() + random.nextFloat());
@@ -142,53 +126,46 @@
 
             if (i == 0 && !worldIn.getBlockState(pos.up()).isOpaqueCube())
             {
-                d2 = (double)pos.getY() + 0.0625 + 1.0;
+                d2 = (double)pos.getY() + 0.0625D + 1.0D;
             }
 
             if (i == 1 && !worldIn.getBlockState(pos.down()).isOpaqueCube())
             {
-                d2 = (double)pos.getY() - 0.0625;
+                d2 = (double)pos.getY() - 0.0625D;
             }
 
             if (i == 2 && !worldIn.getBlockState(pos.south()).isOpaqueCube())
             {
-                d3 = (double)pos.getZ() + 0.0625 + 1.0;
+                d3 = (double)pos.getZ() + 0.0625D + 1.0D;
             }
 
             if (i == 3 && !worldIn.getBlockState(pos.north()).isOpaqueCube())
             {
-                d3 = (double)pos.getZ() - 0.0625;
+                d3 = (double)pos.getZ() - 0.0625D;
             }
 
             if (i == 4 && !worldIn.getBlockState(pos.east()).isOpaqueCube())
             {
-                d1 = (double)pos.getX() + 0.0625 + 1.0;
+                d1 = (double)pos.getX() + 0.0625D + 1.0D;
             }
 
             if (i == 5 && !worldIn.getBlockState(pos.west()).isOpaqueCube())
             {
-                d1 = (double)pos.getX() - 0.0625;
+                d1 = (double)pos.getX() - 0.0625D;
             }
 
-            if (d1 < (double)pos.getX()
-                    || d1 > (double)(pos.getX() + 1)
-                    || d2 < 0.0
-                    || d2 > (double)(pos.getY() + 1)
-                    || d3 < (double)pos.getZ()
-                    || d3 > (double)(pos.getZ() + 1))
+            if (d1 < (double)pos.getX() || d1 > (double)(pos.getX() + 1) || d2 < 0.0D || d2 > (double)(pos.getY() + 1) || d3 < (double)pos.getZ() || d3 > (double)(pos.getZ() + 1))
             {
-                worldIn.spawnParticle(EnumParticleTypes.REDSTONE, d1, d2, d3, 0.0, 0.0, 0.0);
+                worldIn.spawnParticle(EnumParticleTypes.REDSTONE, d1, d2, d3, 0.0D, 0.0D, 0.0D);
             }
         }
     }
 
-    @Override
     protected ItemStack getSilkTouchDrop(IBlockState state)
     {
         return new ItemStack(Blocks.REDSTONE_ORE);
     }
 
-    @Override
     public ItemStack getItem(World worldIn, BlockPos pos, IBlockState state)
     {
         return new ItemStack(Item.getItemFromBlock(Blocks.REDSTONE_ORE), 1, this.damageDropped(state));
