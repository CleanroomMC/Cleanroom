--- before/net/minecraft/entity/boss/dragon/phase/PhaseSittingFlaming.java
+++ after/net/minecraft/entity/boss/dragon/phase/PhaseSittingFlaming.java
@@ -20,49 +20,37 @@
         super(dragonIn);
     }
 
-    @Override
     public void doClientRenderEffects()
     {
-        this.flameTicks++;
+        ++this.flameTicks;
 
         if (this.flameTicks % 2 == 0 && this.flameTicks < 10)
         {
             Vec3d vec3d = this.dragon.getHeadLookVec(1.0F).normalize();
-            vec3d.rotateYaw((float)(-Math.PI / 4));
+            vec3d.rotateYaw((-(float)Math.PI / 4F));
             double d0 = this.dragon.dragonPartHead.posX;
             double d1 = this.dragon.dragonPartHead.posY + (double)(this.dragon.dragonPartHead.height / 2.0F);
             double d2 = this.dragon.dragonPartHead.posZ;
 
-            for (int i = 0; i < 8; i++)
+            for (int i = 0; i < 8; ++i)
             {
-                double d3 = d0 + this.dragon.getRNG().nextGaussian() / 2.0;
-                double d4 = d1 + this.dragon.getRNG().nextGaussian() / 2.0;
-                double d5 = d2 + this.dragon.getRNG().nextGaussian() / 2.0;
+                double d3 = d0 + this.dragon.getRNG().nextGaussian() / 2.0D;
+                double d4 = d1 + this.dragon.getRNG().nextGaussian() / 2.0D;
+                double d5 = d2 + this.dragon.getRNG().nextGaussian() / 2.0D;
 
-                for (int j = 0; j < 6; j++)
+                for (int j = 0; j < 6; ++j)
                 {
-                    this.dragon
-                    .world
-                    .spawnParticle(
-                        EnumParticleTypes.DRAGON_BREATH,
-                        d3,
-                        d4,
-                        d5,
-                        -vec3d.x * 0.08F * (double)j,
-                        -vec3d.y * 0.6F,
-                        -vec3d.z * 0.08F * (double)j
-                    );
+                    this.dragon.world.spawnParticle(EnumParticleTypes.DRAGON_BREATH, d3, d4, d5, -vec3d.x * (double)0.08F * (double)j, -vec3d.y * (double)0.6F, -vec3d.z * (double)0.08F * (double)j);
                 }
 
-                vec3d.rotateYaw((float)(Math.PI / 16));
+                vec3d.rotateYaw(0.19634955F);
             }
         }
     }
 
-    @Override
     public void doLocalUpdate()
     {
-        this.flameTicks++;
+        ++this.flameTicks;
 
         if (this.flameTicks >= 200)
         {
@@ -77,23 +65,17 @@
         }
         else if (this.flameTicks == 10)
         {
-            Vec3d vec3d = new Vec3d(
-                this.dragon.dragonPartHead.posX - this.dragon.posX,
-                0.0,
-                this.dragon.dragonPartHead.posZ - this.dragon.posZ
-            )
-            .normalize();
+            Vec3d vec3d = (new Vec3d(this.dragon.dragonPartHead.posX - this.dragon.posX, 0.0D, this.dragon.dragonPartHead.posZ - this.dragon.posZ)).normalize();
             float f = 5.0F;
-            double d0 = this.dragon.dragonPartHead.posX + vec3d.x * 5.0 / 2.0;
-            double d1 = this.dragon.dragonPartHead.posZ + vec3d.z * 5.0 / 2.0;
+            double d0 = this.dragon.dragonPartHead.posX + vec3d.x * 5.0D / 2.0D;
+            double d1 = this.dragon.dragonPartHead.posZ + vec3d.z * 5.0D / 2.0D;
             double d2 = this.dragon.dragonPartHead.posY + (double)(this.dragon.dragonPartHead.height / 2.0F);
-            BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(
-                MathHelper.floor(d0), MathHelper.floor(d2), MathHelper.floor(d1)
-            );
+            BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(MathHelper.floor(d0), MathHelper.floor(d2), MathHelper.floor(d1));
 
-            while (this.dragon.world.isAirBlock(blockpos$mutableblockpos))
+            while (this.dragon.world.isAirBlock(blockpos$mutableblockpos) && d2 >= 0) //Forge: Fix infinite loop if ground is missing.
             {
-                blockpos$mutableblockpos.setPos(MathHelper.floor(d0), MathHelper.floor(--d2), MathHelper.floor(d1));
+                --d2;
+                blockpos$mutableblockpos.setPos(MathHelper.floor(d0), MathHelper.floor(d2), MathHelper.floor(d1));
             }
 
             d2 = (double)(MathHelper.floor(d2) + 1);
@@ -107,14 +89,12 @@
         }
     }
 
-    @Override
     public void initPhase()
     {
         this.flameTicks = 0;
-        this.flameCount++;
+        ++this.flameCount;
     }
 
-    @Override
     public void removeAreaEffect()
     {
         if (this.areaEffectCloud != null)
@@ -124,7 +104,6 @@
         }
     }
 
-    @Override
     public PhaseList<PhaseSittingFlaming> getType()
     {
         return PhaseList.SITTING_FLAMING;
