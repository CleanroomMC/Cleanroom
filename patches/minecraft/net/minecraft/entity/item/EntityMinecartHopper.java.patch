--- before/net/minecraft/entity/item/EntityMinecartHopper.java
+++ after/net/minecraft/entity/item/EntityMinecartHopper.java
@@ -7,6 +7,7 @@
 import net.minecraft.init.Blocks;
 import net.minecraft.inventory.Container;
 import net.minecraft.inventory.ContainerHopper;
+import net.minecraft.inventory.IInventory;
 import net.minecraft.item.Item;
 import net.minecraft.nbt.NBTTagCompound;
 import net.minecraft.tileentity.IHopper;
@@ -34,33 +35,29 @@
         super(worldIn, x, y, z);
     }
 
-    @Override
     public EntityMinecart.Type getType()
     {
         return EntityMinecart.Type.HOPPER;
     }
 
-    @Override
     public IBlockState getDefaultDisplayTile()
     {
         return Blocks.HOPPER.getDefaultState();
     }
 
-    @Override
     public int getDefaultDisplayTileOffset()
     {
         return 1;
     }
 
-    @Override
     public int getSizeInventory()
     {
         return 5;
     }
 
-    @Override
     public boolean processInitialInteract(EntityPlayer player, EnumHand hand)
     {
+        if (super.processInitialInteract(player, hand)) return true;
         if (!this.world.isRemote)
         {
             player.displayGUIChest(this);
@@ -69,7 +66,6 @@
         return true;
     }
 
-    @Override
     public void onActivatorRailPass(int x, int y, int z, boolean receivingPower)
     {
         boolean flag = !receivingPower;
@@ -90,31 +86,26 @@
         this.isBlocked = p_96110_1_;
     }
 
-    @Override
     public World getWorld()
     {
         return this.world;
     }
 
-    @Override
     public double getXPos()
     {
         return this.posX;
     }
 
-    @Override
     public double getYPos()
     {
-        return this.posY + 0.5;
+        return this.posY + 0.5D;
     }
 
-    @Override
     public double getZPos()
     {
         return this.posZ;
     }
 
-    @Override
     public void onUpdate()
     {
         super.onUpdate();
@@ -125,7 +116,7 @@
 
             if (blockpos.equals(this.lastPosition))
             {
-                this.transferTicker--;
+                --this.transferTicker;
             }
             else
             {
@@ -153,19 +144,17 @@
         }
         else
         {
-            List<EntityItem> list = this.world
-                                    .getEntitiesWithinAABB(EntityItem.class, this.getEntityBoundingBox().grow(0.25, 0.0, 0.25), EntitySelectors.IS_ALIVE);
+            List<EntityItem> list = this.world.<EntityItem>getEntitiesWithinAABB(EntityItem.class, this.getEntityBoundingBox().grow(0.25D, 0.0D, 0.25D), EntitySelectors.IS_ALIVE);
 
             if (!list.isEmpty())
             {
-                TileEntityHopper.putDropInInventoryAllSlots(null, this, list.get(0));
+                TileEntityHopper.putDropInInventoryAllSlots((IInventory)null, this, list.get(0));
             }
 
             return false;
         }
     }
 
-    @Override
     public void killMinecart(DamageSource source)
     {
         super.killMinecart(source);
@@ -181,7 +170,6 @@
         EntityMinecartContainer.addDataFixers(fixer, EntityMinecartHopper.class);
     }
 
-    @Override
     protected void writeEntityToNBT(NBTTagCompound compound)
     {
         super.writeEntityToNBT(compound);
@@ -189,7 +177,6 @@
         compound.setBoolean("Enabled", this.isBlocked);
     }
 
-    @Override
     protected void readEntityFromNBT(NBTTagCompound compound)
     {
         super.readEntityFromNBT(compound);
@@ -207,13 +194,11 @@
         return this.transferTicker > 0;
     }
 
-    @Override
     public String getGuiID()
     {
         return "minecraft:hopper";
     }
 
-    @Override
     public Container createContainer(InventoryPlayer playerInventory, EntityPlayer playerIn)
     {
         return new ContainerHopper(playerInventory, this, playerIn);
