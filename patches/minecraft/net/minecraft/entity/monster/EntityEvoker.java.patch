--- before/net/minecraft/entity/monster/EntityEvoker.java
+++ after/net/minecraft/entity/monster/EntityEvoker.java
@@ -8,6 +8,7 @@
 import net.minecraft.entity.EntityLiving;
 import net.minecraft.entity.EntityLivingBase;
 import net.minecraft.entity.EnumCreatureAttribute;
+import net.minecraft.entity.IEntityLivingData;
 import net.minecraft.entity.SharedMonsterAttributes;
 import net.minecraft.entity.ai.EntityAIAvoidEntity;
 import net.minecraft.entity.ai.EntityAIHurtByTarget;
@@ -43,35 +44,32 @@
         this.experienceValue = 10;
     }
 
-    @Override
     protected void initEntityAI()
     {
         super.initEntityAI();
         this.tasks.addTask(0, new EntityAISwimming(this));
         this.tasks.addTask(1, new EntityEvoker.AICastingSpell());
-        this.tasks.addTask(2, new EntityAIAvoidEntity<>(this, EntityPlayer.class, 8.0F, 0.6, 1.0));
+        this.tasks.addTask(2, new EntityAIAvoidEntity(this, EntityPlayer.class, 8.0F, 0.6D, 1.0D));
         this.tasks.addTask(4, new EntityEvoker.AISummonSpell());
         this.tasks.addTask(5, new EntityEvoker.AIAttackSpell());
         this.tasks.addTask(6, new EntityEvoker.AIWololoSpell());
-        this.tasks.addTask(8, new EntityAIWander(this, 0.6));
+        this.tasks.addTask(8, new EntityAIWander(this, 0.6D));
         this.tasks.addTask(9, new EntityAIWatchClosest(this, EntityPlayer.class, 3.0F, 1.0F));
         this.tasks.addTask(10, new EntityAIWatchClosest(this, EntityLiving.class, 8.0F));
-        this.targetTasks.addTask(1, new EntityAIHurtByTarget(this, true, EntityEvoker.class));
-        this.targetTasks.addTask(2, new EntityAINearestAttackableTarget<>(this, EntityPlayer.class, true).setUnseenMemoryTicks(300));
-        this.targetTasks.addTask(3, new EntityAINearestAttackableTarget<>(this, EntityVillager.class, false).setUnseenMemoryTicks(300));
-        this.targetTasks.addTask(3, new EntityAINearestAttackableTarget<>(this, EntityIronGolem.class, false));
+        this.targetTasks.addTask(1, new EntityAIHurtByTarget(this, true, new Class[] {EntityEvoker.class}));
+        this.targetTasks.addTask(2, (new EntityAINearestAttackableTarget(this, EntityPlayer.class, true)).setUnseenMemoryTicks(300));
+        this.targetTasks.addTask(3, (new EntityAINearestAttackableTarget(this, EntityVillager.class, false)).setUnseenMemoryTicks(300));
+        this.targetTasks.addTask(3, new EntityAINearestAttackableTarget(this, EntityIronGolem.class, false));
     }
 
-    @Override
     protected void applyEntityAttributes()
     {
         super.applyEntityAttributes();
-        this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.5);
-        this.getEntityAttribute(SharedMonsterAttributes.FOLLOW_RANGE).setBaseValue(12.0);
-        this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(24.0);
+        this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.5D);
+        this.getEntityAttribute(SharedMonsterAttributes.FOLLOW_RANGE).setBaseValue(12.0D);
+        this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(24.0D);
     }
 
-    @Override
     protected void entityInit()
     {
         super.entityInit();
@@ -82,37 +80,31 @@
         EntityLiving.registerFixesMob(fixer, EntityEvoker.class);
     }
 
-    @Override
     public void readEntityFromNBT(NBTTagCompound compound)
     {
         super.readEntityFromNBT(compound);
     }
 
-    @Override
     public void writeEntityToNBT(NBTTagCompound compound)
     {
         super.writeEntityToNBT(compound);
     }
 
-    @Override
     protected ResourceLocation getLootTable()
     {
         return LootTableList.ENTITIES_EVOCATION_ILLAGER;
     }
 
-    @Override
     protected void updateAITasks()
     {
         super.updateAITasks();
     }
 
-    @Override
     public void onUpdate()
     {
         super.onUpdate();
     }
 
-    @Override
     public boolean isOnSameTeam(Entity entityIn)
     {
         if (entityIn == null)
@@ -131,27 +123,26 @@
         {
             return this.isOnSameTeam(((EntityVex)entityIn).getOwner());
         }
+        else if (entityIn instanceof EntityLivingBase && ((EntityLivingBase)entityIn).getCreatureAttribute() == EnumCreatureAttribute.ILLAGER)
+        {
+            return this.getTeam() == null && entityIn.getTeam() == null;
+        }
         else
         {
-            return entityIn instanceof EntityLivingBase && ((EntityLivingBase)entityIn).getCreatureAttribute() == EnumCreatureAttribute.ILLAGER
-                   ? this.getTeam() == null && entityIn.getTeam() == null
-                   : false;
+            return false;
         }
     }
 
-    @Override
     protected SoundEvent getAmbientSound()
     {
         return SoundEvents.ENTITY_EVOCATION_ILLAGER_AMBIENT;
     }
 
-    @Override
     protected SoundEvent getDeathSound()
     {
         return SoundEvents.EVOCATION_ILLAGER_DEATH;
     }
 
-    @Override
     protected SoundEvent getHurtSound(DamageSource damageSourceIn)
     {
         return SoundEvents.ENTITY_EVOCATION_ILLAGER_HURT;
@@ -168,7 +159,6 @@
         return this.wololoTarget;
     }
 
-    @Override
     protected SoundEvent getSpellSound()
     {
         return SoundEvents.EVOCATION_ILLAGER_CAST_SPELL;
@@ -180,70 +170,44 @@
         {
         }
 
-        @Override
         protected int getCastingTime()
         {
             return 40;
         }
 
-        @Override
         protected int getCastingInterval()
         {
             return 100;
         }
 
-        @Override
         protected void castSpell()
         {
             EntityLivingBase entitylivingbase = EntityEvoker.this.getAttackTarget();
             double d0 = Math.min(entitylivingbase.posY, EntityEvoker.this.posY);
-            double d1 = Math.max(entitylivingbase.posY, EntityEvoker.this.posY) + 1.0;
-            float f = (float)MathHelper.atan2(
-                          entitylivingbase.posZ - EntityEvoker.this.posZ, entitylivingbase.posX - EntityEvoker.this.posX
-                      );
+            double d1 = Math.max(entitylivingbase.posY, EntityEvoker.this.posY) + 1.0D;
+            float f = (float)MathHelper.atan2(entitylivingbase.posZ - EntityEvoker.this.posZ, entitylivingbase.posX - EntityEvoker.this.posX);
 
-            if (EntityEvoker.this.getDistanceSq(entitylivingbase) < 9.0)
+            if (EntityEvoker.this.getDistanceSq(entitylivingbase) < 9.0D)
             {
-                for (int i = 0; i < 5; i++)
+                for (int i = 0; i < 5; ++i)
                 {
-                    float f1 = f + (float)i * (float) Math.PI * 0.4F;
-                    this.spawnFangs(
-                        EntityEvoker.this.posX + (double)MathHelper.cos(f1) * 1.5,
-                        EntityEvoker.this.posZ + (double)MathHelper.sin(f1) * 1.5,
-                        d0,
-                        d1,
-                        f1,
-                        0
-                    );
+                    float f1 = f + (float)i * (float)Math.PI * 0.4F;
+                    this.spawnFangs(EntityEvoker.this.posX + (double)MathHelper.cos(f1) * 1.5D, EntityEvoker.this.posZ + (double)MathHelper.sin(f1) * 1.5D, d0, d1, f1, 0);
                 }
 
-                for (int k = 0; k < 8; k++)
+                for (int k = 0; k < 8; ++k)
                 {
-                    float f2 = f + (float)k * (float) Math.PI * 2.0F / 8.0F + (float)(Math.PI * 2.0 / 5.0);
-                    this.spawnFangs(
-                        EntityEvoker.this.posX + (double)MathHelper.cos(f2) * 2.5,
-                        EntityEvoker.this.posZ + (double)MathHelper.sin(f2) * 2.5,
-                        d0,
-                        d1,
-                        f2,
-                        3
-                    );
+                    float f2 = f + (float)k * (float)Math.PI * 2.0F / 8.0F + ((float)Math.PI * 2F / 5F);
+                    this.spawnFangs(EntityEvoker.this.posX + (double)MathHelper.cos(f2) * 2.5D, EntityEvoker.this.posZ + (double)MathHelper.sin(f2) * 2.5D, d0, d1, f2, 3);
                 }
             }
             else
             {
-                for (int l = 0; l < 16; l++)
+                for (int l = 0; l < 16; ++l)
                 {
-                    double d2 = 1.25 * (double)(l + 1);
+                    double d2 = 1.25D * (double)(l + 1);
                     int j = 1 * l;
-                    this.spawnFangs(
-                        EntityEvoker.this.posX + (double)MathHelper.cos(f) * d2,
-                        EntityEvoker.this.posZ + (double)MathHelper.sin(f) * d2,
-                        d0,
-                        d1,
-                        f,
-                        j
-                    );
+                    this.spawnFangs(EntityEvoker.this.posX + (double)MathHelper.cos(f) * d2, EntityEvoker.this.posZ + (double)MathHelper.sin(f) * d2, d0, d1, f, j);
                 }
             }
         }
@@ -252,12 +216,11 @@
         {
             BlockPos blockpos = new BlockPos(p_190876_1_, p_190876_7_, p_190876_3_);
             boolean flag = false;
-            double d0 = 0.0;
+            double d0 = 0.0D;
 
-            do
+            while (true)
             {
-                if (!EntityEvoker.this.world.isBlockNormalCube(blockpos, true) && EntityEvoker.this.world.isBlockNormalCube(blockpos.down(), true)
-                   )
+                if (!EntityEvoker.this.world.isBlockNormalCube(blockpos, true) && EntityEvoker.this.world.isBlockNormalCube(blockpos.down(), true))
                 {
                     if (!EntityEvoker.this.world.isAirBlock(blockpos))
                     {
@@ -275,25 +238,25 @@
                 }
 
                 blockpos = blockpos.down();
+
+                if (blockpos.getY() < MathHelper.floor(p_190876_5_) - 1)
+                {
+                    break;
+                }
             }
-            while (blockpos.getY() >= MathHelper.floor(p_190876_5_) - 1);
 
             if (flag)
             {
-                EntityEvokerFangs entityevokerfangs = new EntityEvokerFangs(
-                    EntityEvoker.this.world, p_190876_1_, (double)blockpos.getY() + d0, p_190876_3_, p_190876_9_, p_190876_10_, EntityEvoker.this
-                );
+                EntityEvokerFangs entityevokerfangs = new EntityEvokerFangs(EntityEvoker.this.world, p_190876_1_, (double)blockpos.getY() + d0, p_190876_3_, p_190876_9_, p_190876_10_, EntityEvoker.this);
                 EntityEvoker.this.world.spawnEntity(entityevokerfangs);
             }
         }
 
-        @Override
         protected SoundEvent getSpellPrepareSound()
         {
             return SoundEvents.EVOCATION_ILLAGER_PREPARE_ATTACK;
         }
 
-        @Override
         protected EntitySpellcasterIllager.SpellType getSpellType()
         {
             return EntitySpellcasterIllager.SpellType.FANGS;
@@ -306,18 +269,15 @@
         {
         }
 
-        @Override
         public void updateTask()
         {
             if (EntityEvoker.this.getAttackTarget() != null)
             {
-                EntityEvoker.this.getLookHelper()
-                .setLookPositionWithEntity(EntityEvoker.this.getAttackTarget(), (float)EntityEvoker.this.getHorizontalFaceSpeed(), (float)EntityEvoker.this.getVerticalFaceSpeed());
+                EntityEvoker.this.getLookHelper().setLookPositionWithEntity(EntityEvoker.this.getAttackTarget(), (float)EntityEvoker.this.getHorizontalFaceSpeed(), (float)EntityEvoker.this.getVerticalFaceSpeed());
             }
             else if (EntityEvoker.this.getWololoTarget() != null)
             {
-                EntityEvoker.this.getLookHelper()
-                .setLookPositionWithEntity(EntityEvoker.this.getWololoTarget(), (float)EntityEvoker.this.getHorizontalFaceSpeed(), (float)EntityEvoker.this.getVerticalFaceSpeed());
+                EntityEvoker.this.getLookHelper().setLookPositionWithEntity(EntityEvoker.this.getWololoTarget(), (float)EntityEvoker.this.getHorizontalFaceSpeed(), (float)EntityEvoker.this.getVerticalFaceSpeed());
             }
         }
     }
@@ -328,7 +288,6 @@
         {
         }
 
-        @Override
         public boolean shouldExecute()
         {
             if (!super.shouldExecute())
@@ -337,33 +296,29 @@
             }
             else
             {
-                int i = EntityEvoker.this.world.getEntitiesWithinAABB(EntityVex.class, EntityEvoker.this.getEntityBoundingBox().grow(16.0)).size();
+                int i = EntityEvoker.this.world.getEntitiesWithinAABB(EntityVex.class, EntityEvoker.this.getEntityBoundingBox().grow(16.0D)).size();
                 return EntityEvoker.this.rand.nextInt(8) + 1 > i;
             }
         }
 
-        @Override
         protected int getCastingTime()
         {
             return 100;
         }
 
-        @Override
         protected int getCastingInterval()
         {
             return 340;
         }
 
-        @Override
         protected void castSpell()
         {
-            for (int i = 0; i < 3; i++)
+            for (int i = 0; i < 3; ++i)
             {
-                BlockPos blockpos = new BlockPos(EntityEvoker.this)
-                .add(-2 + EntityEvoker.this.rand.nextInt(5), 1, -2 + EntityEvoker.this.rand.nextInt(5));
+                BlockPos blockpos = (new BlockPos(EntityEvoker.this)).add(-2 + EntityEvoker.this.rand.nextInt(5), 1, -2 + EntityEvoker.this.rand.nextInt(5));
                 EntityVex entityvex = new EntityVex(EntityEvoker.this.world);
                 entityvex.moveToBlockPosAndAngles(blockpos, 0.0F, 0.0F);
-                entityvex.onInitialSpawn(EntityEvoker.this.world.getDifficultyForLocation(blockpos), null);
+                entityvex.onInitialSpawn(EntityEvoker.this.world.getDifficultyForLocation(blockpos), (IEntityLivingData)null);
                 entityvex.setOwner(EntityEvoker.this);
                 entityvex.setBoundOrigin(blockpos);
                 entityvex.setLimitedLife(20 * (30 + EntityEvoker.this.rand.nextInt(90)));
@@ -371,13 +326,11 @@
             }
         }
 
-        @Override
         protected SoundEvent getSpellPrepareSound()
         {
             return SoundEvents.EVOCATION_ILLAGER_PREPARE_SUMMON;
         }
 
-        @Override
         protected EntitySpellcasterIllager.SpellType getSpellType()
         {
             return EntitySpellcasterIllager.SpellType.SUMMON_VEX;
@@ -394,7 +347,10 @@
             }
         };
 
-        @Override
+        public AIWololoSpell()
+        {
+        }
+
         public boolean shouldExecute()
         {
             if (EntityEvoker.this.getAttackTarget() != null)
@@ -409,14 +365,13 @@
             {
                 return false;
             }
-            else if (!EntityEvoker.this.world.getGameRules().getBoolean("mobGriefing"))
+            else if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(EntityEvoker.this.world, EntityEvoker.this))
             {
                 return false;
             }
             else
             {
-                List<EntitySheep> list = EntityEvoker.this.world
-                                         .getEntitiesWithinAABB(EntitySheep.class, EntityEvoker.this.getEntityBoundingBox().grow(16.0, 4.0, 16.0), this.wololoSelector);
+                List<EntitySheep> list = EntityEvoker.this.world.<EntitySheep>getEntitiesWithinAABB(EntitySheep.class, EntityEvoker.this.getEntityBoundingBox().grow(16.0D, 4.0D, 16.0D), this.wololoSelector);
 
                 if (list.isEmpty())
                 {
@@ -430,20 +385,17 @@
             }
         }
 
-        @Override
         public boolean shouldContinueExecuting()
         {
             return EntityEvoker.this.getWololoTarget() != null && this.spellWarmup > 0;
         }
 
-        @Override
         public void resetTask()
         {
             super.resetTask();
-            EntityEvoker.this.setWololoTarget(null);
+            EntityEvoker.this.setWololoTarget((EntitySheep)null);
         }
 
-        @Override
         protected void castSpell()
         {
             EntitySheep entitysheep = EntityEvoker.this.getWololoTarget();
@@ -454,31 +406,26 @@
             }
         }
 
-        @Override
         protected int getCastWarmupTime()
         {
             return 40;
         }
 
-        @Override
         protected int getCastingTime()
         {
             return 60;
         }
 
-        @Override
         protected int getCastingInterval()
         {
             return 140;
         }
 
-        @Override
         protected SoundEvent getSpellPrepareSound()
         {
             return SoundEvents.EVOCATION_ILLAGER_PREPARE_WOLOLO;
         }
 
-        @Override
         protected EntitySpellcasterIllager.SpellType getSpellType()
         {
             return EntitySpellcasterIllager.SpellType.WOLOLO;
