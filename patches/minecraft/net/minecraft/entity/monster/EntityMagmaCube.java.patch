--- before/net/minecraft/entity/monster/EntityMagmaCube.java
+++ after/net/minecraft/entity/monster/EntityMagmaCube.java
@@ -28,28 +28,22 @@
         EntityLiving.registerFixesMob(fixer, EntityMagmaCube.class);
     }
 
-    @Override
     protected void applyEntityAttributes()
     {
         super.applyEntityAttributes();
-        this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.2F);
+        this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.20000000298023224D);
     }
 
-    @Override
     public boolean getCanSpawnHere()
     {
         return this.world.getDifficulty() != EnumDifficulty.PEACEFUL;
     }
 
-    @Override
     public boolean isNotColliding()
     {
-        return this.world.checkNoEntityCollision(this.getEntityBoundingBox(), this)
-               && this.world.getCollisionBoxes(this, this.getEntityBoundingBox()).isEmpty()
-               && !this.world.containsAnyLiquid(this.getEntityBoundingBox());
+        return this.world.checkNoEntityCollision(this.getEntityBoundingBox(), this) && this.world.getCollisionBoxes(this, this.getEntityBoundingBox()).isEmpty() && !this.world.containsAnyLiquid(this.getEntityBoundingBox());
     }
 
-    @Override
     protected void setSlimeSize(int size, boolean resetHealth)
     {
         super.setSlimeSize(size, resetHealth);
@@ -57,105 +51,89 @@
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public int getBrightnessForRender()
     {
         return 15728880;
     }
 
-    @Override
     public float getBrightness()
     {
         return 1.0F;
     }
 
-    @Override
     protected EnumParticleTypes getParticleType()
     {
         return EnumParticleTypes.FLAME;
     }
 
-    @Override
     protected EntitySlime createInstance()
     {
         return new EntityMagmaCube(this.world);
     }
 
     @Nullable
-    @Override
     protected ResourceLocation getLootTable()
     {
         return this.isSmallSlime() ? LootTableList.EMPTY : LootTableList.ENTITIES_MAGMA_CUBE;
     }
 
-    @Override
     public boolean isBurning()
     {
         return false;
     }
 
-    @Override
     protected int getJumpDelay()
     {
         return super.getJumpDelay() * 4;
     }
 
-    @Override
     protected void alterSquishAmount()
     {
         this.squishAmount *= 0.9F;
     }
 
-    @Override
     protected void jump()
     {
         this.motionY = (double)(0.42F + (float)this.getSlimeSize() * 0.1F);
         this.isAirBorne = true;
+        net.minecraftforge.common.ForgeHooks.onLivingJump(this);
     }
 
-    @Override
     protected void handleJumpLava()
     {
         this.motionY = (double)(0.22F + (float)this.getSlimeSize() * 0.05F);
         this.isAirBorne = true;
     }
 
-    @Override
     public void fall(float distance, float damageMultiplier)
     {
     }
 
-    @Override
     protected boolean canDamagePlayer()
     {
         return true;
     }
 
-    @Override
     protected int getAttackStrength()
     {
         return super.getAttackStrength() + 2;
     }
 
-    @Override
     protected SoundEvent getHurtSound(DamageSource damageSourceIn)
     {
         return this.isSmallSlime() ? SoundEvents.ENTITY_SMALL_MAGMACUBE_HURT : SoundEvents.ENTITY_MAGMACUBE_HURT;
     }
 
-    @Override
     protected SoundEvent getDeathSound()
     {
         return this.isSmallSlime() ? SoundEvents.ENTITY_SMALL_MAGMACUBE_DEATH : SoundEvents.ENTITY_MAGMACUBE_DEATH;
     }
 
-    @Override
     protected SoundEvent getSquishSound()
     {
         return this.isSmallSlime() ? SoundEvents.ENTITY_SMALL_MAGMACUBE_SQUISH : SoundEvents.ENTITY_MAGMACUBE_SQUISH;
     }
 
-    @Override
     protected SoundEvent getJumpSound()
     {
         return SoundEvents.ENTITY_MAGMACUBE_JUMP;
