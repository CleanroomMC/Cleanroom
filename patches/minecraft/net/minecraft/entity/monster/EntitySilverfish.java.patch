--- before/net/minecraft/entity/monster/EntitySilverfish.java
+++ after/net/minecraft/entity/monster/EntitySilverfish.java
@@ -42,70 +42,60 @@
         EntityLiving.registerFixesMob(fixer, EntitySilverfish.class);
     }
 
-    @Override
     protected void initEntityAI()
     {
         this.summonSilverfish = new EntitySilverfish.AISummonSilverfish(this);
         this.tasks.addTask(1, new EntityAISwimming(this));
         this.tasks.addTask(3, this.summonSilverfish);
-        this.tasks.addTask(4, new EntityAIAttackMelee(this, 1.0, false));
+        this.tasks.addTask(4, new EntityAIAttackMelee(this, 1.0D, false));
         this.tasks.addTask(5, new EntitySilverfish.AIHideInStone(this));
-        this.targetTasks.addTask(1, new EntityAIHurtByTarget(this, true));
-        this.targetTasks.addTask(2, new EntityAINearestAttackableTarget<>(this, EntityPlayer.class, true));
+        this.targetTasks.addTask(1, new EntityAIHurtByTarget(this, true, new Class[0]));
+        this.targetTasks.addTask(2, new EntityAINearestAttackableTarget(this, EntityPlayer.class, true));
     }
 
-    @Override
     public double getYOffset()
     {
-        return 0.1;
+        return 0.1D;
     }
 
-    @Override
     public float getEyeHeight()
     {
         return 0.1F;
     }
 
-    @Override
     protected void applyEntityAttributes()
     {
         super.applyEntityAttributes();
-        this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(8.0);
-        this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.25);
-        this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(1.0);
+        this.getEntityAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(8.0D);
+        this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.25D);
+        this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(1.0D);
     }
 
-    @Override
     protected boolean canTriggerWalking()
     {
         return false;
     }
 
-    @Override
     protected SoundEvent getAmbientSound()
     {
         return SoundEvents.ENTITY_SILVERFISH_AMBIENT;
     }
 
-    @Override
     protected SoundEvent getHurtSound(DamageSource damageSourceIn)
     {
         return SoundEvents.ENTITY_SILVERFISH_HURT;
     }
 
-    @Override
     protected SoundEvent getDeathSound()
     {
         return SoundEvents.ENTITY_SILVERFISH_DEATH;
     }
 
-    @Override
     protected void playStepSound(BlockPos pos, Block blockIn)
     {
         this.playSound(SoundEvents.ENTITY_SILVERFISH_STEP, 0.15F, 1.0F);
     }
 
-    @Override
     public boolean attackEntityFrom(DamageSource source, float amount)
     {
         if (this.isEntityInvulnerable(source))
@@ -124,44 +114,38 @@
     }
 
     @Nullable
-    @Override
     protected ResourceLocation getLootTable()
     {
         return LootTableList.ENTITIES_SILVERFISH;
     }
 
-    @Override
     public void onUpdate()
     {
         this.renderYawOffset = this.rotationYaw;
         super.onUpdate();
     }
 
-    @Override
     public void setRenderYawOffset(float offset)
     {
         this.rotationYaw = offset;
         super.setRenderYawOffset(offset);
     }
 
-    @Override
     public float getBlockPathWeight(BlockPos pos)
     {
         return this.world.getBlockState(pos.down()).getBlock() == Blocks.STONE ? 10.0F : super.getBlockPathWeight(pos);
     }
 
-    @Override
     protected boolean isValidLightLevel()
     {
         return true;
     }
 
-    @Override
     public boolean getCanSpawnHere()
     {
         if (super.getCanSpawnHere())
         {
-            EntityPlayer entityplayer = this.world.getNearestPlayerNotCreative(this, 5.0);
+            EntityPlayer entityplayer = this.world.getNearestPlayerNotCreative(this, 5.0D);
             return entityplayer == null;
         }
         else
@@ -170,7 +154,6 @@
         }
     }
 
-    @Override
     public EnumCreatureAttribute getCreatureAttribute()
     {
         return EnumCreatureAttribute.ARTHROPOD;
@@ -183,11 +166,10 @@
 
             public AIHideInStone(EntitySilverfish silverfishIn)
             {
-                super(silverfishIn, 1.0, 10);
+                super(silverfishIn, 1.0D, 10);
                 this.setMutexBits(1);
             }
 
-            @Override
             public boolean shouldExecute()
             {
                 if (this.entity.getAttackTarget() != null)
@@ -202,11 +184,10 @@
                 {
                     Random random = this.entity.getRNG();
 
-                    if (this.entity.world.getGameRules().getBoolean("mobGriefing") && random.nextInt(10) == 0)
+                    if (net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.entity.world, this.entity) && random.nextInt(10) == 0)
                     {
                         this.facing = EnumFacing.random(random);
-                        BlockPos blockpos = new BlockPos(this.entity.posX, this.entity.posY + 0.5, this.entity.posZ)
-                        .offset(this.facing);
+                        BlockPos blockpos = (new BlockPos(this.entity.posX, this.entity.posY + 0.5D, this.entity.posZ)).offset(this.facing);
                         IBlockState iblockstate = this.entity.world.getBlockState(blockpos);
 
                         if (BlockSilverfish.canContainSilverfish(iblockstate))
@@ -221,13 +202,11 @@
                 }
             }
 
-            @Override
             public boolean shouldContinueExecuting()
             {
                 return this.doMerge ? false : super.shouldContinueExecuting();
             }
 
-            @Override
             public void startExecuting()
             {
                 if (!this.doMerge)
@@ -237,17 +216,12 @@
                 else
                 {
                     World world = this.entity.world;
-                    BlockPos blockpos = new BlockPos(this.entity.posX, this.entity.posY + 0.5, this.entity.posZ)
-                    .offset(this.facing);
+                    BlockPos blockpos = (new BlockPos(this.entity.posX, this.entity.posY + 0.5D, this.entity.posZ)).offset(this.facing);
                     IBlockState iblockstate = world.getBlockState(blockpos);
 
                     if (BlockSilverfish.canContainSilverfish(iblockstate))
                     {
-                        world.setBlockState(
-                            blockpos,
-                            Blocks.MONSTER_EGG.getDefaultState().withProperty(BlockSilverfish.VARIANT, BlockSilverfish.EnumType.forModelBlock(iblockstate)),
-                            3
-                        );
+                        world.setBlockState(blockpos, Blocks.MONSTER_EGG.getDefaultState().withProperty(BlockSilverfish.VARIANT, BlockSilverfish.EnumType.forModelBlock(iblockstate)), 3);
                         this.entity.spawnExplosionParticle();
                         this.entity.setDead();
                     }
@@ -273,16 +247,14 @@
                 }
             }
 
-            @Override
             public boolean shouldExecute()
             {
                 return this.lookForFriends > 0;
             }
 
-            @Override
             public void updateTask()
             {
-                this.lookForFriends--;
+                --this.lookForFriends;
 
                 if (this.lookForFriends <= 0)
                 {
@@ -301,13 +273,13 @@
 
                                 if (iblockstate.getBlock() == Blocks.MONSTER_EGG)
                                 {
-                                    if (world.getGameRules().getBoolean("mobGriefing"))
+                                    if (net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(world, this.silverfish))
                                     {
                                         world.destroyBlock(blockpos1, true);
                                     }
                                     else
                                     {
-                                        world.setBlockState(blockpos1, iblockstate.getValue(BlockSilverfish.VARIANT).getModelBlock(), 3);
+                                        world.setBlockState(blockpos1, ((BlockSilverfish.EnumType)iblockstate.getValue(BlockSilverfish.VARIANT)).getModelBlock(), 3);
                                     }
 
                                     if (random.nextBoolean())
