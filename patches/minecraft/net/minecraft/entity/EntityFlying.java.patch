--- before/net/minecraft/entity/EntityFlying.java
+++ after/net/minecraft/entity/EntityFlying.java
@@ -12,34 +12,31 @@
         super(worldIn);
     }
 
-    @Override
     public void fall(float distance, float damageMultiplier)
     {
     }
 
-    @Override
     protected void updateFallState(double y, boolean onGroundIn, IBlockState state, BlockPos pos)
     {
     }
 
-    @Override
     public void travel(float strafe, float vertical, float forward)
     {
         if (this.isInWater())
         {
             this.moveRelative(strafe, vertical, forward, 0.02F);
             this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
-            this.motionX *= 0.8F;
-            this.motionY *= 0.8F;
-            this.motionZ *= 0.8F;
+            this.motionX *= 0.800000011920929D;
+            this.motionY *= 0.800000011920929D;
+            this.motionZ *= 0.800000011920929D;
         }
         else if (this.isInLava())
         {
             this.moveRelative(strafe, vertical, forward, 0.02F);
             this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
-            this.motionX *= 0.5;
-            this.motionY *= 0.5;
-            this.motionZ *= 0.5;
+            this.motionX *= 0.5D;
+            this.motionY *= 0.5D;
+            this.motionZ *= 0.5D;
         }
         else
         {
@@ -47,17 +44,9 @@
 
             if (this.onGround)
             {
-                f = this.world
-                    .getBlockState(
-                        new BlockPos(
-                            MathHelper.floor(this.posX),
-                            MathHelper.floor(this.getEntityBoundingBox().minY) - 1,
-                            MathHelper.floor(this.posZ)
-                        )
-                    )
-                    .getBlock()
-                    .slipperiness
-                    * 0.91F;
+                BlockPos underPos = new BlockPos(MathHelper.floor(this.posX), MathHelper.floor(this.getEntityBoundingBox().minY) - 1, MathHelper.floor(this.posZ));
+                IBlockState underState = this.world.getBlockState(underPos);
+                f = underState.getBlock().getSlipperiness(underState, this.world, underPos, this) * 0.91F;
             }
 
             float f1 = 0.16277136F / (f * f * f);
@@ -66,17 +55,9 @@
 
             if (this.onGround)
             {
-                f = this.world
-                    .getBlockState(
-                        new BlockPos(
-                            MathHelper.floor(this.posX),
-                            MathHelper.floor(this.getEntityBoundingBox().minY) - 1,
-                            MathHelper.floor(this.posZ)
-                        )
-                    )
-                    .getBlock()
-                    .slipperiness
-                    * 0.91F;
+                BlockPos underPos = new BlockPos(MathHelper.floor(this.posX), MathHelper.floor(this.getEntityBoundingBox().minY) - 1, MathHelper.floor(this.posZ));
+                IBlockState underState = this.world.getBlockState(underPos);
+                f = underState.getBlock().getSlipperiness(underState, this.world, underPos, this) * 0.91F;
             }
 
             this.move(MoverType.SELF, this.motionX, this.motionY, this.motionZ);
@@ -95,11 +76,10 @@
             f2 = 1.0F;
         }
 
-        this.limbSwingAmount = this.limbSwingAmount + (f2 - this.limbSwingAmount) * 0.4F;
-        this.limbSwing = this.limbSwing + this.limbSwingAmount;
+        this.limbSwingAmount += (f2 - this.limbSwingAmount) * 0.4F;
+        this.limbSwing += this.limbSwingAmount;
     }
 
-    @Override
     public boolean isOnLadder()
     {
         return false;
