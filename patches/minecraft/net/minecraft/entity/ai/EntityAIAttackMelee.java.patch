--- before/net/minecraft/entity/ai/EntityAIAttackMelee.java
+++ after/net/minecraft/entity/ai/EntityAIAttackMelee.java
@@ -21,6 +21,8 @@
     private double targetY;
     private double targetZ;
     protected final int attackInterval = 20;
+    private int failedPathFindingPenalty = 0;
+    private boolean canPenalize = false;
 
     public EntityAIAttackMelee(EntityCreature creature, double speedIn, boolean useLongMemory)
     {
@@ -31,7 +33,6 @@
         this.setMutexBits(3);
     }
 
-    @Override
     public boolean shouldExecute()
     {
         EntityLivingBase entitylivingbase = this.attacker.getAttackTarget();
@@ -46,16 +47,32 @@
         }
         else
         {
+            if (canPenalize)
+            {
+                if (--this.delayCounter <= 0)
+                {
+                    this.path = this.attacker.getNavigator().getPathToEntityLiving(entitylivingbase);
+                    this.delayCounter = 4 + this.attacker.getRNG().nextInt(7);
+                    return this.path != null;
+                }
+                else
+                {
+                    return true;
+                }
+            }
             this.path = this.attacker.getNavigator().getPathToEntityLiving(entitylivingbase);
-            return this.path != null
-                   ? true
-                   : this.getAttackReachSqr(entitylivingbase)
-                   >= this.attacker
-                   .getDistanceSq(entitylivingbase.posX, entitylivingbase.getEntityBoundingBox().minY, entitylivingbase.posZ);
+
+            if (this.path != null)
+            {
+                return true;
+            }
+            else
+            {
+                return this.getAttackReachSqr(entitylivingbase) >= this.attacker.getDistanceSq(entitylivingbase.posX, entitylivingbase.getEntityBoundingBox().minY, entitylivingbase.posZ);
+            }
         }
     }
 
-    @Override
     public boolean shouldContinueExecuting()
     {
         EntityLivingBase entitylivingbase = this.attacker.getAttackTarget();
@@ -72,62 +89,70 @@
         {
             return !this.attacker.getNavigator().noPath();
         }
+        else if (!this.attacker.isWithinHomeDistanceFromPosition(new BlockPos(entitylivingbase)))
+        {
+            return false;
+        }
         else
         {
-            return !this.attacker.isWithinHomeDistanceFromPosition(new BlockPos(entitylivingbase))
-                   ? false
-                   : !(entitylivingbase instanceof EntityPlayer)
-                   || !((EntityPlayer)entitylivingbase).isSpectator() && !((EntityPlayer)entitylivingbase).isCreative();
+            return !(entitylivingbase instanceof EntityPlayer) || !((EntityPlayer)entitylivingbase).isSpectator() && !((EntityPlayer)entitylivingbase).isCreative();
         }
     }
 
-    @Override
     public void startExecuting()
     {
         this.attacker.getNavigator().setPath(this.path, this.speedTowardsTarget);
         this.delayCounter = 0;
     }
 
-    @Override
     public void resetTask()
     {
         EntityLivingBase entitylivingbase = this.attacker.getAttackTarget();
 
         if (entitylivingbase instanceof EntityPlayer && (((EntityPlayer)entitylivingbase).isSpectator() || ((EntityPlayer)entitylivingbase).isCreative()))
         {
-            this.attacker.setAttackTarget(null);
+            this.attacker.setAttackTarget((EntityLivingBase)null);
         }
 
         this.attacker.getNavigator().clearPath();
     }
 
-    @Override
     public void updateTask()
     {
         EntityLivingBase entitylivingbase = this.attacker.getAttackTarget();
         this.attacker.getLookHelper().setLookPositionWithEntity(entitylivingbase, 30.0F, 30.0F);
-        double d0 = this.attacker
-                    .getDistanceSq(entitylivingbase.posX, entitylivingbase.getEntityBoundingBox().minY, entitylivingbase.posZ);
-        this.delayCounter--;
+        double d0 = this.attacker.getDistanceSq(entitylivingbase.posX, entitylivingbase.getEntityBoundingBox().minY, entitylivingbase.posZ);
+        --this.delayCounter;
 
-        if ((this.longMemory || this.attacker.getEntitySenses().canSee(entitylivingbase))
-                && this.delayCounter <= 0
-                && (
-                    this.targetX == 0.0 && this.targetY == 0.0 && this.targetZ == 0.0
-                    || entitylivingbase.getDistanceSq(this.targetX, this.targetY, this.targetZ) >= 1.0
-                    || this.attacker.getRNG().nextFloat() < 0.05F
-                ))
+        if ((this.longMemory || this.attacker.getEntitySenses().canSee(entitylivingbase)) && this.delayCounter <= 0 && (this.targetX == 0.0D && this.targetY == 0.0D && this.targetZ == 0.0D || entitylivingbase.getDistanceSq(this.targetX, this.targetY, this.targetZ) >= 1.0D || this.attacker.getRNG().nextFloat() < 0.05F))
         {
             this.targetX = entitylivingbase.posX;
             this.targetY = entitylivingbase.getEntityBoundingBox().minY;
             this.targetZ = entitylivingbase.posZ;
             this.delayCounter = 4 + this.attacker.getRNG().nextInt(7);
 
-            if (d0 > 1024.0)
+            if (this.canPenalize)
+            {
+                this.delayCounter += failedPathFindingPenalty;
+                if (this.attacker.getNavigator().getPath() != null)
+                {
+                    net.minecraft.pathfinding.PathPoint finalPathPoint = this.attacker.getNavigator().getPath().getFinalPathPoint();
+                    if (finalPathPoint != null && entitylivingbase.getDistanceSq(finalPathPoint.x, finalPathPoint.y, finalPathPoint.z) < 1)
+                        failedPathFindingPenalty = 0;
+                    else
+                        failedPathFindingPenalty += 10;
+                }
+                else
+                {
+                    failedPathFindingPenalty += 10;
+                }
+            }
+
+            if (d0 > 1024.0D)
             {
                 this.delayCounter += 10;
             }
-            else if (d0 > 256.0)
+            else if (d0 > 256.0D)
             {
                 this.delayCounter += 5;
             }
