--- before/net/minecraft/entity/ai/EntityAIVillagerMate.java
+++ after/net/minecraft/entity/ai/EntityAIVillagerMate.java
@@ -21,7 +21,6 @@
         this.setMutexBits(3);
     }
 
-    @Override
     public boolean shouldExecute()
     {
         if (this.villager.getGrowingAge() != 0)
@@ -42,8 +41,7 @@
             }
             else if (this.checkSufficientDoorsPresentForNewVillager() && this.villager.getIsWillingToMate(true))
             {
-                Entity entity = this.world
-                                .findNearestEntityWithinAABB(EntityVillager.class, this.villager.getEntityBoundingBox().grow(8.0, 3.0, 8.0), this.villager);
+                Entity entity = this.world.findNearestEntityWithinAABB(EntityVillager.class, this.villager.getEntityBoundingBox().grow(8.0D, 3.0D, 8.0D), this.villager);
 
                 if (entity == null)
                 {
@@ -62,14 +60,12 @@
         }
     }
 
-    @Override
     public void startExecuting()
     {
         this.matingTimeout = 300;
         this.villager.setMating(true);
     }
 
-    @Override
     public void resetTask()
     {
         this.village = null;
@@ -77,21 +73,19 @@
         this.villager.setMating(false);
     }
 
-    @Override
     public boolean shouldContinueExecuting()
     {
         return this.matingTimeout >= 0 && this.checkSufficientDoorsPresentForNewVillager() && this.villager.getGrowingAge() == 0 && this.villager.getIsWillingToMate(false);
     }
 
-    @Override
     public void updateTask()
     {
-        this.matingTimeout--;
+        --this.matingTimeout;
         this.villager.getLookHelper().setLookPositionWithEntity(this.mate, 10.0F, 30.0F);
 
-        if (this.villager.getDistanceSq(this.mate) > 2.25)
+        if (this.villager.getDistanceSq(this.mate) > 2.25D)
         {
-            this.villager.getNavigator().tryMoveToEntityLiving(this.mate, 0.25);
+            this.villager.getNavigator().tryMoveToEntityLiving(this.mate, 0.25D);
         }
         else if (this.matingTimeout == 0 && this.mate.isMating())
         {
@@ -112,18 +106,22 @@
         }
         else
         {
-            int i = (int)((double)((float)this.village.getNumVillageDoors()) * 0.35);
+            int i = (int)((double)((float)this.village.getNumVillageDoors()) * 0.35D);
             return this.village.getNumVillagers() < i;
         }
     }
 
     private void giveBirth()
     {
-        EntityVillager entityvillager = this.villager.createChild(this.mate);
+        net.minecraft.entity.EntityAgeable entityvillager = this.villager.createChild(this.mate);
         this.mate.setGrowingAge(6000);
         this.villager.setGrowingAge(6000);
         this.mate.setIsWillingToMate(false);
         this.villager.setIsWillingToMate(false);
+
+        final net.minecraftforge.event.entity.living.BabyEntitySpawnEvent event = new net.minecraftforge.event.entity.living.BabyEntitySpawnEvent(villager, mate, entityvillager);
+        if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(event) || event.getChild() == null) { return; }
+        entityvillager = event.getChild();
         entityvillager.setGrowingAge(-24000);
         entityvillager.setLocationAndAngles(this.villager.posX, this.villager.posY, this.villager.posZ, 0.0F, 0.0F);
         this.world.spawnEntity(entityvillager);
