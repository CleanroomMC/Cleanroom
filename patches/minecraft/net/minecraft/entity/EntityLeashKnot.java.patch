--- before/net/minecraft/entity/EntityLeashKnot.java
+++ after/net/minecraft/entity/EntityLeashKnot.java
@@ -25,94 +25,70 @@
     public EntityLeashKnot(World worldIn, BlockPos hangingPositionIn)
     {
         super(worldIn, hangingPositionIn);
-        this.setPosition((double)hangingPositionIn.getX() + 0.5, (double)hangingPositionIn.getY() + 0.5, (double)hangingPositionIn.getZ() + 0.5);
+        this.setPosition((double)hangingPositionIn.getX() + 0.5D, (double)hangingPositionIn.getY() + 0.5D, (double)hangingPositionIn.getZ() + 0.5D);
         float f = 0.125F;
         float f1 = 0.1875F;
         float f2 = 0.25F;
-        this.setEntityBoundingBox(
-            new AxisAlignedBB(
-                this.posX - 0.1875,
-                this.posY - 0.25 + 0.125,
-                this.posZ - 0.1875,
-                this.posX + 0.1875,
-                this.posY + 0.25 + 0.125,
-                this.posZ + 0.1875
-            )
-        );
+        this.setEntityBoundingBox(new AxisAlignedBB(this.posX - 0.1875D, this.posY - 0.25D + 0.125D, this.posZ - 0.1875D, this.posX + 0.1875D, this.posY + 0.25D + 0.125D, this.posZ + 0.1875D));
         this.forceSpawn = true;
     }
 
-    @Override
     public void setPosition(double x, double y, double z)
     {
-        super.setPosition(
-            (double)MathHelper.floor(x) + 0.5,
-            (double)MathHelper.floor(y) + 0.5,
-            (double)MathHelper.floor(z) + 0.5
-        );
+        super.setPosition((double)MathHelper.floor(x) + 0.5D, (double)MathHelper.floor(y) + 0.5D, (double)MathHelper.floor(z) + 0.5D);
     }
 
-    @Override
     protected void updateBoundingBox()
     {
-        this.posX = (double)this.hangingPosition.getX() + 0.5;
-        this.posY = (double)this.hangingPosition.getY() + 0.5;
-        this.posZ = (double)this.hangingPosition.getZ() + 0.5;
+        this.posX = (double)this.hangingPosition.getX() + 0.5D;
+        this.posY = (double)this.hangingPosition.getY() + 0.5D;
+        this.posZ = (double)this.hangingPosition.getZ() + 0.5D;
+        if (this.isAddedToWorld() && !this.world.isRemote) this.world.updateEntityWithOptionalForce(this, false); // Forge - Process chunk registration after moving.
     }
 
-    @Override
     public void updateFacingWithBoundingBox(EnumFacing facingDirectionIn)
     {
     }
 
-    @Override
     public int getWidthPixels()
     {
         return 9;
     }
 
-    @Override
     public int getHeightPixels()
     {
         return 9;
     }
 
-    @Override
     public float getEyeHeight()
     {
         return -0.0625F;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public boolean isInRangeToRenderDist(double distance)
     {
-        return distance < 1024.0;
+        return distance < 1024.0D;
     }
 
-    @Override
     public void onBroken(@Nullable Entity brokenEntity)
     {
         this.playSound(SoundEvents.ENTITY_LEASHKNOT_BREAK, 1.0F, 1.0F);
     }
 
-    @Override
     public boolean writeToNBTOptional(NBTTagCompound compound)
     {
         return false;
     }
 
-    @Override
     public void writeEntityToNBT(NBTTagCompound compound)
     {
     }
 
-    @Override
     public void readEntityFromNBT(NBTTagCompound compound)
     {
     }
 
-    @Override
     public boolean processInitialInteract(EntityPlayer player, EnumHand hand)
     {
         if (this.world.isRemote)
@@ -122,19 +98,8 @@
         else
         {
             boolean flag = false;
-            double d0 = 7.0;
-            List<EntityLiving> list = this.world
-                                      .getEntitiesWithinAABB(
-                                          EntityLiving.class,
-                                          new AxisAlignedBB(
-                                              this.posX - 7.0,
-                                              this.posY - 7.0,
-                                              this.posZ - 7.0,
-                                              this.posX + 7.0,
-                                              this.posY + 7.0,
-                                              this.posZ + 7.0
-                                          )
-                                      );
+            double d0 = 7.0D;
+            List<EntityLiving> list = this.world.<EntityLiving>getEntitiesWithinAABB(EntityLiving.class, new AxisAlignedBB(this.posX - 7.0D, this.posY - 7.0D, this.posZ - 7.0D, this.posX + 7.0D, this.posY + 7.0D, this.posZ + 7.0D));
 
             for (EntityLiving entityliving : list)
             {
@@ -165,7 +130,6 @@
         }
     }
 
-    @Override
     public boolean onValidSurface()
     {
         return this.world.getBlockState(this.hangingPosition).getBlock() instanceof BlockFence;
@@ -186,9 +150,7 @@
         int j = pos.getY();
         int k = pos.getZ();
 
-        for (EntityLeashKnot entityleashknot : worldIn.getEntitiesWithinAABB(
-                    EntityLeashKnot.class, new AxisAlignedBB((double)i - 1.0, (double)j - 1.0, (double)k - 1.0, (double)i + 1.0, (double)j + 1.0, (double)k + 1.0)
-                ))
+        for (EntityLeashKnot entityleashknot : worldIn.getEntitiesWithinAABB(EntityLeashKnot.class, new AxisAlignedBB((double)i - 1.0D, (double)j - 1.0D, (double)k - 1.0D, (double)i + 1.0D, (double)j + 1.0D, (double)k + 1.0D)))
         {
             if (entityleashknot.getHangingPosition().equals(pos))
             {
@@ -199,7 +161,6 @@
         return null;
     }
 
-    @Override
     public void playPlaceSound()
     {
         this.playSound(SoundEvents.ENTITY_LEASHKNOT_PLACE, 1.0F, 1.0F);
