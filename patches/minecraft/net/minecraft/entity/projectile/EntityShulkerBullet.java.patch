--- before/net/minecraft/entity/projectile/EntityShulkerBullet.java
+++ after/net/minecraft/entity/projectile/EntityShulkerBullet.java
@@ -50,16 +50,13 @@
         this.noClip = true;
     }
 
-    @Override
     public SoundCategory getSoundCategory()
     {
         return SoundCategory.HOSTILE;
     }
 
     @SideOnly(Side.CLIENT)
-    public EntityShulkerBullet(
-        World worldIn, double x, double y, double z, double motionXIn, double motionYIn, double motionZIn
-    )
+    public EntityShulkerBullet(World worldIn, double x, double y, double z, double motionXIn, double motionYIn, double motionZIn)
     {
         this(worldIn);
         this.setLocationAndAngles(x, y, z, this.rotationYaw, this.rotationPitch);
@@ -73,16 +70,15 @@
         this(worldIn);
         this.owner = ownerIn;
         BlockPos blockpos = new BlockPos(ownerIn);
-        double d0 = (double)blockpos.getX() + 0.5;
-        double d1 = (double)blockpos.getY() + 0.5;
-        double d2 = (double)blockpos.getZ() + 0.5;
+        double d0 = (double)blockpos.getX() + 0.5D;
+        double d1 = (double)blockpos.getY() + 0.5D;
+        double d2 = (double)blockpos.getZ() + 0.5D;
         this.setLocationAndAngles(d0, d1, d2, this.rotationYaw, this.rotationPitch);
         this.target = targetIn;
         this.direction = EnumFacing.UP;
         this.selectNextMoveDirection(p_i46772_4_);
     }
 
-    @Override
     protected void writeEntityToNBT(NBTTagCompound compound)
     {
         if (this.owner != null)
@@ -116,7 +112,6 @@
         compound.setDouble("TZD", this.targetDeltaZ);
     }
 
-    @Override
     protected void readEntityFromNBT(NBTTagCompound compound)
     {
         this.steps = compound.getInteger("Steps");
@@ -144,7 +139,6 @@
         }
     }
 
-    @Override
     protected void entityInit()
     {
     }
@@ -156,28 +150,28 @@
 
     private void selectNextMoveDirection(@Nullable EnumFacing.Axis p_184569_1_)
     {
-        double d0 = 0.5;
+        double d0 = 0.5D;
         BlockPos blockpos;
 
         if (this.target == null)
         {
-            blockpos = new BlockPos(this).down();
+            blockpos = (new BlockPos(this)).down();
         }
         else
         {
-            d0 = (double)this.target.height * 0.5;
+            d0 = (double)this.target.height * 0.5D;
             blockpos = new BlockPos(this.target.posX, this.target.posY + d0, this.target.posZ);
         }
 
-        double d1 = (double)blockpos.getX() + 0.5;
+        double d1 = (double)blockpos.getX() + 0.5D;
         double d2 = (double)blockpos.getY() + d0;
-        double d3 = (double)blockpos.getZ() + 0.5;
+        double d3 = (double)blockpos.getZ() + 0.5D;
         EnumFacing enumfacing = null;
 
-        if (blockpos.distanceSqToCenter(this.posX, this.posY, this.posZ) >= 4.0)
+        if (blockpos.distanceSqToCenter(this.posX, this.posY, this.posZ) >= 4.0D)
         {
             BlockPos blockpos1 = new BlockPos(this);
-            List<EnumFacing> list = Lists.newArrayList();
+            List<EnumFacing> list = Lists.<EnumFacing>newArrayList();
 
             if (p_184569_1_ != EnumFacing.Axis.X)
             {
@@ -219,7 +213,7 @@
 
             if (list.isEmpty())
             {
-                for (int i = 5; !this.world.isAirBlock(blockpos1.offset(enumfacing)) && i > 0; i--)
+                for (int i = 5; !this.world.isAirBlock(blockpos1.offset(enumfacing)) && i > 0; --i)
                 {
                     enumfacing = EnumFacing.random(this.rand);
                 }
@@ -240,24 +234,23 @@
         double d4 = d3 - this.posZ;
         double d5 = (double)MathHelper.sqrt(d6 * d6 + d7 * d7 + d4 * d4);
 
-        if (d5 == 0.0)
+        if (d5 == 0.0D)
         {
-            this.targetDeltaX = 0.0;
-            this.targetDeltaY = 0.0;
-            this.targetDeltaZ = 0.0;
+            this.targetDeltaX = 0.0D;
+            this.targetDeltaY = 0.0D;
+            this.targetDeltaZ = 0.0D;
         }
         else
         {
-            this.targetDeltaX = d6 / d5 * 0.15;
-            this.targetDeltaY = d7 / d5 * 0.15;
-            this.targetDeltaZ = d4 / d5 * 0.15;
+            this.targetDeltaX = d6 / d5 * 0.15D;
+            this.targetDeltaY = d7 / d5 * 0.15D;
+            this.targetDeltaZ = d4 / d5 * 0.15D;
         }
 
         this.isAirBorne = true;
         this.steps = 10 + this.rand.nextInt(5) * 10;
     }
 
-    @Override
     public void onUpdate()
     {
         if (!this.world.isRemote && this.world.getDifficulty() == EnumDifficulty.PEACEFUL)
@@ -272,10 +265,7 @@
             {
                 if (this.target == null && this.targetUniqueId != null)
                 {
-                    for (EntityLivingBase entitylivingbase : this.world
-                            .getEntitiesWithinAABB(
-                                EntityLivingBase.class, new AxisAlignedBB(this.targetBlockPos.add(-2, -2, -2), this.targetBlockPos.add(2, 2, 2))
-                            ))
+                    for (EntityLivingBase entitylivingbase : this.world.getEntitiesWithinAABB(EntityLivingBase.class, new AxisAlignedBB(this.targetBlockPos.add(-2, -2, -2), this.targetBlockPos.add(2, 2, 2))))
                     {
                         if (entitylivingbase.getUniqueID().equals(this.targetUniqueId))
                         {
@@ -289,10 +279,7 @@
 
                 if (this.owner == null && this.ownerUniqueId != null)
                 {
-                    for (EntityLivingBase entitylivingbase1 : this.world
-                            .getEntitiesWithinAABB(
-                                EntityLivingBase.class, new AxisAlignedBB(this.ownerBlockPos.add(-2, -2, -2), this.ownerBlockPos.add(2, 2, 2))
-                            ))
+                    for (EntityLivingBase entitylivingbase1 : this.world.getEntitiesWithinAABB(EntityLivingBase.class, new AxisAlignedBB(this.ownerBlockPos.add(-2, -2, -2), this.ownerBlockPos.add(2, 2, 2))))
                     {
                         if (entitylivingbase1.getUniqueID().equals(this.ownerUniqueId))
                         {
@@ -304,28 +291,26 @@
                     this.ownerUniqueId = null;
                 }
 
-                if (this.target == null
-                        || !this.target.isEntityAlive()
-                        || this.target instanceof EntityPlayer && ((EntityPlayer)this.target).isSpectator())
+                if (this.target == null || !this.target.isEntityAlive() || this.target instanceof EntityPlayer && ((EntityPlayer)this.target).isSpectator())
                 {
                     if (!this.hasNoGravity())
                     {
-                        this.motionY -= 0.04;
+                        this.motionY -= 0.04D;
                     }
                 }
                 else
                 {
-                    this.targetDeltaX = MathHelper.clamp(this.targetDeltaX * 1.025, -1.0, 1.0);
-                    this.targetDeltaY = MathHelper.clamp(this.targetDeltaY * 1.025, -1.0, 1.0);
-                    this.targetDeltaZ = MathHelper.clamp(this.targetDeltaZ * 1.025, -1.0, 1.0);
-                    this.motionX = this.motionX + (this.targetDeltaX - this.motionX) * 0.2;
-                    this.motionY = this.motionY + (this.targetDeltaY - this.motionY) * 0.2;
-                    this.motionZ = this.motionZ + (this.targetDeltaZ - this.motionZ) * 0.2;
+                    this.targetDeltaX = MathHelper.clamp(this.targetDeltaX * 1.025D, -1.0D, 1.0D);
+                    this.targetDeltaY = MathHelper.clamp(this.targetDeltaY * 1.025D, -1.0D, 1.0D);
+                    this.targetDeltaZ = MathHelper.clamp(this.targetDeltaZ * 1.025D, -1.0D, 1.0D);
+                    this.motionX += (this.targetDeltaX - this.motionX) * 0.2D;
+                    this.motionY += (this.targetDeltaY - this.motionY) * 0.2D;
+                    this.motionZ += (this.targetDeltaZ - this.motionZ) * 0.2D;
                 }
 
                 RayTraceResult raytraceresult = ProjectileHelper.forwardsRaycast(this, true, false, this.owner);
 
-                if (raytraceresult != null)
+                if (raytraceresult != null && !net.minecraftforge.event.ForgeEventFactory.onProjectileImpact(this, raytraceresult))
                 {
                     this.bulletHit(raytraceresult);
                 }
@@ -336,22 +321,13 @@
 
             if (this.world.isRemote)
             {
-                this.world
-                .spawnParticle(
-                    EnumParticleTypes.END_ROD,
-                    this.posX - this.motionX,
-                    this.posY - this.motionY + 0.15,
-                    this.posZ - this.motionZ,
-                    0.0,
-                    0.0,
-                    0.0
-                );
+                this.world.spawnParticle(EnumParticleTypes.END_ROD, this.posX - this.motionX, this.posY - this.motionY + 0.15D, this.posZ - this.motionZ, 0.0D, 0.0D, 0.0D);
             }
             else if (this.target != null && !this.target.isDead)
             {
                 if (this.steps > 0)
                 {
-                    this.steps--;
+                    --this.steps;
 
                     if (this.steps == 0)
                     {
@@ -372,9 +348,7 @@
                     {
                         BlockPos blockpos1 = new BlockPos(this.target);
 
-                        if (enumfacing$axis == EnumFacing.Axis.X && blockpos.getX() == blockpos1.getX()
-                                || enumfacing$axis == EnumFacing.Axis.Z && blockpos.getZ() == blockpos1.getZ()
-                                || enumfacing$axis == EnumFacing.Axis.Y && blockpos.getY() == blockpos1.getY())
+                        if (enumfacing$axis == EnumFacing.Axis.X && blockpos.getX() == blockpos1.getX() || enumfacing$axis == EnumFacing.Axis.Z && blockpos.getZ() == blockpos1.getZ() || enumfacing$axis == EnumFacing.Axis.Y && blockpos.getY() == blockpos1.getY())
                         {
                             this.selectNextMoveDirection(enumfacing$axis);
                         }
@@ -384,27 +358,23 @@
         }
     }
 
-    @Override
     public boolean isBurning()
     {
         return false;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public boolean isInRangeToRenderDist(double distance)
     {
-        return distance < 16384.0;
+        return distance < 16384.0D;
     }
 
-    @Override
     public float getBrightness()
     {
         return 1.0F;
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public int getBrightnessForRender()
     {
         return 15728880;
@@ -414,8 +384,7 @@
     {
         if (result.entityHit == null)
         {
-            ((WorldServer)this.world)
-            .spawnParticle(EnumParticleTypes.EXPLOSION_LARGE, this.posX, this.posY, this.posZ, 2, 0.2, 0.2, 0.2, 0.0);
+            ((WorldServer)this.world).spawnParticle(EnumParticleTypes.EXPLOSION_LARGE, this.posX, this.posY, this.posZ, 2, 0.2D, 0.2D, 0.2D, 0.0D);
             this.playSound(SoundEvents.ENTITY_SHULKER_BULLET_HIT, 1.0F, 1.0F);
         }
         else
@@ -436,20 +405,17 @@
         this.setDead();
     }
 
-    @Override
     public boolean canBeCollidedWith()
     {
         return true;
     }
 
-    @Override
     public boolean attackEntityFrom(DamageSource source, float amount)
     {
         if (!this.world.isRemote)
         {
             this.playSound(SoundEvents.ENTITY_SHULKER_BULLET_HURT, 1.0F, 1.0F);
-            ((WorldServer)this.world)
-            .spawnParticle(EnumParticleTypes.CRIT, this.posX, this.posY, this.posZ, 15, 0.2, 0.2, 0.2, 0.0);
+            ((WorldServer)this.world).spawnParticle(EnumParticleTypes.CRIT, this.posX, this.posY, this.posZ, 15, 0.2D, 0.2D, 0.2D, 0.0D);
             this.setDead();
         }
 
