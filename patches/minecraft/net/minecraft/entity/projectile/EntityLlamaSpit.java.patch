--- before/net/minecraft/entity/projectile/EntityLlamaSpit.java
+++ after/net/minecraft/entity/projectile/EntityLlamaSpit.java
@@ -32,27 +32,19 @@
     {
         super(worldIn);
         this.owner = p_i47273_2_;
-        this.setPosition(
-            p_i47273_2_.posX
-            - (double)(p_i47273_2_.width + 1.0F) * 0.5 * (double)MathHelper.sin(p_i47273_2_.renderYawOffset * (float)(Math.PI / 180.0)),
-            p_i47273_2_.posY + (double)p_i47273_2_.getEyeHeight() - 0.1F,
-            p_i47273_2_.posZ
-            + (double)(p_i47273_2_.width + 1.0F) * 0.5 * (double)MathHelper.cos(p_i47273_2_.renderYawOffset * (float)(Math.PI / 180.0))
-        );
+        this.setPosition(p_i47273_2_.posX - (double)(p_i47273_2_.width + 1.0F) * 0.5D * (double)MathHelper.sin(p_i47273_2_.renderYawOffset * 0.017453292F), p_i47273_2_.posY + (double)p_i47273_2_.getEyeHeight() - 0.10000000149011612D, p_i47273_2_.posZ + (double)(p_i47273_2_.width + 1.0F) * 0.5D * (double)MathHelper.cos(p_i47273_2_.renderYawOffset * 0.017453292F));
         this.setSize(0.25F, 0.25F);
     }
 
     @SideOnly(Side.CLIENT)
-    public EntityLlamaSpit(
-        World worldIn, double x, double y, double z, double p_i47274_8_, double p_i47274_10_, double p_i47274_12_
-    )
+    public EntityLlamaSpit(World worldIn, double x, double y, double z, double p_i47274_8_, double p_i47274_10_, double p_i47274_12_)
     {
         super(worldIn);
         this.setPosition(x, y, z);
 
-        for (int i = 0; i < 7; i++)
+        for (int i = 0; i < 7; ++i)
         {
-            double d0 = 0.4 + 0.1 * (double)i;
+            double d0 = 0.4D + 0.1D * (double)i;
             worldIn.spawnParticle(EnumParticleTypes.SPIT, x, y, z, p_i47274_8_ * d0, p_i47274_10_, p_i47274_12_ * d0);
         }
 
@@ -61,7 +53,6 @@
         this.motionZ = p_i47274_12_;
     }
 
-    @Override
     public void onUpdate()
     {
         super.onUpdate();
@@ -89,21 +80,20 @@
             raytraceresult = new RayTraceResult(entity);
         }
 
-        if (raytraceresult != null)
+        if (raytraceresult != null && !net.minecraftforge.event.ForgeEventFactory.onProjectileImpact(this, raytraceresult))
         {
             this.onHit(raytraceresult);
         }
 
-        this.posX = this.posX + this.motionX;
-        this.posY = this.posY + this.motionY;
-        this.posZ = this.posZ + this.motionZ;
+        this.posX += this.motionX;
+        this.posY += this.motionY;
+        this.posZ += this.motionZ;
         float f = MathHelper.sqrt(this.motionX * this.motionX + this.motionZ * this.motionZ);
-        this.rotationYaw = (float)(MathHelper.atan2(this.motionX, this.motionZ) * 180.0F / (float)Math.PI);
-        this.rotationPitch = (float)(MathHelper.atan2(this.motionY, (double)f) * 180.0F / (float)Math.PI);
+        this.rotationYaw = (float)(MathHelper.atan2(this.motionX, this.motionZ) * (180D / Math.PI));
 
-        while (this.rotationPitch - this.prevRotationPitch < -180.0F)
+        for (this.rotationPitch = (float)(MathHelper.atan2(this.motionY, (double)f) * (180D / Math.PI)); this.rotationPitch - this.prevRotationPitch < -180.0F; this.prevRotationPitch -= 360.0F)
         {
-            this.prevRotationPitch -= 360.0F;
+            ;
         }
 
         while (this.rotationPitch - this.prevRotationPitch >= 180.0F)
@@ -136,13 +126,13 @@
         }
         else
         {
-            this.motionX *= 0.99F;
-            this.motionY *= 0.99F;
-            this.motionZ *= 0.99F;
+            this.motionX *= 0.9900000095367432D;
+            this.motionY *= 0.9900000095367432D;
+            this.motionZ *= 0.9900000095367432D;
 
             if (!this.hasNoGravity())
             {
-                this.motionY -= 0.06F;
+                this.motionY -= 0.05999999865889549D;
             }
 
             this.setPosition(this.posX, this.posY, this.posZ);
@@ -150,7 +140,6 @@
     }
 
     @SideOnly(Side.CLIENT)
-    @Override
     public void setVelocity(double x, double y, double z)
     {
         this.motionX = x;
@@ -160,8 +149,8 @@
         if (this.prevRotationPitch == 0.0F && this.prevRotationYaw == 0.0F)
         {
             float f = MathHelper.sqrt(x * x + z * z);
-            this.rotationPitch = (float)(MathHelper.atan2(y, (double)f) * 180.0F / (float)Math.PI);
-            this.rotationYaw = (float)(MathHelper.atan2(x, z) * 180.0F / (float)Math.PI);
+            this.rotationPitch = (float)(MathHelper.atan2(y, (double)f) * (180D / Math.PI));
+            this.rotationYaw = (float)(MathHelper.atan2(x, z) * (180D / Math.PI));
             this.prevRotationPitch = this.rotationPitch;
             this.prevRotationYaw = this.rotationYaw;
             this.setLocationAndAngles(this.posX, this.posY, this.posZ, this.rotationYaw, this.rotationPitch);
@@ -172,22 +161,21 @@
     private Entity getHitEntity(Vec3d p_190538_1_, Vec3d p_190538_2_)
     {
         Entity entity = null;
-        List<Entity> list = this.world
-                            .getEntitiesWithinAABBExcludingEntity(this, this.getEntityBoundingBox().expand(this.motionX, this.motionY, this.motionZ).grow(1.0));
-        double d0 = 0.0;
+        List<Entity> list = this.world.getEntitiesWithinAABBExcludingEntity(this, this.getEntityBoundingBox().expand(this.motionX, this.motionY, this.motionZ).grow(1.0D));
+        double d0 = 0.0D;
 
         for (Entity entity1 : list)
         {
             if (entity1 != this.owner)
             {
-                AxisAlignedBB axisalignedbb = entity1.getEntityBoundingBox().grow(0.3F);
+                AxisAlignedBB axisalignedbb = entity1.getEntityBoundingBox().grow(0.30000001192092896D);
                 RayTraceResult raytraceresult = axisalignedbb.calculateIntercept(p_190538_1_, p_190538_2_);
 
                 if (raytraceresult != null)
                 {
                     double d1 = p_190538_1_.squareDistanceTo(raytraceresult.hitVec);
 
-                    if (d1 < d0 || d0 == 0.0)
+                    if (d1 < d0 || d0 == 0.0D)
                     {
                         entity = entity1;
                         d0 = d1;
@@ -199,25 +187,24 @@
         return entity;
     }
 
-    @Override
     public void shoot(double x, double y, double z, float velocity, float inaccuracy)
     {
         float f = MathHelper.sqrt(x * x + y * y + z * z);
-        x /= (double)f;
-        y /= (double)f;
-        z /= (double)f;
-        x += this.rand.nextGaussian() * 0.0075F * (double)inaccuracy;
-        y += this.rand.nextGaussian() * 0.0075F * (double)inaccuracy;
-        z += this.rand.nextGaussian() * 0.0075F * (double)inaccuracy;
-        x *= (double)velocity;
-        y *= (double)velocity;
-        z *= (double)velocity;
+        x = x / (double)f;
+        y = y / (double)f;
+        z = z / (double)f;
+        x = x + this.rand.nextGaussian() * 0.007499999832361937D * (double)inaccuracy;
+        y = y + this.rand.nextGaussian() * 0.007499999832361937D * (double)inaccuracy;
+        z = z + this.rand.nextGaussian() * 0.007499999832361937D * (double)inaccuracy;
+        x = x * (double)velocity;
+        y = y * (double)velocity;
+        z = z * (double)velocity;
         this.motionX = x;
         this.motionY = y;
         this.motionZ = z;
         float f1 = MathHelper.sqrt(x * x + z * z);
-        this.rotationYaw = (float)(MathHelper.atan2(x, z) * 180.0F / (float)Math.PI);
-        this.rotationPitch = (float)(MathHelper.atan2(y, (double)f1) * 180.0F / (float)Math.PI);
+        this.rotationYaw = (float)(MathHelper.atan2(x, z) * (180D / Math.PI));
+        this.rotationPitch = (float)(MathHelper.atan2(y, (double)f1) * (180D / Math.PI));
         this.prevRotationYaw = this.rotationYaw;
         this.prevRotationPitch = this.rotationPitch;
     }
@@ -235,12 +222,10 @@
         }
     }
 
-    @Override
     protected void entityInit()
     {
     }
 
-    @Override
     protected void readEntityFromNBT(NBTTagCompound compound)
     {
         if (compound.hasKey("Owner", 10))
@@ -249,7 +234,6 @@
         }
     }
 
-    @Override
     protected void writeEntityToNBT(NBTTagCompound compound)
     {
         if (this.owner != null)
@@ -267,7 +251,7 @@
         {
             UUID uuid = this.ownerNbt.getUniqueId("OwnerUUID");
 
-            for (EntityLlama entityllama : this.world.getEntitiesWithinAABB(EntityLlama.class, this.getEntityBoundingBox().grow(15.0)))
+            for (EntityLlama entityllama : this.world.getEntitiesWithinAABB(EntityLlama.class, this.getEntityBoundingBox().grow(15.0D)))
             {
                 if (entityllama.getUniqueID().equals(uuid))
                 {
