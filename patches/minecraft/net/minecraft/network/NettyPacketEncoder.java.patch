--- before/net/minecraft/network/NettyPacketEncoder.java
+++ after/net/minecraft/network/NettyPacketEncoder.java
@@ -22,7 +22,7 @@
 
     protected void encode(ChannelHandlerContext p_encode_1_, Packet<?> p_encode_2_, ByteBuf p_encode_3_) throws IOException, Exception
     {
-        EnumConnectionState enumconnectionstate = p_encode_1_.channel().attr(NetworkManager.field_150739_c).get();
+        EnumConnectionState enumconnectionstate = (EnumConnectionState)p_encode_1_.channel().attr(NetworkManager.field_150739_c).get();
 
         if (enumconnectionstate == null)
         {
@@ -34,9 +34,7 @@
 
             if (field_150798_a.isDebugEnabled())
             {
-                field_150798_a.debug(
-                    field_150797_b, "OUT: [{}:{}] {}", p_encode_1_.channel().attr(NetworkManager.field_150739_c).get(), integer, p_encode_2_.getClass().getName()
-                );
+                field_150798_a.debug(field_150797_b, "OUT: [{}:{}] {}", p_encode_1_.channel().attr(NetworkManager.field_150739_c).get(), integer, p_encode_2_.getClass().getName());
             }
 
             if (integer == null)
@@ -46,7 +44,7 @@
             else
             {
                 PacketBuffer packetbuffer = new PacketBuffer(p_encode_3_);
-                packetbuffer.func_150787_b(integer);
+                packetbuffer.func_150787_b(integer.intValue());
 
                 try
                 {
@@ -54,7 +52,7 @@
                 }
                 catch (Throwable throwable)
                 {
-                    field_150798_a.error(throwable);
+                    throw throwable; // Forge: throw this instead of logging it, to prevent corrupt packets from being sent to the client where they are much harder to debug.
                 }
             }
         }
