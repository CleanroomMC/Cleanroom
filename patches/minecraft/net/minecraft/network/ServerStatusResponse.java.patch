--- before/net/minecraft/network/ServerStatusResponse.java
+++ after/net/minecraft/network/ServerStatusResponse.java
@@ -29,6 +29,7 @@
     public void func_151315_a(ITextComponent p_151315_1_)
     {
         this.field_151326_a = p_151315_1_;
+        invalidateJson();
     }
 
     public ServerStatusResponse.Players func_151318_b()
@@ -39,6 +40,7 @@
     public void func_151319_a(ServerStatusResponse.Players p_151319_1_)
     {
         this.field_151324_b = p_151319_1_;
+        invalidateJson();
     }
 
     public ServerStatusResponse.Version func_151322_c()
@@ -49,11 +51,13 @@
     public void func_151321_a(ServerStatusResponse.Version p_151321_1_)
     {
         this.field_151325_c = p_151321_1_;
+        invalidateJson();
     }
 
     public void func_151320_a(String p_151320_1_)
     {
         this.field_151323_d = p_151320_1_;
+        invalidateJson();
     }
 
     public String func_151316_d()
@@ -98,9 +102,7 @@
                     public ServerStatusResponse.Players deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
                     {
                         JsonObject jsonobject = JsonUtils.func_151210_l(p_deserialize_1_, "players");
-                        ServerStatusResponse.Players serverstatusresponse$players = new ServerStatusResponse.Players(
-                            JsonUtils.func_151203_m(jsonobject, "max"), JsonUtils.func_151203_m(jsonobject, "online")
-                        );
+                        ServerStatusResponse.Players serverstatusresponse$players = new ServerStatusResponse.Players(JsonUtils.func_151203_m(jsonobject, "max"), JsonUtils.func_151203_m(jsonobject, "online"));
 
                         if (JsonUtils.func_151202_d(jsonobject, "sample"))
                         {
@@ -127,8 +129,8 @@
                     public JsonElement serialize(ServerStatusResponse.Players p_serialize_1_, Type p_serialize_2_, JsonSerializationContext p_serialize_3_)
                     {
                         JsonObject jsonobject = new JsonObject();
-                        jsonobject.addProperty("max", p_serialize_1_.func_151332_a());
-                        jsonobject.addProperty("online", p_serialize_1_.func_151333_b());
+                        jsonobject.addProperty("max", Integer.valueOf(p_serialize_1_.func_151332_a()));
+                        jsonobject.addProperty("online", Integer.valueOf(p_serialize_1_.func_151333_b()));
 
                         if (p_serialize_1_.func_151331_c() != null && p_serialize_1_.func_151331_c().length > 0)
                         {
@@ -160,17 +162,17 @@
 
                 if (jsonobject.has("description"))
                 {
-                    serverstatusresponse.func_151315_a(p_deserialize_3_.deserialize(jsonobject.get("description"), ITextComponent.class));
+                    serverstatusresponse.func_151315_a((ITextComponent)p_deserialize_3_.deserialize(jsonobject.get("description"), ITextComponent.class));
                 }
 
                 if (jsonobject.has("players"))
                 {
-                    serverstatusresponse.func_151319_a(p_deserialize_3_.deserialize(jsonobject.get("players"), ServerStatusResponse.Players.class));
+                    serverstatusresponse.func_151319_a((ServerStatusResponse.Players)p_deserialize_3_.deserialize(jsonobject.get("players"), ServerStatusResponse.Players.class));
                 }
 
                 if (jsonobject.has("version"))
                 {
-                    serverstatusresponse.func_151321_a(p_deserialize_3_.deserialize(jsonobject.get("version"), ServerStatusResponse.Version.class));
+                    serverstatusresponse.func_151321_a((ServerStatusResponse.Version)p_deserialize_3_.deserialize(jsonobject.get("version"), ServerStatusResponse.Version.class));
                 }
 
                 if (jsonobject.has("favicon"))
@@ -178,6 +180,7 @@
                     serverstatusresponse.func_151320_a(JsonUtils.func_151200_h(jsonobject, "favicon"));
                 }
 
+                net.minecraftforge.fml.client.FMLClientHandler.instance().captureAdditionalData(serverstatusresponse, jsonobject);
                 return serverstatusresponse;
             }
 
@@ -205,10 +208,50 @@
                     jsonobject.addProperty("favicon", p_serialize_1_.func_151316_d());
                 }
 
+                net.minecraftforge.fml.common.network.internal.FMLNetworkHandler.enhanceStatusQuery(jsonobject);
                 return jsonobject;
             }
         }
 
+    private java.util.concurrent.Semaphore mutex = new java.util.concurrent.Semaphore(1);
+    private String json = null;
+    /**
+     * Returns this object as a Json string.
+     * Converting to JSON if a cached version is not available.
+     *
+     * Also to prevent potentially large memory allocations on the server
+     * this is moved from the S00PacketServerInfo writePacket function
+     *
+     * As this method is called from the network threads thread safety is important!
+     *
+     * @return
+     */
+    public String getJson()
+    {
+        String ret = this.json;
+        if (ret == null)
+        {
+            mutex.acquireUninterruptibly();
+            ret = this.json;
+            if (ret == null)
+            {
+                ret = net.minecraft.network.status.server.SPacketServerInfo.field_149297_a.toJson(this);
+                this.json = ret;
+            }
+            mutex.release();
+        }
+        return ret;
+    }
+
+    /**
+     * Invalidates the cached json, causing the next call to getJson to rebuild it.
+     * This is needed externally because PlayerCountData.setPlayer's is public.
+     */
+    public void invalidateJson()
+    {
+        this.json = null;
+    }
+
     public static class Version
         {
             private final String field_151306_a;
@@ -242,7 +285,7 @@
                     {
                         JsonObject jsonobject = new JsonObject();
                         jsonobject.addProperty("name", p_serialize_1_.func_151303_a());
-                        jsonobject.addProperty("protocol", p_serialize_1_.func_151304_b());
+                        jsonobject.addProperty("protocol", Integer.valueOf(p_serialize_1_.func_151304_b()));
                         return jsonobject;
                     }
                 }
