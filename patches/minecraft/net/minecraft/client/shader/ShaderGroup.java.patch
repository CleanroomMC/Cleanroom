--- before/net/minecraft/client/shader/ShaderGroup.java
+++ after/net/minecraft/client/shader/ShaderGroup.java
@@ -7,6 +7,7 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import com.google.gson.JsonSyntaxException;
+import java.io.Closeable;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
@@ -31,9 +32,9 @@
     private final Framebuffer mainFramebuffer;
     private final IResourceManager resourceManager;
     private final String shaderGroupName;
-    private final List<Shader> listShaders = Lists.newArrayList();
-    private final Map<String, Framebuffer> mapFramebuffers = Maps.newHashMap();
-    private final List<Framebuffer> listFramebuffers = Lists.newArrayList();
+    private final List<Shader> listShaders = Lists.<Shader>newArrayList();
+    private final Map<String, Framebuffer> mapFramebuffers = Maps.<String, Framebuffer>newHashMap();
+    private final List<Framebuffer> listFramebuffers = Lists.<Framebuffer>newArrayList();
     private Matrix4f projectionMatrix;
     private int mainFramebufferWidth;
     private int mainFramebufferHeight;
@@ -81,7 +82,7 @@
                         throw jsonexception1;
                     }
 
-                    i++;
+                    ++i;
                 }
             }
 
@@ -103,7 +104,7 @@
                         throw jsonexception2;
                     }
 
-                    j++;
+                    ++j;
                 }
             }
         }
@@ -115,7 +116,7 @@
         }
         finally
         {
-            IOUtils.closeQuietly(iresource);
+            IOUtils.closeQuietly((Closeable)iresource);
         }
     }
 
@@ -161,7 +162,7 @@
         else
         {
             Shader shader = this.addShader(s, framebuffer, framebuffer1);
-            JsonArray jsonarray = JsonUtils.getJsonArray(jsonobject, "auxtargets", null);
+            JsonArray jsonarray = JsonUtils.getJsonArray(jsonobject, "auxtargets", (JsonArray)null);
 
             if (jsonarray != null)
             {
@@ -178,29 +179,30 @@
 
                         if (framebuffer2 == null)
                         {
-                            ResourceLocation resourcelocation = new ResourceLocation("textures/effect/" + s3 + ".png");
+                            String[] rl = ResourceLocation.splitObjectName(s3);
+                            ResourceLocation resourcelocation = new ResourceLocation(rl[0], "textures/effect/" + rl[1] + ".png");
                             IResource iresource = null;
 
                             try
                             {
                                 iresource = this.resourceManager.getResource(resourcelocation);
                             }
-                            catch (FileNotFoundException filenotfoundexception)
+                            catch (FileNotFoundException var29)
                             {
                                 throw new JsonException("Render target or texture '" + s3 + "' does not exist");
                             }
                             finally
                             {
-                                IOUtils.closeQuietly(iresource);
+                                IOUtils.closeQuietly((Closeable)iresource);
                             }
 
                             p_152764_1_.bindTexture(resourcelocation);
                             ITextureObject lvt_20_2_ = p_152764_1_.getTexture(resourcelocation);
                             int lvt_21_1_ = JsonUtils.getInt(jsonobject1, "width");
                             int lvt_22_1_ = JsonUtils.getInt(jsonobject1, "height");
-                            boolean flag = JsonUtils.getBoolean(jsonobject1, "bilinear");
+                            boolean lvt_23_1_ = JsonUtils.getBoolean(jsonobject1, "bilinear");
 
-                            if (flag)
+                            if (lvt_23_1_)
                             {
                                 GlStateManager.glTexParameteri(3553, 10241, 9729);
                                 GlStateManager.glTexParameteri(3553, 10240, 9729);
@@ -211,7 +213,7 @@
                                 GlStateManager.glTexParameteri(3553, 10240, 9728);
                             }
 
-                            shader.addAuxFramebuffer(s4, lvt_20_2_.getGlTextureId(), lvt_21_1_, lvt_22_1_);
+                            shader.addAuxFramebuffer(s4, Integer.valueOf(lvt_20_2_.getGlTextureId()), lvt_21_1_, lvt_22_1_);
                         }
                         else
                         {
@@ -225,11 +227,11 @@
                         throw jsonexception;
                     }
 
-                    i++;
+                    ++i;
                 }
             }
 
-            JsonArray jsonarray1 = JsonUtils.getJsonArray(jsonobject, "uniforms", null);
+            JsonArray jsonarray1 = JsonUtils.getJsonArray(jsonobject, "uniforms", (JsonArray)null);
 
             if (jsonarray1 != null)
             {
@@ -248,7 +250,7 @@
                         throw jsonexception1;
                     }
 
-                    l++;
+                    ++l;
                 }
             }
         }
@@ -258,7 +260,7 @@
     {
         JsonObject jsonobject = JsonUtils.getJsonObject(json, "uniform");
         String s = JsonUtils.getString(jsonobject, "name");
-        ShaderUniform shaderuniform = this.listShaders.get(this.listShaders.size() - 1).getShaderManager().getShaderUniform(s);
+        ShaderUniform shaderuniform = ((Shader)this.listShaders.get(this.listShaders.size() - 1)).getShaderManager().getShaderUniform(s);
 
         if (shaderuniform == null)
         {
@@ -282,7 +284,7 @@
                     throw jsonexception;
                 }
 
-                i++;
+                ++i;
             }
 
             switch (i)
@@ -378,19 +380,17 @@
     {
         if (partialTicks < this.lastStamp)
         {
-            this.time = this.time + (1.0F - this.lastStamp);
+            this.time += 1.0F - this.lastStamp;
             this.time += partialTicks;
         }
         else
         {
-            this.time = this.time + (partialTicks - this.lastStamp);
+            this.time += partialTicks - this.lastStamp;
         }
 
-        this.lastStamp = partialTicks;
-
-        while (this.time > 20.0F)
+        for (this.lastStamp = partialTicks; this.time > 20.0F; this.time -= 20.0F)
         {
-            this.time -= 20.0F;
+            ;
         }
 
         for (Shader shader : this.listShaders)
@@ -412,7 +412,7 @@
         }
         else
         {
-            return p_148017_1_.equals("minecraft:main") ? this.mainFramebuffer : this.mapFramebuffers.get(p_148017_1_);
+            return p_148017_1_.equals("minecraft:main") ? this.mainFramebuffer : (Framebuffer)this.mapFramebuffers.get(p_148017_1_);
         }
     }
 }
