--- before/net/minecraft/client/shader/ShaderManager.java
+++ after/net/minecraft/client/shader/ShaderManager.java
@@ -6,6 +6,7 @@
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
+import java.io.Closeable;
 import java.io.IOException;
 import java.nio.charset.StandardCharsets;
 import java.util.List;
@@ -34,12 +35,12 @@
     private static ShaderManager staticShaderManager;
     private static int currentProgram = -1;
     private static boolean lastCull = true;
-    private final Map<String, Object> shaderSamplers = Maps.newHashMap();
-    private final List<String> samplerNames = Lists.newArrayList();
-    private final List<Integer> shaderSamplerLocations = Lists.newArrayList();
-    private final List<ShaderUniform> shaderUniforms = Lists.newArrayList();
-    private final List<Integer> shaderUniformLocations = Lists.newArrayList();
-    private final Map<String, ShaderUniform> mappedShaderUniforms = Maps.newHashMap();
+    private final Map<String, Object> shaderSamplers = Maps.<String, Object>newHashMap();
+    private final List<String> samplerNames = Lists.<String>newArrayList();
+    private final List<Integer> shaderSamplerLocations = Lists.<Integer>newArrayList();
+    private final List<ShaderUniform> shaderUniforms = Lists.<ShaderUniform>newArrayList();
+    private final List<Integer> shaderUniformLocations = Lists.<Integer>newArrayList();
+    private final Map<String, ShaderUniform> mappedShaderUniforms = Maps.<String, ShaderUniform>newHashMap();
     private final int program;
     private final String programFilename;
     private final boolean useFaceCulling;
@@ -53,7 +54,8 @@
     public ShaderManager(IResourceManager resourceManager, String programName) throws JsonException, IOException
     {
         JsonParser jsonparser = new JsonParser();
-        ResourceLocation resourcelocation = new ResourceLocation("shaders/program/" + programName + ".json");
+        String[] rl = ResourceLocation.splitObjectName(programName);
+        ResourceLocation resourcelocation = new ResourceLocation(rl[0], "shaders/program/" + rl[1] + ".json");
         this.programFilename = programName;
         IResource iresource = null;
 
@@ -63,7 +65,7 @@
             JsonObject jsonobject = jsonparser.parse(IOUtils.toString(iresource.getInputStream(), StandardCharsets.UTF_8)).getAsJsonObject();
             String s = JsonUtils.getString(jsonobject, "vertex");
             String s1 = JsonUtils.getString(jsonobject, "fragment");
-            JsonArray jsonarray = JsonUtils.getJsonArray(jsonobject, "samplers", null);
+            JsonArray jsonarray = JsonUtils.getJsonArray(jsonobject, "samplers", (JsonArray)null);
 
             if (jsonarray != null)
             {
@@ -82,17 +84,17 @@
                         throw jsonexception1;
                     }
 
-                    i++;
+                    ++i;
                 }
             }
 
-            JsonArray jsonarray1 = JsonUtils.getJsonArray(jsonobject, "attributes", null);
+            JsonArray jsonarray1 = JsonUtils.getJsonArray(jsonobject, "attributes", (JsonArray)null);
 
             if (jsonarray1 != null)
             {
                 int j = 0;
-                this.attribLocations = Lists.newArrayListWithCapacity(jsonarray1.size());
-                this.attributes = Lists.newArrayListWithCapacity(jsonarray1.size());
+                this.attribLocations = Lists.<Integer>newArrayListWithCapacity(jsonarray1.size());
+                this.attributes = Lists.<String>newArrayListWithCapacity(jsonarray1.size());
 
                 for (JsonElement jsonelement1 : jsonarray1)
                 {
@@ -107,7 +109,7 @@
                         throw jsonexception2;
                     }
 
-                    j++;
+                    ++j;
                 }
             }
             else
@@ -116,7 +118,7 @@
                 this.attributes = null;
             }
 
-            JsonArray jsonarray2 = JsonUtils.getJsonArray(jsonobject, "uniforms", null);
+            JsonArray jsonarray2 = JsonUtils.getJsonArray(jsonobject, "uniforms", (JsonArray)null);
 
             if (jsonarray2 != null)
             {
@@ -135,11 +137,11 @@
                         throw jsonexception3;
                     }
 
-                    k++;
+                    ++k;
                 }
             }
 
-            this.blendingMode = JsonBlendingMode.parseBlendNode(JsonUtils.getJsonObject(jsonobject, "blend", null));
+            this.blendingMode = JsonBlendingMode.parseBlendNode(JsonUtils.getJsonObject(jsonobject, "blend", (JsonObject)null));
             this.useFaceCulling = JsonUtils.getBoolean(jsonobject, "cull", true);
             this.vertexShaderLoader = ShaderLoader.loadShader(resourceManager, ShaderLoader.ShaderType.VERTEX, s);
             this.fragmentShaderLoader = ShaderLoader.loadShader(resourceManager, ShaderLoader.ShaderType.FRAGMENT, s1);
@@ -152,7 +154,7 @@
                 for (String s2 : this.attributes)
                 {
                     int l = OpenGlHelper.glGetAttribLocation(this.program, s2);
-                    this.attribLocations.add(l);
+                    this.attribLocations.add(Integer.valueOf(l));
                 }
             }
         }
@@ -164,7 +166,7 @@
         }
         finally
         {
-            IOUtils.closeQuietly(iresource);
+            IOUtils.closeQuietly((Closeable)iresource);
         }
 
         this.markDirty();
@@ -182,7 +184,7 @@
         staticShaderManager = null;
         lastCull = true;
 
-        for (int i = 0; i < this.shaderSamplerLocations.size(); i++)
+        for (int i = 0; i < this.shaderSamplerLocations.size(); ++i)
         {
             if (this.shaderSamplers.get(this.samplerNames.get(i)) != null)
             {
@@ -213,7 +215,7 @@
             GlStateManager.disableCull();
         }
 
-        for (int i = 0; i < this.shaderSamplerLocations.size(); i++)
+        for (int i = 0; i < this.shaderSamplerLocations.size(); ++i)
         {
             if (this.shaderSamplers.get(this.samplerNames.get(i)) != null)
             {
@@ -232,7 +234,7 @@
                 }
                 else if (object instanceof Integer)
                 {
-                    j = (Integer)object;
+                    j = ((Integer)object).intValue();
                 }
 
                 if (j != -1)
@@ -270,7 +272,7 @@
     {
         int i = 0;
 
-        for (int j = 0; i < this.samplerNames.size(); j++)
+        for (int j = 0; i < this.samplerNames.size(); ++j)
         {
             String s = this.samplerNames.get(i);
             int k = OpenGlHelper.glGetUniformLocation(this.program, s);
@@ -280,14 +282,14 @@
                 LOGGER.warn("Shader {}could not find sampler named {} in the specified shader program.", this.programFilename, s);
                 this.shaderSamplers.remove(s);
                 this.samplerNames.remove(j);
-                j--;
+                --j;
             }
             else
             {
-                this.shaderSamplerLocations.add(k);
+                this.shaderSamplerLocations.add(Integer.valueOf(k));
             }
 
-            i++;
+            ++i;
         }
 
         for (ShaderUniform shaderuniform : this.shaderUniforms)
@@ -297,11 +299,11 @@
 
             if (l == -1)
             {
-                LOGGER.warn("Could not find uniform named {} in the specified shader program.", s1);
+                LOGGER.warn("Could not find uniform named {} in the specified shader program.", (Object)s1);
             }
             else
             {
-                this.shaderUniformLocations.add(l);
+                this.shaderUniformLocations.add(Integer.valueOf(l));
                 shaderuniform.setUniformLocation(l);
                 this.mappedShaderUniforms.put(s1, shaderuniform);
             }
@@ -315,7 +317,7 @@
 
         if (!JsonUtils.isString(jsonobject, "file"))
         {
-            this.shaderSamplers.put(s, null);
+            this.shaderSamplers.put(s, (Object)null);
             this.samplerNames.add(s);
         }
         else
@@ -365,7 +367,7 @@
                     throw jsonexception;
                 }
 
-                k++;
+                ++k;
             }
 
             if (j > 1 && jsonarray.size() == 1)
@@ -373,7 +375,7 @@
                 while (k < j)
                 {
                     afloat[k] = afloat[0];
-                    k++;
+                    ++k;
                 }
             }
 
