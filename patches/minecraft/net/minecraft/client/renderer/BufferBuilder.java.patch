--- before/net/minecraft/client/renderer/BufferBuilder.java
+++ after/net/minecraft/client/renderer/BufferBuilder.java
@@ -1,7 +1,6 @@
 package net.minecraft.client.renderer;
 
 import com.google.common.primitives.Floats;
-import java.nio.Buffer;
 import java.nio.ByteBuffer;
 import java.nio.ByteOrder;
 import java.nio.FloatBuffer;
@@ -47,23 +46,22 @@
 
     private void func_181670_b(int p_181670_1_)
     {
-        if (MathHelper.func_154354_b(p_181670_1_, 4) / 4 > this.field_178999_b.remaining()
-                || this.field_178997_d * this.field_179011_q.func_177338_f() + p_181670_1_ > this.field_179001_a.capacity())
+        if (MathHelper.func_154354_b(p_181670_1_, 4) / 4 > this.field_178999_b.remaining() || this.field_178997_d * this.field_179011_q.func_177338_f() + p_181670_1_ > this.field_179001_a.capacity())
         {
             int i = this.field_179001_a.capacity();
             int j = i + MathHelper.func_154354_b(p_181670_1_, 2097152);
-            field_187316_a.debug("Needed to grow BufferBuilder buffer: Old size {} bytes, new size {} bytes.", i, j);
+            field_187316_a.debug("Needed to grow BufferBuilder buffer: Old size {} bytes, new size {} bytes.", Integer.valueOf(i), Integer.valueOf(j));
             int k = this.field_178999_b.position();
             ByteBuffer bytebuffer = GLAllocation.func_74524_c(j);
-            ((Buffer)this.field_179001_a).position(0);
+            this.field_179001_a.position(0);
             bytebuffer.put(this.field_179001_a);
-            ((Buffer)bytebuffer).rewind();
+            bytebuffer.rewind();
             this.field_179001_a = bytebuffer;
             this.field_179000_c = this.field_179001_a.asFloatBuffer().asReadOnlyBuffer();
             this.field_178999_b = this.field_179001_a.asIntBuffer();
-            ((Buffer)this.field_178999_b).position(k);
+            this.field_178999_b.position(k);
             this.field_181676_c = this.field_179001_a.asShortBuffer();
-            ((Buffer)this.field_181676_c).position(k << 1);
+            this.field_181676_c.position(k << 1);
         }
     }
 
@@ -74,14 +72,7 @@
 
         for (int j = 0; j < i; ++j)
         {
-            afloat[j] = func_181665_a(
-                            this.field_179000_c,
-                            (float)((double)p_181674_1_ + this.field_179004_l),
-                            (float)((double)p_181674_2_ + this.field_179005_m),
-                            (float)((double)p_181674_3_ + this.field_179002_n),
-                            this.field_179011_q.func_181719_f(),
-                            j * this.field_179011_q.func_177338_f()
-                        );
+            afloat[j] = func_181665_a(this.field_179000_c, (float)((double)p_181674_1_ + this.field_179004_l), (float)((double)p_181674_2_ + this.field_179005_m), (float)((double)p_181674_3_ + this.field_179002_n), this.field_179011_q.func_181719_f(), j * this.field_179011_q.func_177338_f());
         }
 
         Integer[] ainteger = new Integer[i];
@@ -95,7 +86,7 @@
         {
             public int compare(Integer p_compare_1_, Integer p_compare_2_)
             {
-                return Floats.compare(afloat[p_compare_2_], afloat[p_compare_1_]);
+                return Floats.compare(afloat[p_compare_2_.intValue()], afloat[p_compare_1_.intValue()]);
             }
         });
         BitSet bitset = new BitSet();
@@ -104,45 +95,47 @@
 
         for (int i1 = bitset.nextClearBit(0); i1 < ainteger.length; i1 = bitset.nextClearBit(i1 + 1))
         {
-            int j1 = ainteger[i1];
+            int j1 = ainteger[i1].intValue();
 
             if (j1 != i1)
             {
-                ((Buffer)this.field_178999_b).limit(j1 * l + l);
-                ((Buffer)this.field_178999_b).position(j1 * l);
+                this.field_178999_b.limit(j1 * l + l);
+                this.field_178999_b.position(j1 * l);
                 this.field_178999_b.get(aint);
                 int k1 = j1;
 
-                for (int l1 = ainteger[j1]; k1 != i1; l1 = ainteger[l1])
+                for (int l1 = ainteger[j1].intValue(); k1 != i1; l1 = ainteger[l1].intValue())
                 {
-                    ((Buffer)this.field_178999_b).limit(l1 * l + l);
-                    ((Buffer)this.field_178999_b).position(l1 * l);
+                    this.field_178999_b.limit(l1 * l + l);
+                    this.field_178999_b.position(l1 * l);
                     IntBuffer intbuffer = this.field_178999_b.slice();
-                    ((Buffer)this.field_178999_b).limit(k1 * l + l);
-                    ((Buffer)this.field_178999_b).position(k1 * l);
+                    this.field_178999_b.limit(k1 * l + l);
+                    this.field_178999_b.position(k1 * l);
                     this.field_178999_b.put(intbuffer);
                     bitset.set(k1);
                     k1 = l1;
                 }
 
-                ((Buffer)this.field_178999_b).limit(i1 * l + l);
-                ((Buffer)this.field_178999_b).position(i1 * l);
+                this.field_178999_b.limit(i1 * l + l);
+                this.field_178999_b.position(i1 * l);
                 this.field_178999_b.put(aint);
             }
 
             bitset.set(i1);
         }
+        this.field_178999_b.limit(this.field_178999_b.capacity());
+        this.field_178999_b.position(this.func_181664_j());
     }
 
     public BufferBuilder.State func_181672_a()
     {
-        ((Buffer)this.field_178999_b).rewind();
+        this.field_178999_b.rewind();
         int i = this.func_181664_j();
-        ((Buffer)this.field_178999_b).limit(i);
+        this.field_178999_b.limit(i);
         int[] aint = new int[i];
         this.field_178999_b.get(aint);
-        ((Buffer)this.field_178999_b).limit(this.field_178999_b.capacity());
-        ((Buffer)this.field_178999_b).position(i);
+        this.field_178999_b.limit(this.field_178999_b.capacity());
+        this.field_178999_b.position(i);
         return new BufferBuilder.State(aint, new VertexFormat(this.field_179011_q));
     }
 
@@ -173,7 +166,7 @@
 
     public void func_178993_a(BufferBuilder.State p_178993_1_)
     {
-        ((Buffer)this.field_178999_b).clear();
+        this.field_178999_b.clear();
         this.func_181670_b(p_178993_1_.func_179013_a().length * 4);
         this.field_178999_b.put(p_178993_1_.func_179013_a());
         this.field_178997_d = p_178993_1_.func_179014_c();
@@ -201,7 +194,7 @@
             this.field_179011_q = p_181668_2_;
             this.field_181677_f = p_181668_2_.func_177348_c(this.field_181678_g);
             this.field_78939_q = false;
-            ((Buffer)this.field_179001_a).limit(this.field_179001_a.capacity());
+            this.field_179001_a.limit(this.field_179001_a.capacity());
         }
     }
 
@@ -307,19 +300,19 @@
 
             if (ByteOrder.nativeOrder() == ByteOrder.LITTLE_ENDIAN)
             {
-                int k = (int)((float)(j & 0xFF) * p_178978_1_);
-                int l = (int)((float)(j >> 8 & 0xFF) * p_178978_2_);
-                int i1 = (int)((float)(j >> 16 & 0xFF) * p_178978_3_);
-                j &= -16777216;
-                j |= i1 << 16 | l << 8 | k;
+                int k = (int)((float)(j & 255) * p_178978_1_);
+                int l = (int)((float)(j >> 8 & 255) * p_178978_2_);
+                int i1 = (int)((float)(j >> 16 & 255) * p_178978_3_);
+                j = j & -16777216;
+                j = j | i1 << 16 | l << 8 | k;
             }
             else
             {
-                int j1 = (int)((float)(j >> 24 & 0xFF) * p_178978_1_);
-                int k1 = (int)((float)(j >> 16 & 0xFF) * p_178978_2_);
-                int l1 = (int)((float)(j >> 8 & 0xFF) * p_178978_3_);
-                j &= 255;
-                j |= j1 << 24 | k1 << 16 | l1 << 8;
+                int j1 = (int)((float)(j >> 24 & 255) * p_178978_1_);
+                int k1 = (int)((float)(j >> 16 & 255) * p_178978_2_);
+                int l1 = (int)((float)(j >> 8 & 255) * p_178978_3_);
+                j = j & 255;
+                j = j | j1 << 24 | k1 << 16 | l1 << 8;
             }
         }
 
@@ -329,9 +322,9 @@
     private void func_192836_a(int p_192836_1_, int p_192836_2_)
     {
         int i = this.func_78909_a(p_192836_2_);
-        int j = p_192836_1_ >> 16 & 0xFF;
-        int k = p_192836_1_ >> 8 & 0xFF;
-        int l = p_192836_1_ & 0xFF;
+        int j = p_192836_1_ >> 16 & 255;
+        int k = p_192836_1_ >> 8 & 255;
+        int l = p_192836_1_ & 255;
         this.func_178972_a(i, j, k, l);
     }
 
@@ -348,11 +341,11 @@
     {
         if (ByteOrder.nativeOrder() == ByteOrder.LITTLE_ENDIAN)
         {
-            this.field_178999_b.put(p_178972_1_, 0xFF000000 | p_178972_4_ << 16 | p_178972_3_ << 8 | p_178972_2_);
+            this.field_178999_b.put(p_178972_1_, -16777216 | p_178972_4_ << 16 | p_178972_3_ << 8 | p_178972_2_);
         }
         else
         {
-            this.field_178999_b.put(p_178972_1_, p_178972_2_ << 24 | p_178972_3_ << 16 | p_178972_4_ << 8 | 0xFF);
+            this.field_178999_b.put(p_178972_1_, p_178972_2_ << 24 | p_178972_3_ << 16 | p_178972_4_ << 8 | 255);
         }
     }
 
@@ -424,8 +417,8 @@
 
     public void func_178981_a(int[] p_178981_1_)
     {
-        this.func_181670_b(p_178981_1_.length * 4);
-        ((Buffer)this.field_178999_b).position(this.func_181664_j());
+        this.func_181670_b(p_178981_1_.length * 4 + this.field_179011_q.func_177338_f());//Forge, fix MC-122110
+        this.field_178999_b.position(this.func_181664_j());
         this.field_178999_b.put(p_178981_1_);
         this.field_178997_d += p_178981_1_.length / this.field_179011_q.func_181719_f();
     }
@@ -515,15 +508,15 @@
                 break;
             case USHORT:
             case SHORT:
-                this.field_179001_a.putShort(i, (short)((int)p_181663_1_ * 32767 & 65535));
-                this.field_179001_a.putShort(i + 2, (short)((int)p_181663_2_ * 32767 & 65535));
-                this.field_179001_a.putShort(i + 4, (short)((int)p_181663_3_ * 32767 & 65535));
+                this.field_179001_a.putShort(i, (short)((int)(p_181663_1_ * 32767) & 65535));
+                this.field_179001_a.putShort(i + 2, (short)((int)(p_181663_2_ * 32767) & 65535));
+                this.field_179001_a.putShort(i + 4, (short)((int)(p_181663_3_ * 32767) & 65535));
                 break;
             case UBYTE:
             case BYTE:
-                this.field_179001_a.put(i, (byte)((int)p_181663_1_ * 127 & 0xFF));
-                this.field_179001_a.put(i + 1, (byte)((int)p_181663_2_ * 127 & 0xFF));
-                this.field_179001_a.put(i + 2, (byte)((int)p_181663_3_ * 127 & 0xFF));
+                this.field_179001_a.put(i, (byte)((int)(p_181663_1_ * 127) & 255));
+                this.field_179001_a.put(i + 1, (byte)((int)(p_181663_2_ * 127) & 255));
+                this.field_179001_a.put(i + 2, (byte)((int)(p_181663_3_ * 127) & 255));
         }
 
         this.func_181667_k();
@@ -546,8 +539,8 @@
         else
         {
             this.field_179010_r = false;
-            ((Buffer)this.field_179001_a).position(0);
-            ((Buffer)this.field_179001_a).limit(this.func_181664_j() * 4);
+            this.field_179001_a.position(0);
+            this.field_179001_a.limit(this.func_181664_j() * 4);
         }
     }
 
@@ -613,5 +606,28 @@
         {
             return this.field_179018_e;
         }
+    }
+
+
+    //For some unknown reason Mojang changed the vanilla function to hardcode alpha as 255.... So lets re-add the parameter -.-
+    public void putColorRGBA(int index, int red, int green, int blue, int alpha)
+    {
+        if (ByteOrder.nativeOrder() == ByteOrder.LITTLE_ENDIAN)
+            this.field_178999_b.put(index, alpha << 24 | blue << 16 | green << 8 | red);
+        else
+            this.field_178999_b.put(index, red << 24 | green << 16 | blue << 8 | alpha);
+    }
+
+    public boolean isColorDisabled()
+    {
+        return this.field_78939_q;
+    }
+
+    public void putBulkData(ByteBuffer buffer)
+    {
+        func_181670_b(buffer.limit() + this.field_179011_q.func_177338_f());
+        this.field_179001_a.position(this.field_178997_d * this.field_179011_q.func_177338_f());
+        this.field_179001_a.put(buffer);
+        this.field_178997_d += buffer.limit() / this.field_179011_q.func_177338_f();
     }
 }
