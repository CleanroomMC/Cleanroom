--- before/net/minecraft/client/renderer/BlockRendererDispatcher.java
+++ after/net/minecraft/client/renderer/BlockRendererDispatcher.java
@@ -28,7 +28,7 @@
     public BlockRendererDispatcher(BlockModelShapes p_i46577_1_, BlockColors p_i46577_2_)
     {
         this.blockModelShapes = p_i46577_1_;
-        this.blockModelRenderer = new BlockModelRenderer(p_i46577_2_);
+        this.blockModelRenderer = new net.minecraftforge.client.model.pipeline.ForgeBlockModelRenderer(p_i46577_2_);
         this.fluidRenderer = new BlockFluidRenderer(p_i46577_2_);
     }
 
@@ -43,7 +43,7 @@
         {
             state = state.getActualState(blockAccess, pos);
             IBakedModel ibakedmodel = this.blockModelShapes.getModelForState(state);
-            IBakedModel ibakedmodel1 = new SimpleBakedModel.Builder(state, ibakedmodel, texture, pos).makeBakedModel();
+            IBakedModel ibakedmodel1 = net.minecraftforge.client.ForgeHooksClient.getDamageModel(ibakedmodel, texture, state, blockAccess, pos);
             this.blockModelRenderer.renderModel(blockAccess, ibakedmodel1, state, pos, Tessellator.getInstance().getBuffer(), true);
         }
     }
@@ -66,15 +66,18 @@
                     {
                         state = state.getActualState(blockAccess, pos);
                     }
-                    catch (Exception exception)
+                    catch (Exception var8)
                     {
+                        ;
                     }
                 }
 
                 switch (enumblockrendertype)
                 {
                     case MODEL:
-                        return this.blockModelRenderer.renderModel(blockAccess, this.getModelForState(state), state, pos, bufferBuilderIn, true);
+                        IBakedModel model = this.getModelForState(state);
+                        state = state.getBlock().getExtendedState(state, blockAccess, pos);
+                        return this.blockModelRenderer.renderModel(blockAccess, model, state, pos, bufferBuilderIn, true);
                     case ENTITYBLOCK_ANIMATED:
                         return false;
                     case LIQUID:
@@ -88,9 +91,7 @@
         {
             CrashReport crashreport = CrashReport.makeCrashReport(throwable, "Tesselating block in world");
             CrashReportCategory crashreportcategory = crashreport.makeCategory("Block being tesselated");
-            CrashReportCategory.addBlockInfo(
-                crashreportcategory, pos, state.getBlock(), state.getBlock().getMetaFromState(state)
-            );
+            CrashReportCategory.addBlockInfo(crashreportcategory, pos, state.getBlock(), state.getBlock().getMetaFromState(state));
             throw new ReportedException(crashreport);
         }
     }
@@ -125,7 +126,6 @@
         }
     }
 
-    @Override
     public void onResourceManagerReload(IResourceManager resourceManager)
     {
         this.fluidRenderer.initAtlasSprites();
