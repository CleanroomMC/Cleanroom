--- before/net/minecraft/client/renderer/block/model/multipart/Selector.java
+++ after/net/minecraft/client/renderer/block/model/multipart/Selector.java
@@ -53,7 +53,6 @@
         return this.condition.getPredicate(state);
     }
 
-    @Override
     public boolean equals(Object p_equals_1_)
     {
         if (this == p_equals_1_)
@@ -76,7 +75,6 @@
         }
     }
 
-    @Override
     public int hashCode()
     {
         return 31 * this.condition.hashCode() + this.variantList.hashCode();
@@ -105,7 +103,7 @@
             public Selector deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
             {
                 JsonObject jsonobject = p_deserialize_1_.getAsJsonObject();
-                return new Selector(this.getWhenCondition(jsonobject), p_deserialize_3_.deserialize(jsonobject.get("apply"), VariantList.class));
+                return new Selector(this.getWhenCondition(jsonobject), (VariantList)p_deserialize_3_.deserialize(jsonobject.get("apply"), VariantList.class));
             }
 
             private ICondition getWhenCondition(JsonObject json)
@@ -130,9 +128,7 @@
                     }
                     else
                     {
-                        return (ICondition)(json.has("AND")
-                                            ? new ConditionAnd(Iterables.transform(JsonUtils.getJsonArray(json, "AND"), FUNCTION_OR_AND))
-                                            : makePropertyValue(set.iterator().next()));
+                        return (ICondition)(json.has("AND") ? new ConditionAnd(Iterables.transform(JsonUtils.getJsonArray(json, "AND"), FUNCTION_OR_AND)) : makePropertyValue(set.iterator().next()));
                     }
                 }
                 else
@@ -143,7 +139,7 @@
 
             private static ConditionPropertyValue makePropertyValue(Entry<String, JsonElement> entry)
             {
-                return new ConditionPropertyValue(entry.getKey(), entry.getValue().getAsString());
+                return new ConditionPropertyValue(entry.getKey(), ((JsonElement)entry.getValue()).getAsString());
             }
         }
 }
