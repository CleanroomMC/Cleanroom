--- before/net/minecraft/client/renderer/block/model/SimpleBakedModel.java
+++ after/net/minecraft/client/renderer/block/model/SimpleBakedModel.java
@@ -24,15 +24,7 @@
     protected final ItemCameraTransforms cameraTransforms;
     protected final ItemOverrideList itemOverrideList;
 
-    public SimpleBakedModel(
-        List<BakedQuad> generalQuadsIn,
-        Map<EnumFacing, List<BakedQuad>> faceQuadsIn,
-        boolean ambientOcclusionIn,
-        boolean gui3dIn,
-        TextureAtlasSprite textureIn,
-        ItemCameraTransforms cameraTransformsIn,
-        ItemOverrideList itemOverrideListIn
-    )
+    public SimpleBakedModel(List<BakedQuad> generalQuadsIn, Map<EnumFacing, List<BakedQuad>> faceQuadsIn, boolean ambientOcclusionIn, boolean gui3dIn, TextureAtlasSprite textureIn, ItemCameraTransforms cameraTransformsIn, ItemOverrideList itemOverrideListIn)
     {
         this.generalQuads = generalQuadsIn;
         this.faceQuads = faceQuadsIn;
@@ -43,43 +35,36 @@
         this.itemOverrideList = itemOverrideListIn;
     }
 
-    @Override
     public List<BakedQuad> getQuads(@Nullable IBlockState state, @Nullable EnumFacing side, long rand)
     {
-        return side == null ? this.generalQuads : this.faceQuads.get(side);
+        return side == null ? this.generalQuads : (List)this.faceQuads.get(side);
     }
 
-    @Override
     public boolean isAmbientOcclusion()
     {
         return this.ambientOcclusion;
     }
 
-    @Override
     public boolean isGui3d()
     {
         return this.gui3d;
     }
 
-    @Override
     public boolean isBuiltInRenderer()
     {
         return false;
     }
 
-    @Override
     public TextureAtlasSprite getParticleTexture()
     {
         return this.texture;
     }
 
-    @Override
     public ItemCameraTransforms getItemCameraTransforms()
     {
         return this.cameraTransforms;
     }
 
-    @Override
     public ItemOverrideList getOverrides()
     {
         return this.itemOverrideList;
@@ -88,8 +73,8 @@
     @SideOnly(Side.CLIENT)
     public static class Builder
         {
-            private final List<BakedQuad> builderGeneralQuads = Lists.newArrayList();
-            private final Map<EnumFacing, List<BakedQuad>> builderFaceQuads = Maps.newEnumMap(EnumFacing.class);
+            private final List<BakedQuad> builderGeneralQuads;
+            private final Map<EnumFacing, List<BakedQuad>> builderFaceQuads;
             private final ItemOverrideList builderItemOverrideList;
             private final boolean builderAmbientOcclusion;
             private TextureAtlasSprite builderTexture;
@@ -103,7 +88,7 @@
 
             public Builder(IBlockState state, IBakedModel model, TextureAtlasSprite texture, BlockPos pos)
             {
-                this(model.isAmbientOcclusion(), model.isGui3d(), model.getItemCameraTransforms(), model.getOverrides());
+                this(model.isAmbientOcclusion(state), model.isGui3d(), model.getItemCameraTransforms(), model.getOverrides());
                 this.builderTexture = model.getParticleTexture();
                 long i = MathHelper.getPositionRandom(pos);
 
@@ -117,6 +102,9 @@
 
             private Builder(boolean ambientOcclusion, boolean gui3d, ItemCameraTransforms transforms, ItemOverrideList overrides)
             {
+                this.builderGeneralQuads = Lists.<BakedQuad>newArrayList();
+                this.builderFaceQuads = Maps.newEnumMap(EnumFacing.class);
+
                 for (EnumFacing enumfacing : EnumFacing.values())
                 {
                     this.builderFaceQuads.put(enumfacing, Lists.newArrayList());
@@ -138,7 +126,7 @@
 
             private void addGeneralQuads(IBlockState p_188645_1_, IBakedModel p_188645_2_, TextureAtlasSprite p_188645_3_, long p_188645_4_)
             {
-                for (BakedQuad bakedquad : p_188645_2_.getQuads(p_188645_1_, null, p_188645_4_))
+                for (BakedQuad bakedquad : p_188645_2_.getQuads(p_188645_1_, (EnumFacing)null, p_188645_4_))
                 {
                     this.addGeneralQuad(new BakedQuadRetextured(bakedquad, p_188645_3_));
                 }
@@ -146,7 +134,7 @@
 
             public SimpleBakedModel.Builder addFaceQuad(EnumFacing facing, BakedQuad quad)
             {
-                this.builderFaceQuads.get(facing).add(quad);
+                (this.builderFaceQuads.get(facing)).add(quad);
                 return this;
             }
 
@@ -170,15 +158,7 @@
                 }
                 else
                 {
-                    return new SimpleBakedModel(
-                               this.builderGeneralQuads,
-                               this.builderFaceQuads,
-                               this.builderAmbientOcclusion,
-                               this.builderGui3d,
-                               this.builderTexture,
-                               this.builderCameraTransforms,
-                               this.builderItemOverrideList
-                           );
+                    return new SimpleBakedModel(this.builderGeneralQuads, this.builderFaceQuads, this.builderAmbientOcclusion, this.builderGui3d, this.builderTexture, this.builderCameraTransforms, this.builderItemOverrideList);
                 }
             }
         }
