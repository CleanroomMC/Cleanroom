--- before/net/minecraft/client/renderer/block/model/BlockPart.java
+++ after/net/minecraft/client/renderer/block/model/BlockPart.java
@@ -17,7 +17,7 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
-import org.lwjgl.util.vector.Vector3f;
+import org.lwjglx.util.vector.Vector3f;
 
 @SideOnly(Side.CLIENT)
 public class BlockPart
@@ -29,14 +29,14 @@
     public final boolean field_178238_e;
 
     public BlockPart(
-        Vector3f p_i46231_1_, Vector3f p_i46231_2_, Map<EnumFacing, BlockPartFace> p_i46231_3_, @Nullable BlockPartRotation p_i46231_4_, boolean p_i46231_5_
+        Vector3f positionFromIn, Vector3f positionToIn, Map<EnumFacing, BlockPartFace> mapFacesIn, @Nullable BlockPartRotation partRotationIn, boolean shadeIn
     )
     {
-        this.field_178241_a = p_i46231_1_;
-        this.field_178239_b = p_i46231_2_;
-        this.field_178240_c = p_i46231_3_;
-        this.field_178237_d = p_i46231_4_;
-        this.field_178238_e = p_i46231_5_;
+        this.field_178241_a = positionFromIn;
+        this.field_178239_b = positionToIn;
+        this.field_178240_c = mapFacesIn;
+        this.field_178237_d = partRotationIn;
+        this.field_178238_e = shadeIn;
         this.func_178235_a();
     }
 
@@ -75,8 +75,8 @@
             public BlockPart deserialize(JsonElement p_deserialize_1_, Type p_deserialize_2_, JsonDeserializationContext p_deserialize_3_) throws JsonParseException
             {
                 JsonObject jsonobject = p_deserialize_1_.getAsJsonObject();
-                Vector3f vector3f = this.func_178249_e(jsonobject);
-                Vector3f vector3f1 = this.func_178247_d(jsonobject);
+                Vector3f vector3f = this.parsePositionFrom(jsonobject);
+                Vector3f vector3f1 = this.parsePositionTo(jsonobject);
                 BlockPartRotation blockpartrotation = this.func_178256_a(jsonobject);
                 Map<EnumFacing, BlockPartFace> map = this.func_178250_a(p_deserialize_3_, jsonobject);
 
@@ -99,7 +99,7 @@
                 if (p_178256_1_.has("rotation"))
                 {
                     JsonObject jsonobject = JsonUtils.func_152754_s(p_178256_1_, "rotation");
-                    Vector3f vector3f = this.func_178251_a(jsonobject, "origin");
+                    Vector3f vector3f = this.parsePosition(jsonobject, "origin");
                     vector3f.scale(0.0625F);
                     EnumFacing.Axis enumfacing$axis = this.func_178252_c(jsonobject);
                     float f = this.func_178255_b(jsonobject);
@@ -181,9 +181,9 @@
                 }
             }
 
-            private Vector3f func_178247_d(JsonObject p_178247_1_)
+            private Vector3f parsePositionTo(JsonObject object)
             {
-                Vector3f vector3f = this.func_178251_a(p_178247_1_, "to");
+                Vector3f vector3f = this.parsePosition(object, "to");
 
                 if (!(vector3f.x < -16.0F)
                         && !(vector3f.y < -16.0F)
@@ -200,9 +200,9 @@
                 }
             }
 
-            private Vector3f func_178249_e(JsonObject p_178249_1_)
+            private Vector3f parsePositionFrom(JsonObject object)
             {
-                Vector3f vector3f = this.func_178251_a(p_178249_1_, "from");
+                Vector3f vector3f = this.parsePosition(object, "from");
 
                 if (!(vector3f.x < -16.0F)
                         && !(vector3f.y < -16.0F)
@@ -219,13 +219,13 @@
                 }
             }
 
-            private Vector3f func_178251_a(JsonObject p_178251_1_, String p_178251_2_)
+            private Vector3f parsePosition(JsonObject object, String memberName)
             {
-                JsonArray jsonarray = JsonUtils.func_151214_t(p_178251_1_, p_178251_2_);
+                JsonArray jsonarray = JsonUtils.func_151214_t(object, memberName);
 
                 if (jsonarray.size() != 3)
                 {
-                    throw new JsonParseException("Expected 3 " + p_178251_2_ + " values, found: " + jsonarray.size());
+                    throw new JsonParseException("Expected 3 " + memberName + " values, found: " + jsonarray.size());
                 }
                 else
                 {
@@ -233,7 +233,7 @@
 
                     for (int i = 0; i < afloat.length; ++i)
                     {
-                        afloat[i] = JsonUtils.func_151220_d(jsonarray.get(i), p_178251_2_ + "[" + i + "]");
+                        afloat[i] = JsonUtils.func_151220_d(jsonarray.get(i), memberName + "[" + i + "]");
                     }
 
                     return new Vector3f(afloat[0], afloat[1], afloat[2]);
