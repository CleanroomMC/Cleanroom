--- before/net/minecraft/client/renderer/block/model/ItemTransformVec3f.java
+++ after/net/minecraft/client/renderer/block/model/ItemTransformVec3f.java
@@ -13,9 +13,14 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.lwjgl.util.vector.Vector3f;
 
+/*
+ * @deprecated use {@link net.minecraftforge.client.model.IModelState} and {@link net.minecraftforge.client.model.TRSRTransformation}
+ */
 @SideOnly(Side.CLIENT)
-public class ItemTransformVec3f
+@Deprecated
+public class ItemTransformVec3f implements net.minecraftforge.common.model.IModelState
 {
+    public java.util.Optional<net.minecraftforge.common.model.TRSRTransformation> apply(java.util.Optional<? extends net.minecraftforge.common.model.IModelPart> part) { return net.minecraftforge.client.ForgeHooksClient.applyTransform(this, part); }
     public static final ItemTransformVec3f DEFAULT = new ItemTransformVec3f(new Vector3f(), new Vector3f(), new Vector3f(1.0F, 1.0F, 1.0F));
     public final Vector3f rotation;
     public final Vector3f translation;
@@ -28,7 +33,6 @@
         this.scale = new Vector3f(scale);
     }
 
-    @Override
     public boolean equals(Object p_equals_1_)
     {
         if (this == p_equals_1_)
@@ -42,18 +46,16 @@
         else
         {
             ItemTransformVec3f itemtransformvec3f = (ItemTransformVec3f)p_equals_1_;
-            return this.rotation.equals(itemtransformvec3f.rotation)
-                   && this.scale.equals(itemtransformvec3f.scale)
-                   && this.translation.equals(itemtransformvec3f.translation);
+            return this.rotation.equals(itemtransformvec3f.rotation) && this.scale.equals(itemtransformvec3f.scale) && this.translation.equals(itemtransformvec3f.translation);
         }
     }
 
-    @Override
     public int hashCode()
     {
         int i = this.rotation.hashCode();
         i = 31 * i + this.translation.hashCode();
-        return 31 * i + this.scale.hashCode();
+        i = 31 * i + this.scale.hashCode();
+        return i;
     }
 
     @SideOnly(Side.CLIENT)
@@ -97,7 +99,7 @@
                     {
                         float[] afloat = new float[3];
 
-                        for (int i = 0; i < afloat.length; i++)
+                        for (int i = 0; i < afloat.length; ++i)
                         {
                             afloat[i] = JsonUtils.getFloat(jsonarray.get(i), key + "[" + i + "]");
                         }
