--- before/net/minecraft/client/renderer/block/model/ItemCameraTransforms.java
+++ after/net/minecraft/client/renderer/block/model/ItemCameraTransforms.java
@@ -12,6 +12,9 @@
 import net.minecraftforge.fml.relauncher.SideOnly;
 import org.lwjgl.util.vector.Quaternion;
 
+/*
+ * @deprecated use {@link net.minecraftforge.client.model.IPerspectiveAwareModel} instead
+ */
 @SideOnly(Side.CLIENT)
 public class ItemCameraTransforms
 {
@@ -36,18 +39,10 @@
 
     private ItemCameraTransforms()
     {
-        this(
-            ItemTransformVec3f.DEFAULT,
-            ItemTransformVec3f.DEFAULT,
-            ItemTransformVec3f.DEFAULT,
-            ItemTransformVec3f.DEFAULT,
-            ItemTransformVec3f.DEFAULT,
-            ItemTransformVec3f.DEFAULT,
-            ItemTransformVec3f.DEFAULT,
-            ItemTransformVec3f.DEFAULT
-        );
+        this(ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT, ItemTransformVec3f.DEFAULT);
     }
 
+    @Deprecated
     public ItemCameraTransforms(ItemCameraTransforms transforms)
     {
         this.thirdperson_left = transforms.thirdperson_left;
@@ -60,16 +55,8 @@
         this.fixed = transforms.fixed;
     }
 
-    public ItemCameraTransforms(
-        ItemTransformVec3f thirdperson_leftIn,
-        ItemTransformVec3f thirdperson_rightIn,
-        ItemTransformVec3f firstperson_leftIn,
-        ItemTransformVec3f firstperson_rightIn,
-        ItemTransformVec3f headIn,
-        ItemTransformVec3f guiIn,
-        ItemTransformVec3f groundIn,
-        ItemTransformVec3f fixedIn
-    )
+    @Deprecated
+    public ItemCameraTransforms(ItemTransformVec3f thirdperson_leftIn, ItemTransformVec3f thirdperson_rightIn, ItemTransformVec3f firstperson_leftIn, ItemTransformVec3f firstperson_rightIn, ItemTransformVec3f headIn, ItemTransformVec3f guiIn, ItemTransformVec3f groundIn, ItemTransformVec3f fixedIn)
     {
         this.thirdperson_left = thirdperson_leftIn;
         this.thirdperson_right = thirdperson_rightIn;
@@ -91,11 +78,7 @@
         if (vec != ItemTransformVec3f.DEFAULT)
         {
             int i = leftHand ? -1 : 1;
-            GlStateManager.translate(
-                (float)i * (offsetTranslateX + vec.translation.x),
-                offsetTranslateY + vec.translation.y,
-                offsetTranslateZ + vec.translation.z
-            );
+            GlStateManager.translate((float)i * (offsetTranslateX + vec.translation.x), offsetTranslateY + vec.translation.y, offsetTranslateZ + vec.translation.z);
             float f = offsetRotationX + vec.rotation.x;
             float f1 = offsetRotationY + vec.rotation.y;
             float f2 = offsetRotationZ + vec.rotation.z;
@@ -107,17 +90,15 @@
             }
 
             GlStateManager.rotate(makeQuaternion(f, f1, f2));
-            GlStateManager.scale(
-                offsetScaleX + vec.scale.x, offsetScaleY + vec.scale.y, offsetScaleZ + vec.scale.z
-            );
+            GlStateManager.scale(offsetScaleX + vec.scale.x, offsetScaleY + vec.scale.y, offsetScaleZ + vec.scale.z);
         }
     }
 
     private static Quaternion makeQuaternion(float p_188035_0_, float p_188035_1_, float p_188035_2_)
     {
-        float f = p_188035_0_ * (float)(Math.PI / 180.0);
-        float f1 = p_188035_1_ * (float)(Math.PI / 180.0);
-        float f2 = p_188035_2_ * (float)(Math.PI / 180.0);
+        float f = p_188035_0_ * 0.017453292F;
+        float f1 = p_188035_1_ * 0.017453292F;
+        float f2 = p_188035_2_ * 0.017453292F;
         float f3 = MathHelper.sin(0.5F * f);
         float f4 = MathHelper.cos(0.5F * f);
         float f5 = MathHelper.sin(0.5F * f1);
@@ -127,6 +108,7 @@
         return new Quaternion(f3 * f6 * f8 + f4 * f5 * f7, f4 * f5 * f8 - f3 * f6 * f7, f3 * f5 * f8 + f4 * f6 * f7, f4 * f6 * f8 - f3 * f5 * f7);
     }
 
+    @Deprecated
     public ItemTransformVec3f getTransform(ItemCameraTransforms.TransformType type)
     {
         switch (type)
@@ -183,28 +165,17 @@
                 ItemTransformVec3f itemtransformvec3f5 = this.getTransform(p_deserialize_3_, jsonobject, "gui");
                 ItemTransformVec3f itemtransformvec3f6 = this.getTransform(p_deserialize_3_, jsonobject, "ground");
                 ItemTransformVec3f itemtransformvec3f7 = this.getTransform(p_deserialize_3_, jsonobject, "fixed");
-                return new ItemCameraTransforms(
-                           itemtransformvec3f1,
-                           itemtransformvec3f,
-                           itemtransformvec3f3,
-                           itemtransformvec3f2,
-                           itemtransformvec3f4,
-                           itemtransformvec3f5,
-                           itemtransformvec3f6,
-                           itemtransformvec3f7
-                       );
+                return new ItemCameraTransforms(itemtransformvec3f1, itemtransformvec3f, itemtransformvec3f3, itemtransformvec3f2, itemtransformvec3f4, itemtransformvec3f5, itemtransformvec3f6, itemtransformvec3f7);
             }
 
             private ItemTransformVec3f getTransform(JsonDeserializationContext p_181683_1_, JsonObject p_181683_2_, String p_181683_3_)
             {
-                return p_181683_2_.has(p_181683_3_)
-                       ? p_181683_1_.deserialize(p_181683_2_.get(p_181683_3_), ItemTransformVec3f.class)
-                       : ItemTransformVec3f.DEFAULT;
+                return p_181683_2_.has(p_181683_3_) ? (ItemTransformVec3f)p_181683_1_.deserialize(p_181683_2_.get(p_181683_3_), ItemTransformVec3f.class) : ItemTransformVec3f.DEFAULT;
             }
         }
 
     @SideOnly(Side.CLIENT)
-    public static enum TransformType
+    public static enum TransformType implements net.minecraftforge.common.model.IModelPart
     {
         NONE,
         THIRD_PERSON_LEFT_HAND,
