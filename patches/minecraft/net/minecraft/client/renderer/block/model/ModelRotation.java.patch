--- before/net/minecraft/client/renderer/block/model/ModelRotation.java
+++ after/net/minecraft/client/renderer/block/model/ModelRotation.java
@@ -6,11 +6,11 @@
 import net.minecraft.util.math.MathHelper;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
-import org.lwjgl.util.vector.Matrix4f;
-import org.lwjgl.util.vector.Vector3f;
+import org.lwjglx.util.vector.Matrix4f;
+import org.lwjglx.util.vector.Vector3f;
 
 @SideOnly(Side.CLIENT)
-public enum ModelRotation
+public enum ModelRotation implements net.minecraftforge.common.model.IModelState, net.minecraftforge.common.model.ITransformation
 {
     X0_Y0(0, 0),
     X0_Y90(0, 90),
@@ -55,7 +55,7 @@
         Matrix4f.mul(matrix4f1, matrix4f, this.field_177544_s);
     }
 
-    public Matrix4f func_177525_a()
+    public Matrix4f matrix()
     {
         return this.field_177544_s;
     }
@@ -116,4 +116,9 @@
             field_177546_q.put(Integer.valueOf(modelrotation.field_177545_r), modelrotation);
         }
     }
+
+    public java.util.Optional<net.minecraftforge.common.model.TRSRTransformation> apply(java.util.Optional<? extends net.minecraftforge.common.model.IModelPart> part) { return net.minecraftforge.client.ForgeHooksClient.applyTransform(this, part); }
+    public javax.vecmath.Matrix4f getMatrix() { return net.minecraftforge.common.model.TRSRTransformation.from(this).getMatrix(); }
+    public EnumFacing rotate(EnumFacing facing) { return func_177523_a(facing); }
+    public int rotate(EnumFacing facing, int vertexIndex) { return func_177520_a(facing, vertexIndex); }
 }
