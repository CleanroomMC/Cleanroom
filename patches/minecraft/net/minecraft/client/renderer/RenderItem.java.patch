--- before/net/minecraft/client/renderer/RenderItem.java
+++ after/net/minecraft/client/renderer/RenderItem.java
@@ -70,7 +70,7 @@
     public RenderItem(TextureManager p_i46552_1_, ModelManager p_i46552_2_, ItemColors p_i46552_3_)
     {
         this.textureManager = p_i46552_1_;
-        this.itemModelMesher = new ItemModelMesher(p_i46552_2_);
+        this.itemModelMesher = new net.minecraftforge.client.ItemModelMesherForge(p_i46552_2_);
         this.registerItems();
         this.itemColors = p_i46552_3_;
     }
@@ -112,6 +112,11 @@
 
     private void renderModel(IBakedModel model, int color, ItemStack stack)
     {
+        if (net.minecraftforge.common.ForgeModContainer.allowEmissiveItems)
+        {
+            net.minecraftforge.client.ForgeHooksClient.renderLitItem(this, model, color, stack);
+            return;
+        }
         Tessellator tessellator = Tessellator.getInstance();
         BufferBuilder bufferbuilder = tessellator.getBuffer();
         bufferbuilder.begin(7, DefaultVertexFormats.ITEM);
@@ -136,7 +141,7 @@
             {
                 GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
                 GlStateManager.enableRescaleNormal();
-                TileEntityItemStackRenderer.instance.renderByItem(stack);
+                stack.getItem().getTileEntityItemStackRenderer().renderByItem(stack);
             }
             else
             {
@@ -217,7 +222,7 @@
                 k |= -16777216;
             }
 
-            this.renderQuad(renderer, bakedquad, k);
+            net.minecraftforge.client.model.pipeline.LightUtil.renderQuadColor(renderer, bakedquad, k);
         }
     }
 
@@ -239,19 +244,7 @@
     public IBakedModel getItemModelWithOverrides(ItemStack stack, @Nullable World worldIn, @Nullable EntityLivingBase entitylivingbaseIn)
     {
         IBakedModel ibakedmodel = this.itemModelMesher.getItemModel(stack);
-        Item item = stack.getItem();
-
-        if (item != null && item.hasCustomProperties())
-        {
-            ResourceLocation resourcelocation = ibakedmodel.getOverrides().applyOverride(stack, worldIn, entitylivingbaseIn);
-            return resourcelocation == null
-                   ? ibakedmodel
-                   : this.itemModelMesher.getModelManager().getModel(new ModelResourceLocation(resourcelocation, "inventory"));
-        }
-        else
-        {
-            return ibakedmodel;
-        }
+        return ibakedmodel.getOverrides().handleItemState(ibakedmodel, stack, worldIn, entitylivingbaseIn);
     }
 
     public void renderItem(ItemStack stack, EntityLivingBase entitylivingbaseIn, ItemCameraTransforms.TransformType transform, boolean leftHanded)
@@ -280,13 +273,8 @@
                 GlStateManager.DestFactor.ZERO
             );
             GlStateManager.pushMatrix();
-            ItemCameraTransforms itemcameratransforms = bakedmodel.getItemCameraTransforms();
-            ItemCameraTransforms.applyTransformSide(itemcameratransforms.getTransform(transform), leftHanded);
-
-            if (this.isThereOneNegativeScale(itemcameratransforms.getTransform(transform)))
-            {
-                GlStateManager.cullFace(GlStateManager.CullFace.FRONT);
-            }
+            // TODO: check if negative scale is a thing
+            bakedmodel = net.minecraftforge.client.ForgeHooksClient.handleCameraTransforms(bakedmodel, transform, leftHanded);
 
             this.renderItem(stack, bakedmodel);
             GlStateManager.cullFace(GlStateManager.CullFace.BACK);
@@ -320,7 +308,7 @@
         GlStateManager.blendFunc(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA);
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
         this.setupGuiTransform(x, y, bakedmodel.isGui3d());
-        bakedmodel.getItemCameraTransforms().applyTransform(ItemCameraTransforms.TransformType.GUI);
+        bakedmodel = net.minecraftforge.client.ForgeHooksClient.handleCameraTransforms(bakedmodel, ItemCameraTransforms.TransformType.GUI, false);
         this.renderItem(stack, bakedmodel);
         GlStateManager.disableAlpha();
         GlStateManager.disableRescaleNormal();
@@ -373,6 +361,7 @@
                         return String.valueOf(p_184391_2_.getItem());
                     }
                 });
+                crashreportcategory.addDetail("Registry Name", () -> String.valueOf(p_184391_2_.getItem().getRegistryName()));
                 crashreportcategory.addDetail("Item Aux", new ICrashReportDetail<String>()
                 {
                     public String call() throws Exception
@@ -419,9 +408,12 @@
                 fr.drawStringWithShadow(s, (float)(xPosition + 19 - 2 - fr.getStringWidth(s)), (float)(yPosition + 6 + 3), 16777215);
                 GlStateManager.enableLighting();
                 GlStateManager.enableDepth();
+                // Fixes opaque cooldown overlay a bit lower
+                // TODO: check if enabled blending still screws things up down the line.
+                GlStateManager.enableBlend();
             }
 
-            if (stack.isItemDamaged())
+            if (stack.getItem().showDurabilityBar(stack))
             {
                 GlStateManager.disableLighting();
                 GlStateManager.disableDepth();
@@ -430,11 +422,10 @@
                 GlStateManager.disableBlend();
                 Tessellator tessellator = Tessellator.getInstance();
                 BufferBuilder bufferbuilder = tessellator.getBuffer();
-                float f = (float)stack.getItemDamage();
-                float f1 = (float)stack.getMaxDamage();
-                float f2 = Math.max(0.0F, (f1 - f) / f1);
-                int i = Math.round(13.0F - f * 13.0F / f1);
-                int j = MathHelper.hsvToRGB(f2 / 3.0F, 1.0F, 1.0F);
+                double health = stack.getItem().getDurabilityForDisplay(stack);
+                int rgbfordisplay = stack.getItem().getRGBDurabilityForDisplay(stack);
+                int i = Math.round(13.0F - (float)health * 13.0F);
+                int j = rgbfordisplay;
                 this.draw(bufferbuilder, xPosition + 2, yPosition + 13, 13, 2, 0, 0, 0, 255);
                 this.draw(bufferbuilder, xPosition + 2, yPosition + 13, i, 1, j >> 16 & 0xFF, j >> 8 & 0xFF, j & 0xFF, 255);
                 GlStateManager.enableBlend();
@@ -1141,6 +1132,7 @@
         this.registerBlock(Blocks.STRUCTURE_BLOCK, TileEntityStructure.Mode.LOAD.getModeId(), "structure_block");
         this.registerBlock(Blocks.STRUCTURE_BLOCK, TileEntityStructure.Mode.CORNER.getModeId(), "structure_block");
         this.registerBlock(Blocks.STRUCTURE_BLOCK, TileEntityStructure.Mode.DATA.getModeId(), "structure_block");
+        net.minecraftforge.client.model.ModelLoader.onRegisterItems(this.itemModelMesher);
     }
 
     @Override
