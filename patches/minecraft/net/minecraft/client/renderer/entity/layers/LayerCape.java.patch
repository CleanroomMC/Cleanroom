--- before/net/minecraft/client/renderer/entity/layers/LayerCape.java
+++ after/net/minecraft/client/renderer/entity/layers/LayerCape.java
@@ -21,21 +21,9 @@
         this.playerRenderer = playerRendererIn;
     }
 
-    public void doRenderLayer(
-        AbstractClientPlayer entitylivingbaseIn,
-        float limbSwing,
-        float limbSwingAmount,
-        float partialTicks,
-        float ageInTicks,
-        float netHeadYaw,
-        float headPitch,
-        float scale
-    )
+    public void doRenderLayer(AbstractClientPlayer entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTicks, float ageInTicks, float netHeadYaw, float headPitch, float scale)
     {
-        if (entitylivingbaseIn.hasPlayerInfo()
-                && !entitylivingbaseIn.isInvisible()
-                && entitylivingbaseIn.isWearing(EnumPlayerModelParts.CAPE)
-                && entitylivingbaseIn.getLocationCape() != null)
+        if (entitylivingbaseIn.hasPlayerInfo() && !entitylivingbaseIn.isInvisible() && entitylivingbaseIn.isWearing(EnumPlayerModelParts.CAPE) && entitylivingbaseIn.getLocationCape() != null)
         {
             ItemStack itemstack = entitylivingbaseIn.getItemStackFromSlot(EntityEquipmentSlot.CHEST);
 
@@ -45,18 +33,12 @@
                 this.playerRenderer.bindTexture(entitylivingbaseIn.getLocationCape());
                 GlStateManager.pushMatrix();
                 GlStateManager.translate(0.0F, 0.0F, 0.125F);
-                double d0 = entitylivingbaseIn.prevChasingPosX
-                            + (entitylivingbaseIn.chasingPosX - entitylivingbaseIn.prevChasingPosX) * (double)partialTicks
-                            - (entitylivingbaseIn.prevPosX + (entitylivingbaseIn.posX - entitylivingbaseIn.prevPosX) * (double)partialTicks);
-                double d1 = entitylivingbaseIn.prevChasingPosY
-                            + (entitylivingbaseIn.chasingPosY - entitylivingbaseIn.prevChasingPosY) * (double)partialTicks
-                            - (entitylivingbaseIn.prevPosY + (entitylivingbaseIn.posY - entitylivingbaseIn.prevPosY) * (double)partialTicks);
-                double d2 = entitylivingbaseIn.prevChasingPosZ
-                            + (entitylivingbaseIn.chasingPosZ - entitylivingbaseIn.prevChasingPosZ) * (double)partialTicks
-                            - (entitylivingbaseIn.prevPosZ + (entitylivingbaseIn.posZ - entitylivingbaseIn.prevPosZ) * (double)partialTicks);
+                double d0 = entitylivingbaseIn.prevChasingPosX + (entitylivingbaseIn.chasingPosX - entitylivingbaseIn.prevChasingPosX) * (double)partialTicks - (entitylivingbaseIn.prevPosX + (entitylivingbaseIn.posX - entitylivingbaseIn.prevPosX) * (double)partialTicks);
+                double d1 = entitylivingbaseIn.prevChasingPosY + (entitylivingbaseIn.chasingPosY - entitylivingbaseIn.prevChasingPosY) * (double)partialTicks - (entitylivingbaseIn.prevPosY + (entitylivingbaseIn.posY - entitylivingbaseIn.prevPosY) * (double)partialTicks);
+                double d2 = entitylivingbaseIn.prevChasingPosZ + (entitylivingbaseIn.chasingPosZ - entitylivingbaseIn.prevChasingPosZ) * (double)partialTicks - (entitylivingbaseIn.prevPosZ + (entitylivingbaseIn.posZ - entitylivingbaseIn.prevPosZ) * (double)partialTicks);
                 float f = entitylivingbaseIn.prevRenderYawOffset + (entitylivingbaseIn.renderYawOffset - entitylivingbaseIn.prevRenderYawOffset) * partialTicks;
-                double d3 = (double)MathHelper.sin(f * (float)(Math.PI / 180.0));
-                double d4 = (double)(-MathHelper.cos(f * (float)(Math.PI / 180.0)));
+                double d3 = (double)MathHelper.sin(f * 0.017453292F);
+                double d4 = (double)(-MathHelper.cos(f * 0.017453292F));
                 float f1 = (float)d1 * 10.0F;
                 f1 = MathHelper.clamp(f1, -6.0F, 32.0F);
                 float f2 = (float)(d0 * d3 + d2 * d4) * 100.0F;
@@ -68,9 +50,7 @@
                 }
 
                 float f4 = entitylivingbaseIn.prevCameraYaw + (entitylivingbaseIn.cameraYaw - entitylivingbaseIn.prevCameraYaw) * partialTicks;
-                f1 += MathHelper.sin((entitylivingbaseIn.prevDistanceWalkedModified + (entitylivingbaseIn.distanceWalkedModified - entitylivingbaseIn.prevDistanceWalkedModified) * partialTicks) * 6.0F)
-                      * 32.0F
-                      * f4;
+                f1 = f1 + MathHelper.sin((entitylivingbaseIn.prevDistanceWalkedModified + (entitylivingbaseIn.distanceWalkedModified - entitylivingbaseIn.prevDistanceWalkedModified) * partialTicks) * 6.0F) * 32.0F * f4;
 
                 if (entitylivingbaseIn.isSneaking())
                 {
@@ -87,7 +67,6 @@
         }
     }
 
-    @Override
     public boolean shouldCombineTextures()
     {
         return false;
