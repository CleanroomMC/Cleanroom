--- before/net/minecraft/client/renderer/entity/layers/LayerArrow.java
+++ after/net/minecraft/client/renderer/entity/layers/LayerArrow.java
@@ -23,17 +23,7 @@
         this.renderer = rendererIn;
     }
 
-    @Override
-    public void doRenderLayer(
-        EntityLivingBase entitylivingbaseIn,
-        float limbSwing,
-        float limbSwingAmount,
-        float partialTicks,
-        float ageInTicks,
-        float netHeadYaw,
-        float headPitch,
-        float scale
-    )
+    public void doRenderLayer(EntityLivingBase entitylivingbaseIn, float limbSwing, float limbSwingAmount, float partialTicks, float ageInTicks, float netHeadYaw, float headPitch, float scale)
     {
         int i = entitylivingbaseIn.getArrowCountInEntity();
 
@@ -43,7 +33,7 @@
             Random random = new Random((long)entitylivingbaseIn.getEntityId());
             RenderHelper.disableStandardItemLighting();
 
-            for (int j = 0; j < i; j++)
+            for (int j = 0; j < i; ++j)
             {
                 GlStateManager.pushMatrix();
                 ModelRenderer modelrenderer = this.renderer.getMainModel().getRandomModelBox(random);
@@ -59,18 +49,18 @@
                 f = f * 2.0F - 1.0F;
                 f1 = f1 * 2.0F - 1.0F;
                 f2 = f2 * 2.0F - 1.0F;
-                f *= -1.0F;
-                f1 *= -1.0F;
-                f2 *= -1.0F;
+                f = f * -1.0F;
+                f1 = f1 * -1.0F;
+                f2 = f2 * -1.0F;
                 float f6 = MathHelper.sqrt(f * f + f2 * f2);
-                entity.rotationYaw = (float)(Math.atan2((double)f, (double)f2) * 180.0F / (float)Math.PI);
-                entity.rotationPitch = (float)(Math.atan2((double)f1, (double)f6) * 180.0F / (float)Math.PI);
+                entity.rotationYaw = (float)(Math.atan2((double)f, (double)f2) * (180D / Math.PI));
+                entity.rotationPitch = (float)(Math.atan2((double)f1, (double)f6) * (180D / Math.PI));
                 entity.prevRotationYaw = entity.rotationYaw;
                 entity.prevRotationPitch = entity.rotationPitch;
-                double d0 = 0.0;
-                double d1 = 0.0;
-                double d2 = 0.0;
-                this.renderer.getRenderManager().renderEntity(entity, 0.0, 0.0, 0.0, 0.0F, partialTicks, false);
+                double d0 = 0.0D;
+                double d1 = 0.0D;
+                double d2 = 0.0D;
+                this.renderer.getRenderManager().renderEntity(entity, 0.0D, 0.0D, 0.0D, 0.0F, partialTicks, false);
                 GlStateManager.popMatrix();
             }
 
@@ -78,7 +68,6 @@
         }
     }
 
-    @Override
     public boolean shouldCombineTextures()
     {
         return false;
