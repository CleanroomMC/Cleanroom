--- before/net/minecraft/client/renderer/texture/TextureUtil.java
+++ after/net/minecraft/client/renderer/texture/TextureUtil.java
@@ -1,9 +1,9 @@
 package net.minecraft.client.renderer.texture;
 
 import java.awt.image.BufferedImage;
+import java.io.Closeable;
 import java.io.IOException;
 import java.io.InputStream;
-import java.nio.Buffer;
 import java.nio.IntBuffer;
 import javax.imageio.ImageIO;
 import net.minecraft.client.Minecraft;
@@ -30,7 +30,7 @@
 
     private static float func_188543_d(int p_188543_0_)
     {
-        return field_188544_e[p_188543_0_ & 0xFF];
+        return field_188544_e[p_188543_0_ & 255];
     }
 
     public static int func_110996_a()
@@ -63,7 +63,7 @@
         {
             boolean flag = false;
 
-            for (int i = 0; i < p_147949_2_.length; ++i)
+            for (int i = 0; i < p_147949_2_[0].length; ++i)
             {
                 if (p_147949_2_[0][i] >> 24 == 0)
                 {
@@ -83,6 +83,7 @@
                     int[] aint1 = aint[l1 - 1];
                     int[] aint2 = new int[aint1.length >> 2];
                     int j = p_147949_1_ >> l1;
+                    if (j > 0) { // FORGE: forcing higher mipmap levels on odd textures needs this check
                     int k = aint2.length / j;
                     int l = j << 1;
 
@@ -94,6 +95,7 @@
                             aint2[i1 + j1 * j] = func_147943_a(aint1[k1 + 0], aint1[k1 + 1], aint1[k1 + 0 + l], aint1[k1 + 1 + l], flag);
                         }
                     }
+                    } // end if (j > 0)
 
                     aint[l1] = aint2;
                 }
@@ -127,14 +129,14 @@
                 }
             }
 
-            f /= 4.0F;
-            f1 /= 4.0F;
-            f2 /= 4.0F;
-            f3 /= 4.0F;
-            int i2 = (int)(Math.pow((double)f, 0.45454545454545453) * 255.0);
-            int j1 = (int)(Math.pow((double)f1, 0.45454545454545453) * 255.0);
-            int k1 = (int)(Math.pow((double)f2, 0.45454545454545453) * 255.0);
-            int l1 = (int)(Math.pow((double)f3, 0.45454545454545453) * 255.0);
+            f = f / 4.0F;
+            f1 = f1 / 4.0F;
+            f2 = f2 / 4.0F;
+            f3 = f3 / 4.0F;
+            int i2 = (int)(Math.pow((double)f, 0.45454545454545453D) * 255.0D);
+            int j1 = (int)(Math.pow((double)f1, 0.45454545454545453D) * 255.0D);
+            int k1 = (int)(Math.pow((double)f2, 0.45454545454545453D) * 255.0D);
+            int l1 = (int)(Math.pow((double)f3, 0.45454545454545453D) * 255.0D);
 
             if (i2 < 96)
             {
@@ -159,32 +161,21 @@
         float f1 = func_188543_d(p_147944_1_ >> p_147944_4_);
         float f2 = func_188543_d(p_147944_2_ >> p_147944_4_);
         float f3 = func_188543_d(p_147944_3_ >> p_147944_4_);
-        float f4 = (float)((double)((float)Math.pow((double)(f + f1 + f2 + f3) * 0.25, 0.45454545454545453)));
-        return (int)((double)f4 * 255.0);
+        float f4 = (float)((double)((float)Math.pow((double)(f + f1 + f2 + f3) * 0.25D, 0.45454545454545453D)));
+        return (int)((double)f4 * 255.0D);
     }
 
-    public static void func_147955_a(
-            int[][] p_147955_0_, int p_147955_1_, int p_147955_2_, int p_147955_3_, int p_147955_4_, boolean p_147955_5_, boolean p_147955_6_
-        )
+    public static void func_147955_a(int[][] p_147955_0_, int p_147955_1_, int p_147955_2_, int p_147955_3_, int p_147955_4_, boolean p_147955_5_, boolean p_147955_6_)
     {
         for (int i = 0; i < p_147955_0_.length; ++i)
         {
             int[] aint = p_147955_0_[i];
+            if ((p_147955_1_ >> i <= 0) || (p_147955_2_ >> i <= 0)) break;
             func_147947_a(i, aint, p_147955_1_ >> i, p_147955_2_ >> i, p_147955_3_ >> i, p_147955_4_ >> i, p_147955_5_, p_147955_6_, p_147955_0_.length > 1);
         }
     }
 
-    private static void func_147947_a(
-            int p_147947_0_,
-            int[] p_147947_1_,
-            int p_147947_2_,
-            int p_147947_3_,
-            int p_147947_4_,
-            int p_147947_5_,
-            boolean p_147947_6_,
-            boolean p_147947_7_,
-            boolean p_147947_8_
-        )
+    private static void func_147947_a(int p_147947_0_, int[] p_147947_1_, int p_147947_2_, int p_147947_3_, int p_147947_4_, int p_147947_5_, boolean p_147947_6_, boolean p_147947_7_, boolean p_147947_8_)
     {
         int i = 4194304 / p_147947_2_;
         func_147954_b(p_147947_6_, p_147947_8_);
@@ -214,9 +205,11 @@
 
     public static void func_180600_a(int p_180600_0_, int p_180600_1_, int p_180600_2_, int p_180600_3_)
     {
+        synchronized (net.minecraftforge.fml.client.SplashProgress.class)
+        {
         func_147942_a(p_180600_0_);
         func_94277_a(p_180600_0_);
-
+        }
         if (p_180600_1_ >= 0)
         {
             GlStateManager.func_187421_b(3553, 33085, p_180600_1_);
@@ -227,7 +220,7 @@
 
         for (int i = 0; i <= p_180600_1_; ++i)
         {
-            GlStateManager.func_187419_a(3553, i, 6408, p_180600_2_ >> i, p_180600_3_ >> i, 0, 32993, 33639, null);
+            GlStateManager.func_187419_a(3553, i, 6408, p_180600_2_ >> i, p_180600_3_ >> i, 0, 32993, 33639, (IntBuffer)null);
         }
     }
 
@@ -305,9 +298,9 @@
             aint = func_110985_a(p_110994_0_);
         }
 
-        ((Buffer)field_111000_c).clear();
+        field_111000_c.clear();
         field_111000_c.put(aint, p_110994_1_, p_110994_2_);
-        ((Buffer)field_111000_c).position(0).limit(p_110994_2_);
+        field_111000_c.position(0).limit(p_110994_2_);
     }
 
     static void func_94277_a(int p_94277_0_)
@@ -332,7 +325,7 @@
         }
         finally
         {
-            IOUtils.closeQuietly(iresource);
+            IOUtils.closeQuietly((Closeable)iresource);
         }
 
         return aint1;
@@ -368,10 +361,10 @@
 
     public static int func_177054_c(int p_177054_0_)
     {
-        int i = p_177054_0_ >> 24 & 0xFF;
-        int j = p_177054_0_ >> 16 & 0xFF;
-        int k = p_177054_0_ >> 8 & 0xFF;
-        int l = p_177054_0_ & 0xFF;
+        int i = p_177054_0_ >> 24 & 255;
+        int j = p_177054_0_ >> 16 & 255;
+        int k = p_177054_0_ >> 8 & 255;
+        int l = p_177054_0_ & 255;
         int i1 = (j * 30 + k * 59 + l * 11) / 100;
         int j1 = (j * 30 + k * 70) / 100;
         int k1 = (j * 30 + l * 70) / 100;
@@ -410,7 +403,7 @@
 
         for (int i1 = 0; i1 < field_188544_e.length; ++i1)
         {
-            field_188544_e[i1] = (float)Math.pow((double)((float)i1 / 255.0F), 2.2);
+            field_188544_e[i1] = (float)Math.pow((double)((float)i1 / 255.0F), 2.2D);
         }
 
         field_147957_g = new int[4];
