--- before/net/minecraft/client/renderer/texture/TextureManager.java
+++ after/net/minecraft/client/renderer/texture/TextureManager.java
@@ -24,9 +24,9 @@
 {
     private static final Logger field_147646_a = LogManager.getLogger();
     public static final ResourceLocation field_194008_a = new ResourceLocation("");
-    private final Map<ResourceLocation, ITextureObject> field_110585_a = Maps.newHashMap();
-    private final List<ITickable> field_110583_b = Lists.newArrayList();
-    private final Map<String, Integer> field_110584_c = Maps.newHashMap();
+    private final Map<ResourceLocation, ITextureObject> field_110585_a = Maps.<ResourceLocation, ITextureObject>newHashMap();
+    private final List<ITickable> field_110583_b = Lists.<ITickable>newArrayList();
+    private final Map<String, Integer> field_110584_c = Maps.<String, Integer>newHashMap();
     private final IResourceManager field_110582_d;
 
     public TextureManager(IResourceManager p_i1284_1_)
@@ -81,7 +81,7 @@
         }
         catch (Throwable throwable)
         {
-            final ITextureObject p_110579_2_f = p_110579_2_;
+            final ITextureObject textureObjf = p_110579_2_;
             CrashReport crashreport = CrashReport.func_85055_a(throwable, "Registering texture");
             CrashReportCategory crashreportcategory = crashreport.func_85058_a("Resource location being registered");
             crashreportcategory.func_71507_a("Resource location", p_110579_1_);
@@ -89,7 +89,7 @@
             {
                 public String call() throws Exception
                 {
-                    return p_110579_2_f.getClass().getName();
+                    return textureObjf.getClass().getName();
                 }
             });
             throw new ReportedException(crashreport);
@@ -110,11 +110,11 @@
 
         if (integer == null)
         {
-            integer = 1;
+            integer = Integer.valueOf(1);
         }
         else
         {
-            integer = integer + 1;
+            integer = integer.intValue() + 1;
         }
 
         this.field_110584_c.put(p_110578_1_, integer);
@@ -123,7 +123,6 @@
         return resourcelocation;
     }
 
-    @Override
     public void func_110550_d()
     {
         for (ITickable itickable : this.field_110583_b)
@@ -138,18 +137,20 @@
 
         if (itextureobject != null)
         {
+            this.field_110585_a.remove(p_147645_1_); // Forge: fix MC-98707
             TextureUtil.func_147942_a(itextureobject.func_110552_b());
         }
     }
 
-    @Override
     public void func_110549_a(IResourceManager p_110549_1_)
     {
+        net.minecraftforge.fml.common.ProgressManager.ProgressBar bar = net.minecraftforge.fml.common.ProgressManager.push("Reloading Texture Manager", this.field_110585_a.keySet().size(), true);
         Iterator<Entry<ResourceLocation, ITextureObject>> iterator = this.field_110585_a.entrySet().iterator();
 
         while (iterator.hasNext())
         {
-            Entry<ResourceLocation, ITextureObject> entry = iterator.next();
+            Entry<ResourceLocation, ITextureObject> entry = (Entry)iterator.next();
+            bar.step(entry.getKey().toString());
             ITextureObject itextureobject = entry.getValue();
 
             if (itextureobject == TextureUtil.field_111001_a)
@@ -161,5 +162,6 @@
                 this.func_110579_a(entry.getKey(), itextureobject);
             }
         }
+        net.minecraftforge.fml.common.ProgressManager.pop(bar);
     }
 }
