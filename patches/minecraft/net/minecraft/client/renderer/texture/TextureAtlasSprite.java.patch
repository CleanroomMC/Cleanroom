--- before/net/minecraft/client/renderer/texture/TextureAtlasSprite.java
+++ after/net/minecraft/client/renderer/texture/TextureAtlasSprite.java
@@ -421,4 +421,39 @@
                + this.maxV
                + '}';
     }
+
+    /*===================================== FORGE START =====================================*/
+    /**
+     * The result of this function determines is the below 'load' function is called, and the
+     * default vanilla loading code is bypassed completely.
+     * @param manager Main resource manager
+     * @param location File resource location
+     * @return True to use your own custom load code and bypass vanilla loading.
+     */
+    public boolean hasCustomLoader(net.minecraft.client.resources.IResourceManager manager, net.minecraft.util.ResourceLocation location)
+    {
+        return false;
+    }
+
+    /**
+     * Load the specified resource as this sprite's data.
+     * Returning false from this function will prevent this icon from being stitched onto the master texture.
+     * @param manager Main resource manager
+     * @param location File resource location
+     * @param textureGetter accessor for dependencies. All of them will be loaded before this one
+     * @return False to prevent this Icon from being stitched
+     */
+    public boolean load(net.minecraft.client.resources.IResourceManager manager, net.minecraft.util.ResourceLocation location, java.util.function.Function<ResourceLocation, TextureAtlasSprite> textureGetter)
+    {
+        return true;
+    }
+
+    /**
+     * @return all textures that should be loaded before this texture.
+     */
+    public java.util.Collection<ResourceLocation> getDependencies() {
+        return com.google.common.collect.ImmutableList.of();
+    }
+
+    /*===================================== FORGE END ======================================*/
 }
