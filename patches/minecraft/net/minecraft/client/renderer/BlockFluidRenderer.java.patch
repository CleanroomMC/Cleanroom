--- before/net/minecraft/client/renderer/BlockFluidRenderer.java
+++ after/net/minecraft/client/renderer/BlockFluidRenderer.java
@@ -46,18 +46,12 @@
         boolean flag = blockStateIn.getMaterial() == Material.LAVA;
         TextureAtlasSprite[] atextureatlassprite = flag ? this.atlasSpritesLava : this.atlasSpritesWater;
         int i = this.blockColors.colorMultiplier(blockStateIn, blockAccess, blockPosIn, 0);
-        float f = (float)(i >> 16 & 0xFF) / 255.0F;
-        float f1 = (float)(i >> 8 & 0xFF) / 255.0F;
-        float f2 = (float)(i & 0xFF) / 255.0F;
+        float f = (float)(i >> 16 & 255) / 255.0F;
+        float f1 = (float)(i >> 8 & 255) / 255.0F;
+        float f2 = (float)(i & 255) / 255.0F;
         boolean flag1 = blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.UP);
         boolean flag2 = blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.DOWN);
-        boolean[] aboolean = new boolean[]
-        {
-            blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.NORTH),
-            blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.SOUTH),
-            blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.WEST),
-            blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.EAST)
-        };
+        boolean[] aboolean = new boolean[] {blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.NORTH), blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.SOUTH), blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.WEST), blockStateIn.shouldSideBeRendered(blockAccess, blockPosIn, EnumFacing.EAST)};
 
         if (!flag1 && !flag2 && !aboolean[0] && !aboolean[1] && !aboolean[2] && !aboolean[3])
         {
@@ -100,11 +94,11 @@
 
                 if (f12 < -999.0F)
                 {
-                    f13 = textureatlassprite.getInterpolatedU(0.0);
-                    f17 = textureatlassprite.getInterpolatedV(0.0);
+                    f13 = textureatlassprite.getInterpolatedU(0.0D);
+                    f17 = textureatlassprite.getInterpolatedV(0.0D);
                     f14 = f13;
-                    f18 = textureatlassprite.getInterpolatedV(16.0);
-                    f15 = textureatlassprite.getInterpolatedU(16.0);
+                    f18 = textureatlassprite.getInterpolatedV(16.0D);
+                    f15 = textureatlassprite.getInterpolatedU(16.0D);
                     f19 = f18;
                     f16 = f15;
                     f20 = f17;
@@ -130,49 +124,17 @@
                 float f24 = 1.0F * f;
                 float f25 = 1.0F * f1;
                 float f26 = 1.0F * f2;
-                bufferBuilderIn.pos(d0 + 0.0, d1 + (double)f7, d2 + 0.0)
-                .color(f24, f25, f26, 1.0F)
-                .tex((double)f13, (double)f17)
-                .lightmap(l2, i3)
-                .endVertex();
-                bufferBuilderIn.pos(d0 + 0.0, d1 + (double)f8, d2 + 1.0)
-                .color(f24, f25, f26, 1.0F)
-                .tex((double)f14, (double)f18)
-                .lightmap(l2, i3)
-                .endVertex();
-                bufferBuilderIn.pos(d0 + 1.0, d1 + (double)f9, d2 + 1.0)
-                .color(f24, f25, f26, 1.0F)
-                .tex((double)f15, (double)f19)
-                .lightmap(l2, i3)
-                .endVertex();
-                bufferBuilderIn.pos(d0 + 1.0, d1 + (double)f10, d2 + 0.0)
-                .color(f24, f25, f26, 1.0F)
-                .tex((double)f16, (double)f20)
-                .lightmap(l2, i3)
-                .endVertex();
+                bufferBuilderIn.pos(d0 + 0.0D, d1 + (double)f7, d2 + 0.0D).color(f24, f25, f26, 1.0F).tex((double)f13, (double)f17).lightmap(l2, i3).endVertex();
+                bufferBuilderIn.pos(d0 + 0.0D, d1 + (double)f8, d2 + 1.0D).color(f24, f25, f26, 1.0F).tex((double)f14, (double)f18).lightmap(l2, i3).endVertex();
+                bufferBuilderIn.pos(d0 + 1.0D, d1 + (double)f9, d2 + 1.0D).color(f24, f25, f26, 1.0F).tex((double)f15, (double)f19).lightmap(l2, i3).endVertex();
+                bufferBuilderIn.pos(d0 + 1.0D, d1 + (double)f10, d2 + 0.0D).color(f24, f25, f26, 1.0F).tex((double)f16, (double)f20).lightmap(l2, i3).endVertex();
 
                 if (blockliquid.shouldRenderSides(blockAccess, blockPosIn.up()))
                 {
-                    bufferBuilderIn.pos(d0 + 0.0, d1 + (double)f7, d2 + 0.0)
-                    .color(f24, f25, f26, 1.0F)
-                    .tex((double)f13, (double)f17)
-                    .lightmap(l2, i3)
-                    .endVertex();
-                    bufferBuilderIn.pos(d0 + 1.0, d1 + (double)f10, d2 + 0.0)
-                    .color(f24, f25, f26, 1.0F)
-                    .tex((double)f16, (double)f20)
-                    .lightmap(l2, i3)
-                    .endVertex();
-                    bufferBuilderIn.pos(d0 + 1.0, d1 + (double)f9, d2 + 1.0)
-                    .color(f24, f25, f26, 1.0F)
-                    .tex((double)f15, (double)f19)
-                    .lightmap(l2, i3)
-                    .endVertex();
-                    bufferBuilderIn.pos(d0 + 0.0, d1 + (double)f8, d2 + 1.0)
-                    .color(f24, f25, f26, 1.0F)
-                    .tex((double)f14, (double)f18)
-                    .lightmap(l2, i3)
-                    .endVertex();
+                    bufferBuilderIn.pos(d0 + 0.0D, d1 + (double)f7, d2 + 0.0D).color(f24, f25, f26, 1.0F).tex((double)f13, (double)f17).lightmap(l2, i3).endVertex();
+                    bufferBuilderIn.pos(d0 + 1.0D, d1 + (double)f10, d2 + 0.0D).color(f24, f25, f26, 1.0F).tex((double)f16, (double)f20).lightmap(l2, i3).endVertex();
+                    bufferBuilderIn.pos(d0 + 1.0D, d1 + (double)f9, d2 + 1.0D).color(f24, f25, f26, 1.0F).tex((double)f15, (double)f19).lightmap(l2, i3).endVertex();
+                    bufferBuilderIn.pos(d0 + 0.0D, d1 + (double)f8, d2 + 1.0D).color(f24, f25, f26, 1.0F).tex((double)f14, (double)f18).lightmap(l2, i3).endVertex();
                 }
             }
 
@@ -185,52 +147,36 @@
                 int l1 = blockStateIn.getPackedLightmapCoords(blockAccess, blockPosIn.down());
                 int i2 = l1 >> 16 & 65535;
                 int j2 = l1 & 65535;
-                bufferBuilderIn.pos(d0, d1, d2 + 1.0)
-                .color(0.5F, 0.5F, 0.5F, 1.0F)
-                .tex((double)f35, (double)f38)
-                .lightmap(i2, j2)
-                .endVertex();
-                bufferBuilderIn.pos(d0, d1, d2)
-                .color(0.5F, 0.5F, 0.5F, 1.0F)
-                .tex((double)f35, (double)f37)
-                .lightmap(i2, j2)
-                .endVertex();
-                bufferBuilderIn.pos(d0 + 1.0, d1, d2)
-                .color(0.5F, 0.5F, 0.5F, 1.0F)
-                .tex((double)f36, (double)f37)
-                .lightmap(i2, j2)
-                .endVertex();
-                bufferBuilderIn.pos(d0 + 1.0, d1, d2 + 1.0)
-                .color(0.5F, 0.5F, 0.5F, 1.0F)
-                .tex((double)f36, (double)f38)
-                .lightmap(i2, j2)
-                .endVertex();
+                bufferBuilderIn.pos(d0, d1, d2 + 1.0D).color(0.5F, 0.5F, 0.5F, 1.0F).tex((double)f35, (double)f38).lightmap(i2, j2).endVertex();
+                bufferBuilderIn.pos(d0, d1, d2).color(0.5F, 0.5F, 0.5F, 1.0F).tex((double)f35, (double)f37).lightmap(i2, j2).endVertex();
+                bufferBuilderIn.pos(d0 + 1.0D, d1, d2).color(0.5F, 0.5F, 0.5F, 1.0F).tex((double)f36, (double)f37).lightmap(i2, j2).endVertex();
+                bufferBuilderIn.pos(d0 + 1.0D, d1, d2 + 1.0D).color(0.5F, 0.5F, 0.5F, 1.0F).tex((double)f36, (double)f38).lightmap(i2, j2).endVertex();
                 flag3 = true;
             }
 
-            for (int i1 = 0; i1 < 4; i1++)
+            for (int i1 = 0; i1 < 4; ++i1)
             {
                 int j1 = 0;
                 int k1 = 0;
 
                 if (i1 == 0)
                 {
-                    k1--;
+                    --k1;
                 }
 
                 if (i1 == 1)
                 {
-                    k1++;
+                    ++k1;
                 }
 
                 if (i1 == 2)
                 {
-                    j1--;
+                    --j1;
                 }
 
                 if (i1 == 3)
                 {
-                    j1++;
+                    ++j1;
                 }
 
                 BlockPos blockpos = blockPosIn.add(j1, 0, k1);
@@ -238,9 +184,9 @@
 
                 if (!flag)
                 {
-                    Block block = blockAccess.getBlockState(blockpos).getBlock();
+                    IBlockState state = blockAccess.getBlockState(blockpos);
 
-                    if (block == Blocks.GLASS || block == Blocks.STAINED_GLASS)
+                    if (state.getBlockFaceShape(blockAccess, blockpos, EnumFacing.VALUES[i1+2].getOpposite()) == net.minecraft.block.state.BlockFaceShape.SOLID)
                     {
                         textureatlassprite1 = this.atlasSpriteWaterOverlay;
                     }
@@ -260,44 +206,44 @@
                         f39 = f7;
                         f40 = f10;
                         d3 = d0;
-                        d5 = d0 + 1.0;
-                        d4 = d2 + 0.001F;
-                        d6 = d2 + 0.001F;
+                        d5 = d0 + 1.0D;
+                        d4 = d2 + 0.0010000000474974513D;
+                        d6 = d2 + 0.0010000000474974513D;
                     }
                     else if (i1 == 1)
                     {
                         f39 = f9;
                         f40 = f8;
-                        d3 = d0 + 1.0;
+                        d3 = d0 + 1.0D;
                         d5 = d0;
-                        d4 = d2 + 1.0 - 0.001F;
-                        d6 = d2 + 1.0 - 0.001F;
+                        d4 = d2 + 1.0D - 0.0010000000474974513D;
+                        d6 = d2 + 1.0D - 0.0010000000474974513D;
                     }
                     else if (i1 == 2)
                     {
                         f39 = f8;
                         f40 = f7;
-                        d3 = d0 + 0.001F;
-                        d5 = d0 + 0.001F;
-                        d4 = d2 + 1.0;
+                        d3 = d0 + 0.0010000000474974513D;
+                        d5 = d0 + 0.0010000000474974513D;
+                        d4 = d2 + 1.0D;
                         d6 = d2;
                     }
                     else
                     {
                         f39 = f10;
                         f40 = f9;
-                        d3 = d0 + 1.0 - 0.001F;
-                        d5 = d0 + 1.0 - 0.001F;
+                        d3 = d0 + 1.0D - 0.0010000000474974513D;
+                        d5 = d0 + 1.0D - 0.0010000000474974513D;
                         d4 = d2;
-                        d6 = d2 + 1.0;
+                        d6 = d2 + 1.0D;
                     }
 
                     flag3 = true;
-                    float f41 = textureatlassprite1.getInterpolatedU(0.0);
-                    float f27 = textureatlassprite1.getInterpolatedU(8.0);
+                    float f41 = textureatlassprite1.getInterpolatedU(0.0D);
+                    float f27 = textureatlassprite1.getInterpolatedU(8.0D);
                     float f28 = textureatlassprite1.getInterpolatedV((double)((1.0F - f39) * 16.0F * 0.5F));
                     float f29 = textureatlassprite1.getInterpolatedV((double)((1.0F - f40) * 16.0F * 0.5F));
-                    float f30 = textureatlassprite1.getInterpolatedV(8.0);
+                    float f30 = textureatlassprite1.getInterpolatedV(8.0D);
                     int j = blockStateIn.getPackedLightmapCoords(blockAccess, blockpos);
                     int k = j >> 16 & 65535;
                     int l = j & 65535;
@@ -305,49 +251,17 @@
                     float f32 = 1.0F * f31 * f;
                     float f33 = 1.0F * f31 * f1;
                     float f34 = 1.0F * f31 * f2;
-                    bufferBuilderIn.pos(d3, d1 + (double)f39, d4)
-                    .color(f32, f33, f34, 1.0F)
-                    .tex((double)f41, (double)f28)
-                    .lightmap(k, l)
-                    .endVertex();
-                    bufferBuilderIn.pos(d5, d1 + (double)f40, d6)
-                    .color(f32, f33, f34, 1.0F)
-                    .tex((double)f27, (double)f29)
-                    .lightmap(k, l)
-                    .endVertex();
-                    bufferBuilderIn.pos(d5, d1 + 0.0, d6)
-                    .color(f32, f33, f34, 1.0F)
-                    .tex((double)f27, (double)f30)
-                    .lightmap(k, l)
-                    .endVertex();
-                    bufferBuilderIn.pos(d3, d1 + 0.0, d4)
-                    .color(f32, f33, f34, 1.0F)
-                    .tex((double)f41, (double)f30)
-                    .lightmap(k, l)
-                    .endVertex();
+                    bufferBuilderIn.pos(d3, d1 + (double)f39, d4).color(f32, f33, f34, 1.0F).tex((double)f41, (double)f28).lightmap(k, l).endVertex();
+                    bufferBuilderIn.pos(d5, d1 + (double)f40, d6).color(f32, f33, f34, 1.0F).tex((double)f27, (double)f29).lightmap(k, l).endVertex();
+                    bufferBuilderIn.pos(d5, d1 + 0.0D, d6).color(f32, f33, f34, 1.0F).tex((double)f27, (double)f30).lightmap(k, l).endVertex();
+                    bufferBuilderIn.pos(d3, d1 + 0.0D, d4).color(f32, f33, f34, 1.0F).tex((double)f41, (double)f30).lightmap(k, l).endVertex();
 
                     if (textureatlassprite1 != this.atlasSpriteWaterOverlay)
                     {
-                        bufferBuilderIn.pos(d3, d1 + 0.0, d4)
-                        .color(f32, f33, f34, 1.0F)
-                        .tex((double)f41, (double)f30)
-                        .lightmap(k, l)
-                        .endVertex();
-                        bufferBuilderIn.pos(d5, d1 + 0.0, d6)
-                        .color(f32, f33, f34, 1.0F)
-                        .tex((double)f27, (double)f30)
-                        .lightmap(k, l)
-                        .endVertex();
-                        bufferBuilderIn.pos(d5, d1 + (double)f40, d6)
-                        .color(f32, f33, f34, 1.0F)
-                        .tex((double)f27, (double)f29)
-                        .lightmap(k, l)
-                        .endVertex();
-                        bufferBuilderIn.pos(d3, d1 + (double)f39, d4)
-                        .color(f32, f33, f34, 1.0F)
-                        .tex((double)f41, (double)f28)
-                        .lightmap(k, l)
-                        .endVertex();
+                        bufferBuilderIn.pos(d3, d1 + 0.0D, d4).color(f32, f33, f34, 1.0F).tex((double)f41, (double)f30).lightmap(k, l).endVertex();
+                        bufferBuilderIn.pos(d5, d1 + 0.0D, d6).color(f32, f33, f34, 1.0F).tex((double)f27, (double)f30).lightmap(k, l).endVertex();
+                        bufferBuilderIn.pos(d5, d1 + (double)f40, d6).color(f32, f33, f34, 1.0F).tex((double)f27, (double)f29).lightmap(k, l).endVertex();
+                        bufferBuilderIn.pos(d3, d1 + (double)f39, d4).color(f32, f33, f34, 1.0F).tex((double)f41, (double)f28).lightmap(k, l).endVertex();
                     }
                 }
             }
@@ -361,7 +275,7 @@
         int i = 0;
         float f = 0.0F;
 
-        for (int j = 0; j < 4; j++)
+        for (int j = 0; j < 4; ++j)
         {
             BlockPos blockpos = blockPosIn.add(-(j & 1), 0, -(j >> 1 & 1));
 
@@ -373,9 +287,17 @@
             IBlockState iblockstate = blockAccess.getBlockState(blockpos);
             Material material = iblockstate.getMaterial();
 
-            if (material == blockMaterial)
-            {
-                int k = iblockstate.getValue(BlockLiquid.LEVEL);
+            if (material != blockMaterial)
+            {
+                if (!material.isSolid())
+                {
+                    ++f;
+                    ++i;
+                }
+            }
+            else
+            {
+                int k = ((Integer)iblockstate.getValue(BlockLiquid.LEVEL)).intValue();
 
                 if (k >= 8 || k == 0)
                 {
@@ -384,12 +306,7 @@
                 }
 
                 f += BlockLiquid.getLiquidHeightPercent(k);
-                i++;
-            }
-            else if (!material.isSolid())
-            {
-                f++;
-                i++;
+                ++i;
             }
         }
 
