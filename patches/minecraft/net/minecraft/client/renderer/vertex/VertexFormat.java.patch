--- before/net/minecraft/client/renderer/vertex/VertexFormat.java
+++ after/net/minecraft/client/renderer/vertex/VertexFormat.java
@@ -11,12 +11,13 @@
 public class VertexFormat
 {
     private static final Logger field_177357_a = LogManager.getLogger();
-    private final List<VertexFormatElement> field_177355_b = Lists.newArrayList();
-    private final List<Integer> field_177356_c = Lists.newArrayList();
+    private final List<VertexFormatElement> field_177355_b;
+    private final List<Integer> field_177356_c;
     private int field_177353_d;
-    private int field_177354_e = -1;
-    private final List<Integer> field_177351_f = Lists.newArrayList();
-    private int field_177352_g = -1;
+    private int field_177354_e;
+    private final List<Integer> field_177351_f;
+    private int field_177352_g;
+    private int hashCode;
 
     public VertexFormat(VertexFormat p_i46097_1_)
     {
@@ -32,6 +33,11 @@
 
     public VertexFormat()
     {
+        this.field_177355_b = Lists.<VertexFormatElement>newArrayList();
+        this.field_177356_c = Lists.<Integer>newArrayList();
+        this.field_177354_e = -1;
+        this.field_177351_f = Lists.<Integer>newArrayList();
+        this.field_177352_g = -1;
     }
 
     public void func_177339_a()
@@ -42,6 +48,7 @@
         this.field_177351_f.clear();
         this.field_177352_g = -1;
         this.field_177353_d = 0;
+        this.hashCode = 0;
     }
 
     @SuppressWarnings("incomplete-switch")
@@ -55,7 +62,7 @@
         else
         {
             this.field_177355_b.add(p_181721_1_);
-            this.field_177356_c.add(this.field_177353_d);
+            this.field_177356_c.add(Integer.valueOf(this.field_177353_d));
 
             switch (p_181721_1_.func_177375_c())
             {
@@ -66,10 +73,11 @@
                     this.field_177354_e = this.field_177353_d;
                     break;
                 case UV:
-                    this.field_177351_f.add(p_181721_1_.func_177369_e(), this.field_177353_d);
+                    this.field_177351_f.add(p_181721_1_.func_177369_e(), Integer.valueOf(this.field_177353_d));
             }
 
             this.field_177353_d += p_181721_1_.func_177368_f();
+            this.hashCode = 0;
             return this;
         }
     }
@@ -101,17 +109,16 @@
 
     public int func_177344_b(int p_177344_1_)
     {
-        return this.field_177351_f.get(p_177344_1_);
+        return ((Integer)this.field_177351_f.get(p_177344_1_)).intValue();
     }
 
-    @Override
     public String toString()
     {
         String s = "format: " + this.field_177355_b.size() + " elements: ";
 
         for (int i = 0; i < this.field_177355_b.size(); ++i)
         {
-            s = s + this.field_177355_b.get(i).toString();
+            s = s + ((VertexFormatElement)this.field_177355_b.get(i)).toString();
 
             if (i != this.field_177355_b.size() - 1)
             {
@@ -166,10 +173,9 @@
 
     public int func_181720_d(int p_181720_1_)
     {
-        return this.field_177356_c.get(p_181720_1_);
+        return ((Integer)this.field_177356_c.get(p_181720_1_)).intValue();
     }
 
-    @Override
     public boolean equals(Object p_equals_1_)
     {
         if (this == p_equals_1_)
@@ -199,11 +205,13 @@
         }
     }
 
-    @Override
     public int hashCode()
     {
+        if (this.hashCode != 0) return this.hashCode;
         int i = this.field_177355_b.hashCode();
         i = 31 * i + this.field_177356_c.hashCode();
-        return 31 * i + this.field_177353_d;
+        i = 31 * i + this.field_177353_d;
+        this.hashCode = i;
+        return i;
     }
 }
