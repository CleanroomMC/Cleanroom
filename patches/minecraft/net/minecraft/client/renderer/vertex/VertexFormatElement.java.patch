--- before/net/minecraft/client/renderer/vertex/VertexFormatElement.java
+++ after/net/minecraft/client/renderer/vertex/VertexFormatElement.java
@@ -56,7 +56,6 @@
         return this.index;
     }
 
-    @Override
     public String toString()
     {
         return this.elementCount + "," + this.usage.getDisplayName() + "," + this.type.getDisplayName();
@@ -72,7 +71,6 @@
         return this.usage == VertexFormatElement.EnumUsage.POSITION;
     }
 
-    @Override
     public boolean equals(Object p_equals_1_)
     {
         if (this == p_equals_1_)
@@ -91,9 +89,13 @@
             {
                 return false;
             }
+            else if (this.type != vertexformatelement.type)
+            {
+                return false;
+            }
             else
             {
-                return this.type != vertexformatelement.type ? false : this.usage == vertexformatelement.usage;
+                return this.usage == vertexformatelement.usage;
             }
         }
         else
@@ -102,13 +104,13 @@
         }
     }
 
-    @Override
     public int hashCode()
     {
         int i = this.type.hashCode();
         i = 31 * i + this.usage.hashCode();
         i = 31 * i + this.index;
-        return 31 * i + this.elementCount;
+        i = 31 * i + this.elementCount;
+        return i;
     }
 
     @SideOnly(Side.CLIENT)
@@ -156,9 +158,16 @@
         NORMAL("Normal"),
         COLOR("Vertex Color"),
         UV("UV"),
+        // As of 1.8.8 - unused in vanilla; use GENERIC for now
+        @Deprecated
         MATRIX("Bone Matrix"),
+        @Deprecated
         BLEND_WEIGHT("Blend Weight"),
-        PADDING("Padding");
+        PADDING("Padding"),
+        GENERIC("Generic");
+
+        public void preDraw(VertexFormat format, int element, int stride, java.nio.ByteBuffer buffer) { net.minecraftforge.client.ForgeHooksClient.preDraw(this, format, element, stride, buffer); }
+        public void postDraw(VertexFormat format, int element, int stride, java.nio.ByteBuffer buffer) { net.minecraftforge.client.ForgeHooksClient.postDraw(this, format, element, stride, buffer); }
 
         private final String displayName;
 
