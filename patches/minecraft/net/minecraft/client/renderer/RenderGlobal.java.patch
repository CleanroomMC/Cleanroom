--- before/net/minecraft/client/renderer/RenderGlobal.java
+++ after/net/minecraft/client/renderer/RenderGlobal.java
@@ -560,8 +560,10 @@
 
     public void renderEntities(Entity renderViewEntity, ICamera camera, float partialTicks)
     {
+        int pass = net.minecraftforge.client.MinecraftForgeClient.getRenderPass();
         if (this.renderEntitiesStartupCounter > 0)
         {
+            if (pass > 0) return;
             this.renderEntitiesStartupCounter--;
         }
         else
@@ -588,9 +590,12 @@
                 this.mc.gameSettings,
                 partialTicks
             );
+            if(pass == 0)
+            {
             this.countEntitiesTotal = 0;
             this.countEntitiesRendered = 0;
             this.countEntitiesHidden = 0;
+            }
             Entity entity = this.mc.getRenderViewEntity();
             double d3 = entity.lastTickPosX + (entity.posX - entity.lastTickPosX) * (double)partialTicks;
             double d4 = entity.lastTickPosY + (entity.posY - entity.lastTickPosY) * (double)partialTicks;
@@ -602,11 +607,15 @@
             this.mc.entityRenderer.enableLightmap();
             this.world.profiler.endStartSection("global");
             List<Entity> list = this.world.getLoadedEntityList();
+            if (pass == 0)
+            {
             this.countEntitiesTotal = list.size();
+            }
 
             for (int i = 0; i < this.world.weatherEffects.size(); i++)
             {
                 Entity entity1 = this.world.weatherEffects.get(i);
+                if (!entity1.shouldRenderInPass(pass)) continue;
                 this.countEntitiesRendered++;
 
                 if (entity1.isInRangeToRender3d(d0, d1, d2))
@@ -632,6 +641,7 @@
                 {
                     for (Entity entity2 : classinheritancemultimap)
                     {
+                        if(!entity2.shouldRenderInPass(pass)) continue;
                         boolean flag = this.renderManager.shouldRender(entity2, camera, d0, d1, d2) || entity2.isRidingOrBeingRiddenBy(this.mc.player);
 
                         if (flag)
@@ -675,6 +685,7 @@
                 }
             }
 
+            if(pass == 0)
             if (this.isRenderEntityOutlines() && (!list1.isEmpty() || this.entityOutlinesRendered))
             {
                 this.world.profiler.endStartSection("entityOutlines");
@@ -714,6 +725,7 @@
             this.world.profiler.endStartSection("blockentities");
             RenderHelper.enableStandardItemLighting();
 
+            TileEntityRendererDispatcher.instance.preDrawBatch();
             for (RenderGlobal.ContainerLocalRenderInformation renderglobal$containerlocalrenderinformation1 : this.renderInfos)
             {
                 List<TileEntity> list3 = renderglobal$containerlocalrenderinformation1.renderChunk.getCompiledChunk().getTileEntities();
@@ -722,6 +734,7 @@
                 {
                     for (TileEntity tileentity2 : list3)
                     {
+                        if (!tileentity2.shouldRenderInPass(pass) || !camera.isBoundingBoxInFrustum(tileentity2.getRenderBoundingBox())) continue;
                         TileEntityRendererDispatcher.instance.render(tileentity2, partialTicks, -1);
                     }
                 }
@@ -731,9 +744,11 @@
             {
                 for (TileEntity tileentity : this.setTileEntities)
                 {
+                    if (!tileentity.shouldRenderInPass(pass) || !camera.isBoundingBoxInFrustum(tileentity.getRenderBoundingBox())) continue;
                     TileEntityRendererDispatcher.instance.render(tileentity, partialTicks, -1);
                 }
             }
+            TileEntityRendererDispatcher.instance.drawBatch(pass);
 
             this.preRenderDamagedBlocks();
 
@@ -788,15 +803,13 @@
         {
             return true;
         }
+        else if (this.mc.player.isSpectator() && this.mc.gameSettings.keyBindSpectatorOutlines.isKeyDown() && entityIn instanceof EntityPlayer)
+        {
+            return entityIn.ignoreFrustumCheck || camera.isBoundingBoxInFrustum(entityIn.getEntityBoundingBox()) || entityIn.isRidingOrBeingRiddenBy(this.mc.player);
+        }
         else
         {
-            return this.mc.player.isSpectator()
-                   && this.mc.gameSettings.keyBindSpectatorOutlines.isKeyDown()
-                   && entityIn instanceof EntityPlayer
-                   ? entityIn.ignoreFrustumCheck
-                   || camera.isBoundingBoxInFrustum(entityIn.getEntityBoundingBox())
-                   || entityIn.isRidingOrBeingRiddenBy(this.mc.player)
-                   : false;
+            return false;
         }
     }
 
@@ -951,7 +964,7 @@
                     {
                         RenderChunk renderchunk1 = this.viewFrustum.getRenderChunk(new BlockPos((j << 4) + 8, i, (k << 4) + 8));
 
-                        if (renderchunk1 != null && camera.isBoundingBoxInFrustum(renderchunk1.boundingBox))
+                        if (renderchunk1 != null && camera.isBoundingBoxInFrustum(renderchunk1.boundingBox.expand(0.0, blockpos1.getY() > 0 ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY, 0.0))) // Forge: fix MC-73139
                         {
                             renderchunk1.setFrameIndex(frameCount);
                             queue.add(new RenderGlobal.ContainerLocalRenderInformation(renderchunk1, null, 0));
@@ -1013,7 +1026,7 @@
                 BlockPos blockpos2 = renderchunk4.getPosition().add(8, 8, 8);
                 boolean flag3 = blockpos2.distanceSq(blockpos1) < 768.0;
 
-                if (!renderchunk4.needsImmediateUpdate() && !flag3)
+                if (net.minecraftforge.common.ForgeModContainer.alwaysSetupTerrainOffThread || (!renderchunk4.needsImmediateUpdate() && !flag3))
                 {
                     this.chunksToUpdate.add(renderchunk4);
                 }
@@ -1316,6 +1329,13 @@
 
     public void renderSky(float partialTicks, int pass)
     {
+        net.minecraftforge.client.IRenderHandler renderer = this.world.provider.getSkyRenderer();
+        if (renderer != null)
+        {
+            renderer.render(partialTicks, world, mc);
+            return;
+        }
+
         if (this.mc.world.provider.getDimensionType().getId() == 1)
         {
             this.renderSkyEnd();
@@ -1542,6 +1562,7 @@
 
     public void renderClouds(float partialTicks, int pass, double x, double y, double z)
     {
+        if (net.minecraftforge.fml.client.FMLClientHandler.instance().renderClouds(this.cloudTickCounter, partialTicks)) return;
         if (this.mc.world.provider.isSurfaceWorld())
         {
             if (this.mc.gameSettings.shouldRenderClouds() == 2)
