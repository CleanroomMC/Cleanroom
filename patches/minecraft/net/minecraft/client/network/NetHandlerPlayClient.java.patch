--- before/net/minecraft/client/network/NetHandlerPlayClient.java
+++ after/net/minecraft/client/network/NetHandlerPlayClient.java
@@ -297,7 +297,7 @@
         this.world = new WorldClient(
             this,
             new WorldSettings(0L, packetIn.getGameType(), false, packetIn.isHardcoreMode(), packetIn.getWorldType()),
-            packetIn.getDimension(),
+            net.minecraftforge.fml.common.network.handshake.NetworkDispatcher.get(getNetworkManager()).getOverrideDimension(packetIn),
             packetIn.getDifficulty(),
             this.client.profiler
         );
@@ -850,7 +850,7 @@
             (packetIn.getChunkZ() << 4) + 15
         );
 
-        if (!packetIn.isFullChunk() || !(this.world.provider instanceof WorldProviderSurface))
+        if (!packetIn.isFullChunk() || this.world.provider.shouldClientCheckLighting())
         {
             chunk.resetRelightChecks();
         }
@@ -862,7 +862,7 @@
 
             if (tileentity != null)
             {
-                tileentity.readFromNBT(nbttagcompound);
+                tileentity.handleUpdateTag(nbttagcompound);
             }
         }
     }
@@ -974,7 +974,9 @@
     public void handleChat(SPacketChat packetIn)
     {
         PacketThreadUtil.checkThreadAndEnqueue(packetIn, this, this.client);
-        this.client.ingameGUI.addChatMessage(packetIn.getType(), packetIn.getChatComponent());
+        net.minecraft.util.text.ITextComponent message = net.minecraftforge.event.ForgeEventFactory.onClientChat(packetIn.getType(), packetIn.getChatComponent());
+        if (message == null) return;
+        this.client.ingameGUI.addChatMessage(packetIn.getType(), message);
     }
 
     @Override
@@ -1114,7 +1116,7 @@
                         this.client
                         .ingameGUI
                         .setOverlayMessage(
-                            I18n.format("mount.onboard", GameSettings.getKeyDisplayString(this.client.gameSettings.keyBindSneak.getKeyCode())), false
+                            I18n.format("mount.onboard", this.client.gameSettings.keyBindSneak.getDisplayName()), false
                         );
                     }
                 }
@@ -1404,6 +1406,15 @@
             {
                 tileentity.readFromNBT(packetIn.getNbtCompound());
             }
+            else
+            {
+                if(tileentity == null)
+                {
+                    LOGGER.error("Received invalid update packet for null tile entity at {} with data: {}", packetIn.getPos(), packetIn.getNbtCompound());
+                    return;
+                }
+                tileentity.onDataPacket(netManager, packetIn);
+            }
 
             if (flag && this.client.currentScreen instanceof GuiCommandBlock)
             {
@@ -1521,10 +1532,10 @@
                 .printChatMessage(
                     new TextComponentTranslation(
                         "demo.help.movement",
-                        GameSettings.getKeyDisplayString(gamesettings.keyBindForward.getKeyCode()),
-                        GameSettings.getKeyDisplayString(gamesettings.keyBindLeft.getKeyCode()),
-                        GameSettings.getKeyDisplayString(gamesettings.keyBindBack.getKeyCode()),
-                        GameSettings.getKeyDisplayString(gamesettings.keyBindRight.getKeyCode())
+                        gamesettings.keyBindForward.getDisplayName(),
+                        gamesettings.keyBindLeft.getDisplayName(),
+                        gamesettings.keyBindBack.getDisplayName(),
+                        gamesettings.keyBindRight.getDisplayName()
                     )
                 );
             }
@@ -1533,7 +1544,7 @@
                 this.client
                 .ingameGUI
                 .getChatGUI()
-                .printChatMessage(new TextComponentTranslation("demo.help.jump", GameSettings.getKeyDisplayString(gamesettings.keyBindJump.getKeyCode())));
+                .printChatMessage(new TextComponentTranslation("demo.help.jump", gamesettings.keyBindJump.getDisplayName()));
             }
             else if (f == 103.0F)
             {
@@ -1721,7 +1732,7 @@
 
         if (entity instanceof EntityLivingBase)
         {
-            Potion potion = Potion.getPotionById(packetIn.getEffectId());
+            Potion potion = Potion.getPotionById(packetIn.getEffectId() & 0xFF);
 
             if (potion != null)
             {
@@ -1967,7 +1978,7 @@
                     if (file2.isFile())
                     {
                         this.netManager.sendPacket(new CPacketResourcePackStatus(CPacketResourcePackStatus.Action.ACCEPTED));
-                        Futures.addCallback(this.client.getResourcePackRepository().setServerResourcePack(file2), this.createDownloadCallback());
+                        Futures.addCallback(this.client.getResourcePackRepository().setServerResourcePack(file2), this.createDownloadCallback(), Runnable::run);
                         return;
                     }
                 }
@@ -1984,7 +1995,7 @@
                 if (serverdata != null && serverdata.getResourceMode() == ServerData.ServerResourceMode.ENABLED)
                 {
                     this.netManager.sendPacket(new CPacketResourcePackStatus(CPacketResourcePackStatus.Action.ACCEPTED));
-                    Futures.addCallback(this.client.getResourcePackRepository().downloadResourcePack(s, s1), this.createDownloadCallback());
+                    Futures.addCallback(this.client.getResourcePackRepository().downloadResourcePack(s, s1), this.createDownloadCallback(), Runnable::run);
                 }
                 else if (serverdata != null && serverdata.getResourceMode() != ServerData.ServerResourceMode.PROMPT)
                 {
@@ -2021,7 +2032,8 @@
                                         .sendPacket(new CPacketResourcePackStatus(CPacketResourcePackStatus.Action.ACCEPTED));
                                         Futures.addCallback(
                                             NetHandlerPlayClient.this.client.getResourcePackRepository().downloadResourcePack(s, s1),
-                                            NetHandlerPlayClient.this.createDownloadCallback()
+                                            NetHandlerPlayClient.this.createDownloadCallback(),
+                                            Runnable::run
                                         );
                                     }
                                     else
@@ -2161,6 +2173,7 @@
             }
             finally
             {
+                if (false) // Forge: let packet handle releasing buffer
                 packetbuffer.release();
             }
         }
@@ -2423,8 +2436,8 @@
                     if (iattributeinstance == null)
                     {
                         iattributeinstance = abstractattributemap.registerAttribute(
-                                                 new RangedAttribute(null, spacketentityproperties$snapshot.getName(), 0.0, Double.MIN_NORMAL, Double.MAX_VALUE)
-                                             );
+                                                 new RangedAttribute(null, spacketentityproperties$snapshot.getName(), 0.0, -Double.MAX_VALUE, Double.MAX_VALUE)
+                                             ); // Forge: fix invalid value range (MC-150405)
                     }
 
                     iattributeinstance.setBaseValue(spacketentityproperties$snapshot.getBaseValue());
