--- before/net/minecraft/client/gui/GuiKeyBindingList.java
+++ after/net/minecraft/client/gui/GuiKeyBindingList.java
@@ -138,7 +138,7 @@
         {
             this.keybinding = name;
             this.keyDesc = I18n.format(name.getKeyDescription());
-            this.btnChangeKeyBinding = new GuiButton(0, 0, 0, 75, 20, I18n.format(name.getKeyDescription()));
+            this.btnChangeKeyBinding = new GuiButton(0, 0, 0, 95, 20, I18n.format(name.getKeyDescription()));
             this.btnReset = new GuiButton(0, 0, 0, 50, 20, I18n.format("controls.reset"));
         }
 
@@ -164,23 +164,24 @@
                 y + slotHeight / 2 - GuiKeyBindingList.this.mc.fontRenderer.FONT_HEIGHT / 2,
                 16777215
             );
-            this.btnReset.x = x + 190;
+            this.btnReset.x = x + 210;
             this.btnReset.y = y;
-            this.btnReset.enabled = this.keybinding.getKeyCode() != this.keybinding.getKeyCodeDefault();
+            this.btnReset.enabled = !this.keybinding.isSetToDefaultValue();
             this.btnReset.drawButton(GuiKeyBindingList.this.mc, mouseX, mouseY, partialTicks);
             this.btnChangeKeyBinding.x = x + 105;
             this.btnChangeKeyBinding.y = y;
-            this.btnChangeKeyBinding.displayString = GameSettings.getKeyDisplayString(this.keybinding.getKeyCode());
+            this.btnChangeKeyBinding.displayString = this.keybinding.getDisplayName();
             boolean flag1 = false;
+            boolean keyCodeModifierConflict = true; // less severe form of conflict, like SHIFT conflicting with SHIFT+G
 
             if (this.keybinding.getKeyCode() != 0)
             {
                 for (KeyBinding keybinding : GuiKeyBindingList.this.mc.gameSettings.keyBindings)
                 {
-                    if (keybinding != this.keybinding && keybinding.getKeyCode() == this.keybinding.getKeyCode())
+                    if (keybinding != this.keybinding && keybinding.conflicts(this.keybinding))
                     {
                         flag1 = true;
-                        break;
+                        keyCodeModifierConflict &= keybinding.hasKeyCodeModifierConflict(this.keybinding);
                     }
                 }
             }
@@ -196,7 +197,7 @@
             }
             else if (flag1)
             {
-                this.btnChangeKeyBinding.displayString = TextFormatting.RED + this.btnChangeKeyBinding.displayString;
+                this.btnChangeKeyBinding.displayString = (keyCodeModifierConflict ? TextFormatting.GOLD : TextFormatting.RED) + this.btnChangeKeyBinding.displayString;
             }
 
             this.btnChangeKeyBinding.drawButton(GuiKeyBindingList.this.mc, mouseX, mouseY, partialTicks);
@@ -212,6 +213,7 @@
             }
             else if (this.btnReset.mousePressed(GuiKeyBindingList.this.mc, mouseX, mouseY))
             {
+                this.keybinding.setToDefault();
                 GuiKeyBindingList.this.mc.gameSettings.setOptionKeyBinding(this.keybinding, this.keybinding.getKeyCodeDefault());
                 KeyBinding.resetKeyBindingArrayAndHash();
                 return true;
