--- before/net/minecraft/client/gui/GuiMainMenu.java
+++ after/net/minecraft/client/gui/GuiMainMenu.java
@@ -77,6 +77,8 @@
     private GuiScreen realmsNotification;
     private int widthCopyright;
     private int widthCopyrightRest;
+    private GuiButton modButton;
+    private net.minecraftforge.client.gui.NotificationModUpdateScreen modUpdateNotification;
 
     public GuiMainMenu()
     {
@@ -130,19 +132,9 @@
 
     private boolean areRealmsNotificationsEnabled()
     {
-        return Minecraft.getMinecraft().gameSettings.getOptionOrdinalValue(GameSettings.Options.REALMS_NOTIFICATIONS) && this.realmsNotification != null;
-    }
-
-    @Override
-    public void updateScreen()
-    {
-        if (this.areRealmsNotificationsEnabled())
-        {
-            this.realmsNotification.updateScreen();
-        }
-    }
-
-    @Override
+        return false;
+    }
+
     public boolean doesGuiPauseGame()
     {
         return false;
@@ -205,25 +197,14 @@
 
         this.mc.setConnectedToRealms(false);
 
-        if (Minecraft.getMinecraft().gameSettings.getOptionOrdinalValue(GameSettings.Options.REALMS_NOTIFICATIONS) && !this.hasCheckedForRealmsNotification)
-        {
-            RealmsBridge realmsbridge = new RealmsBridge();
-            this.realmsNotification = realmsbridge.getNotificationScreen(this);
-            this.hasCheckedForRealmsNotification = true;
-        }
-
-        if (this.areRealmsNotificationsEnabled())
-        {
-            this.realmsNotification.setGuiSize(this.width, this.height);
-            this.realmsNotification.initGui();
-        }
+        modUpdateNotification = net.minecraftforge.client.gui.NotificationModUpdateScreen.init(this, modButton);
     }
 
     private void addSingleplayerMultiplayerButtons(int p_73969_1_, int p_73969_2_)
     {
         this.buttonList.add(new GuiButton(1, this.width / 2 - 100, p_73969_1_, I18n.format("menu.singleplayer")));
         this.buttonList.add(new GuiButton(2, this.width / 2 - 100, p_73969_1_ + p_73969_2_ * 1, I18n.format("menu.multiplayer")));
-        this.realmsButton = this.addButton(new GuiButton(14, this.width / 2 - 100, p_73969_1_ + p_73969_2_ * 2, I18n.format("menu.online")));
+        this.buttonList.add(modButton = new GuiButton(6, this.width / 2 - 100, p_73969_1_ + p_73969_2_ * 2, I18n.format("fml.menu.mods")));
     }
 
     private void addDemoButtons(int p_73972_1_, int p_73972_2_)
@@ -264,16 +245,16 @@
             this.mc.displayGuiScreen(new GuiMultiplayer(this));
         }
 
-        if (button.id == 14 && this.realmsButton.visible)
-        {
-            this.switchToRealms();
-        }
-
         if (button.id == 4)
         {
             this.mc.shutdown();
         }
 
+        if (button.id == 6)
+        {
+            this.mc.displayGuiScreen(new net.minecraftforge.fml.client.GuiModList(this));
+        }
+
         if (button.id == 11)
         {
             this.mc.launchIntegratedServer("Demo_World", "Demo_World", WorldServerDemo.DEMO_WORLD_SETTINGS);
@@ -303,8 +284,6 @@
 
     private void switchToRealms()
     {
-        RealmsBridge realmsbridge = new RealmsBridge();
-        realmsbridge.switchToRealms(this);
     }
 
     @Override
@@ -548,6 +527,9 @@
 
         this.mc.getTextureManager().bindTexture(field_194400_H);
         drawModalRectWithCustomSizedTexture(j + 88, 67, 0.0F, 0.0F, 98, 14, 128.0F, 16.0F);
+
+        this.splashText = net.minecraftforge.client.ForgeHooksClient.renderMainMenu(this, this.fontRenderer, this.width, this.height, this.splashText);
+
         GlStateManager.pushMatrix();
         GlStateManager.translate((float)(this.width / 2 + 90), 70.0F, 0.0F);
         GlStateManager.rotate(-20.0F, 0.0F, 0.0F, 1.0F);
@@ -567,7 +549,16 @@
             s = s + ("release".equalsIgnoreCase(this.mc.getVersionType()) ? "" : "/" + this.mc.getVersionType());
         }
 
-        this.drawString(this.fontRenderer, s, 2, this.height - 10, -1);
+        java.util.List<String> brandings = com.google.common.collect.Lists.reverse(net.minecraftforge.fml.common.FMLCommonHandler.instance().getBrandings(true));
+        for (int brdline = 0; brdline < brandings.size(); brdline++)
+        {
+            String brd = brandings.get(brdline);
+            if (!com.google.common.base.Strings.isNullOrEmpty(brd))
+            {
+                this.drawString(this.fontRenderer, brd, 2, this.height - ( 10 + brdline * (this.fontRenderer.FONT_HEIGHT + 1)), 16777215);
+            }
+        }
+
         this.drawString(this.fontRenderer, "Copyright Mojang AB. Do not distribute!", this.widthCopyrightRest, this.height - 10, -1);
 
         if (mouseX > this.widthCopyrightRest
@@ -590,10 +581,7 @@
 
         super.drawScreen(mouseX, mouseY, partialTicks);
 
-        if (this.areRealmsNotificationsEnabled())
-        {
-            this.realmsNotification.drawScreen(mouseX, mouseY, partialTicks);
-        }
+        modUpdateNotification.drawScreen(mouseX, mouseY, partialTicks);
     }
 
     @Override
@@ -616,11 +604,6 @@
             }
         }
 
-        if (this.areRealmsNotificationsEnabled())
-        {
-            this.realmsNotification.mouseClicked(mouseX, mouseY, mouseButton);
-        }
-
         if (mouseX > this.widthCopyrightRest
                 && mouseX < this.widthCopyrightRest + this.widthCopyright
                 && mouseY > this.height - 10
@@ -630,12 +613,4 @@
         }
     }
 
-    @Override
-    public void onGuiClosed()
-    {
-        if (this.realmsNotification != null)
-        {
-            this.realmsNotification.onGuiClosed();
-        }
-    }
 }
