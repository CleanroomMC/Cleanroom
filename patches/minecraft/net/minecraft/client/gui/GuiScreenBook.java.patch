--- before/net/minecraft/client/gui/GuiScreenBook.java
+++ after/net/minecraft/client/gui/GuiScreenBook.java
@@ -69,6 +69,7 @@
 
             if (this.bookTotalPages < 1)
             {
+                this.bookPages.appendTag(new NBTTagString("")); // Forge: fix MC-1685
                 this.bookTotalPages = 1;
             }
         }
@@ -81,14 +82,12 @@
         }
     }
 
-    @Override
     public void updateScreen()
     {
         super.updateScreen();
-        this.updateCount++;
+        ++this.updateCount;
     }
 
-    @Override
     public void initGui()
     {
         this.buttonList.clear();
@@ -108,12 +107,11 @@
 
         int i = (this.width - 192) / 2;
         int j = 2;
-        this.buttonNextPage = this.addButton(new GuiScreenBook.NextPageButton(1, i + 120, 156, true));
-        this.buttonPreviousPage = this.addButton(new GuiScreenBook.NextPageButton(2, i + 38, 156, false));
+        this.buttonNextPage = (GuiScreenBook.NextPageButton)this.addButton(new GuiScreenBook.NextPageButton(1, i + 120, 156, true));
+        this.buttonPreviousPage = (GuiScreenBook.NextPageButton)this.addButton(new GuiScreenBook.NextPageButton(2, i + 38, 156, false));
         this.updateButtons();
     }
 
-    @Override
     public void onGuiClosed()
     {
         Keyboard.enableRepeatEvents(false);
@@ -178,14 +176,13 @@
         }
     }
 
-    @Override
     protected void actionPerformed(GuiButton button) throws IOException
     {
         if (button.enabled)
         {
             if (button.id == 0)
             {
-                this.mc.displayGuiScreen(null);
+                this.mc.displayGuiScreen((GuiScreen)null);
                 this.sendBookToServer(false);
             }
             else if (button.id == 3 && this.bookIsUnsigned)
@@ -196,7 +193,7 @@
             {
                 if (this.currPage < this.bookTotalPages - 1)
                 {
-                    this.currPage++;
+                    ++this.currPage;
                 }
                 else if (this.bookIsUnsigned)
                 {
@@ -204,7 +201,7 @@
 
                     if (this.currPage < this.bookTotalPages - 1)
                     {
-                        this.currPage++;
+                        ++this.currPage;
                     }
                 }
             }
@@ -212,13 +209,13 @@
             {
                 if (this.currPage > 0)
                 {
-                    this.currPage--;
+                    --this.currPage;
                 }
             }
             else if (button.id == 5 && this.bookGettingSigned)
             {
                 this.sendBookToServer(true);
-                this.mc.displayGuiScreen(null);
+                this.mc.displayGuiScreen((GuiScreen)null);
             }
             else if (button.id == 4 && this.bookGettingSigned)
             {
@@ -234,12 +231,11 @@
         if (this.bookPages != null && this.bookPages.tagCount() < 50)
         {
             this.bookPages.appendTag(new NBTTagString(""));
-            this.bookTotalPages++;
+            ++this.bookTotalPages;
             this.bookIsModified = true;
         }
     }
 
-    @Override
     protected void keyTyped(char typedChar, int keyCode) throws IOException
     {
         super.keyTyped(typedChar, keyCode);
@@ -309,7 +305,7 @@
                 if (!this.bookTitle.isEmpty())
                 {
                     this.sendBookToServer(true);
-                    this.mc.displayGuiScreen(null);
+                    this.mc.displayGuiScreen((GuiScreen)null);
                 }
 
                 return;
@@ -326,9 +322,7 @@
 
     private String pageGetCurrent()
     {
-        return this.bookPages != null && this.currPage >= 0 && this.currPage < this.bookPages.tagCount()
-               ? this.bookPages.getStringTagAt(this.currPage)
-               : "";
+        return this.bookPages != null && this.currPage >= 0 && this.currPage < this.bookPages.tagCount() ? this.bookPages.getStringTagAt(this.currPage) : "";
     }
 
     private void pageSetCurrent(String p_146457_1_)
@@ -352,7 +346,6 @@
         }
     }
 
-    @Override
     public void drawScreen(int mouseX, int mouseY, float partialTicks)
     {
         GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
@@ -420,11 +413,9 @@
                     try
                     {
                         ITextComponent itextcomponent = ITextComponent.Serializer.jsonToComponent(s5);
-                        this.cachedComponents = itextcomponent != null
-                                              ? GuiUtilRenderComponents.splitText(itextcomponent, 116, this.fontRenderer, true, true)
-                                              : null;
+                        this.cachedComponents = itextcomponent != null ? GuiUtilRenderComponents.splitText(itextcomponent, 116, this.fontRenderer, true, true) : null;
                     }
-                    catch (JsonParseException jsonparseexception)
+                    catch (JsonParseException var13)
                     {
                         this.cachedComponents = null;
                     }
@@ -449,7 +440,7 @@
             {
                 int k1 = Math.min(128 / this.fontRenderer.FONT_HEIGHT, this.cachedComponents.size());
 
-                for (int l1 = 0; l1 < k1; l1++)
+                for (int l1 = 0; l1 < k1; ++l1)
                 {
                     ITextComponent itextcomponent2 = this.cachedComponents.get(l1);
                     this.fontRenderer.drawString(itextcomponent2.getUnformattedText(), i + 36, 34 + l1 * this.fontRenderer.FONT_HEIGHT, 0);
@@ -467,7 +458,6 @@
         super.drawScreen(mouseX, mouseY, partialTicks);
     }
 
-    @Override
     protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException
     {
         if (mouseButton == 0)
@@ -483,7 +473,6 @@
         super.mouseClicked(mouseX, mouseY, mouseButton);
     }
 
-    @Override
     public boolean handleComponentClick(ITextComponent component)
     {
         ClickEvent clickevent = component.getStyle().getClickEvent();
@@ -507,8 +496,9 @@
                     return true;
                 }
             }
-            catch (Throwable throwable)
+            catch (Throwable var5)
             {
+                ;
             }
 
             return false;
@@ -519,7 +509,7 @@
 
             if (flag && clickevent.getAction() == ClickEvent.Action.RUN_COMMAND)
             {
-                this.mc.displayGuiScreen(null);
+                this.mc.displayGuiScreen((GuiScreen)null);
             }
 
             return flag;
@@ -590,15 +580,11 @@
                 this.isForward = isForwardIn;
             }
 
-            @Override
             public void drawButton(Minecraft mc, int mouseX, int mouseY, float partialTicks)
             {
                 if (this.visible)
                 {
-                    boolean flag = mouseX >= this.x
-                                   && mouseY >= this.y
-                                   && mouseX < this.x + this.width
-                                   && mouseY < this.y + this.height;
+                    boolean flag = mouseX >= this.x && mouseY >= this.y && mouseX < this.x + this.width && mouseY < this.y + this.height;
                     GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
                     mc.getTextureManager().bindTexture(GuiScreenBook.BOOK_GUI_TEXTURES);
                     int i = 0;
