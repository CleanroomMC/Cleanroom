--- before/net/minecraft/client/gui/GuiControls.java
+++ after/net/minecraft/client/gui/GuiControls.java
@@ -11,10 +11,7 @@
 @SideOnly(Side.CLIENT)
 public class GuiControls extends GuiScreen
 {
-    private static final GameSettings.Options[] OPTIONS_ARR = new GameSettings.Options[]
-        {
-            GameSettings.Options.INVERT_MOUSE, GameSettings.Options.SENSITIVITY, GameSettings.Options.TOUCHSCREEN, GameSettings.Options.AUTO_JUMP
-        };
+    private static final GameSettings.Options[] OPTIONS_ARR = new GameSettings.Options[] {GameSettings.Options.INVERT_MOUSE, GameSettings.Options.SENSITIVITY, GameSettings.Options.TOUCHSCREEN, GameSettings.Options.AUTO_JUMP};
     private final GuiScreen parentScreen;
     protected String screenTitle = "Controls";
     private final GameSettings options;
@@ -29,14 +26,11 @@
         this.options = settings;
     }
 
-    @Override
     public void initGui()
     {
         this.keyBindingList = new GuiKeyBindingList(this, this.mc);
         this.buttonList.add(new GuiButton(200, this.width / 2 - 155 + 160, this.height - 29, 150, 20, I18n.format("gui.done")));
-        this.buttonReset = this.addButton(
-                                  new GuiButton(201, this.width / 2 - 155, this.height - 29, 150, 20, I18n.format("controls.resetAll"))
-                              );
+        this.buttonReset = this.addButton(new GuiButton(201, this.width / 2 - 155, this.height - 29, 150, 20, I18n.format("controls.resetAll")));
         this.screenTitle = I18n.format("controls.title");
         int i = 0;
 
@@ -44,39 +38,23 @@
         {
             if (gamesettings$options.isFloat())
             {
-                this.buttonList
-                .add(
-                    new GuiOptionSlider(
-                        gamesettings$options.getOrdinal(), this.width / 2 - 155 + i % 2 * 160, 18 + 24 * (i >> 1), gamesettings$options
-                    )
-                );
+                this.buttonList.add(new GuiOptionSlider(gamesettings$options.getOrdinal(), this.width / 2 - 155 + i % 2 * 160, 18 + 24 * (i >> 1), gamesettings$options));
             }
             else
             {
-                this.buttonList
-                .add(
-                    new GuiOptionButton(
-                        gamesettings$options.getOrdinal(),
-                        this.width / 2 - 155 + i % 2 * 160,
-                        18 + 24 * (i >> 1),
-                        gamesettings$options,
-                        this.options.getKeyBinding(gamesettings$options)
-                    )
-                );
+                this.buttonList.add(new GuiOptionButton(gamesettings$options.getOrdinal(), this.width / 2 - 155 + i % 2 * 160, 18 + 24 * (i >> 1), gamesettings$options, this.options.getKeyBinding(gamesettings$options)));
             }
 
-            i++;
+            ++i;
         }
     }
 
-    @Override
     public void handleMouseInput() throws IOException
     {
         super.handleMouseInput();
         this.keyBindingList.handleMouseInput();
     }
 
-    @Override
     protected void actionPerformed(GuiButton button) throws IOException
     {
         if (button.id == 200)
@@ -87,7 +65,7 @@
         {
             for (KeyBinding keybinding : this.mc.gameSettings.keyBindings)
             {
-                keybinding.setKeyCode(keybinding.getKeyCodeDefault());
+                keybinding.setToDefault();
             }
 
             KeyBinding.resetKeyBindingArrayAndHash();
@@ -99,11 +77,11 @@
         }
     }
 
-    @Override
     protected void mouseClicked(int mouseX, int mouseY, int mouseButton) throws IOException
     {
         if (this.buttonId != null)
         {
+            this.buttonId.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.getActiveModifier(), -100 + mouseButton);
             this.options.setOptionKeyBinding(this.buttonId, -100 + mouseButton);
             this.buttonId = null;
             KeyBinding.resetKeyBindingArrayAndHash();
@@ -114,7 +92,6 @@
         }
     }
 
-    @Override
     protected void mouseReleased(int mouseX, int mouseY, int state)
     {
         if (state != 0 || !this.keyBindingList.mouseReleased(mouseX, mouseY, state))
@@ -123,24 +100,27 @@
         }
     }
 
-    @Override
     protected void keyTyped(char typedChar, int keyCode) throws IOException
     {
         if (this.buttonId != null)
         {
             if (keyCode == 1)
             {
+                this.buttonId.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.NONE, 0);
                 this.options.setOptionKeyBinding(this.buttonId, 0);
             }
             else if (keyCode != 0)
             {
+                this.buttonId.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.getActiveModifier(), keyCode);
                 this.options.setOptionKeyBinding(this.buttonId, keyCode);
             }
             else if (typedChar > 0)
             {
+                this.buttonId.setKeyModifierAndCode(net.minecraftforge.client.settings.KeyModifier.getActiveModifier(), typedChar + 256);
                 this.options.setOptionKeyBinding(this.buttonId, typedChar + 256);
             }
 
+            if (!net.minecraftforge.client.settings.KeyModifier.isKeyCodeModifier(keyCode))
             this.buttonId = null;
             this.time = Minecraft.getSystemTime();
             KeyBinding.resetKeyBindingArrayAndHash();
@@ -151,7 +131,6 @@
         }
     }
 
-    @Override
     public void drawScreen(int mouseX, int mouseY, float partialTicks)
     {
         this.drawDefaultBackground();
@@ -161,7 +140,7 @@
 
         for (KeyBinding keybinding : this.options.keyBindings)
         {
-            if (keybinding.getKeyCode() != keybinding.getKeyCodeDefault())
+            if (!keybinding.isSetToDefaultValue())
             {
                 flag = true;
                 break;
