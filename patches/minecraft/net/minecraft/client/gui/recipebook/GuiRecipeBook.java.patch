--- before/net/minecraft/client/gui/recipebook/GuiRecipeBook.java
+++ after/net/minecraft/client/gui/recipebook/GuiRecipeBook.java
@@ -6,6 +6,8 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Locale;
+import java.util.function.Consumer;
+import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.Gui;
@@ -43,13 +45,7 @@
     private int width;
     private int height;
     private final GhostRecipe ghostRecipe = new GhostRecipe();
-    private final List<GuiButtonRecipeTab> recipeTabs = Lists.newArrayList(
-                new GuiButtonRecipeTab(0, CreativeTabs.SEARCH),
-                new GuiButtonRecipeTab(0, CreativeTabs.TOOLS),
-                new GuiButtonRecipeTab(0, CreativeTabs.BUILDING_BLOCKS),
-                new GuiButtonRecipeTab(0, CreativeTabs.MISC),
-                new GuiButtonRecipeTab(0, CreativeTabs.REDSTONE)
-            );
+    private final List<GuiButtonRecipeTab> recipeTabs = Lists.newArrayList(new GuiButtonRecipeTab(0, CreativeTabs.SEARCH), new GuiButtonRecipeTab(0, CreativeTabs.TOOLS), new GuiButtonRecipeTab(0, CreativeTabs.BUILDING_BLOCKS), new GuiButtonRecipeTab(0, CreativeTabs.MISC), new GuiButtonRecipeTab(0, CreativeTabs.REDSTONE));
     private GuiButtonRecipeTab currentTab;
     private GuiButtonToggle toggleRecipesBtn;
     private InventoryCrafting craftingSlots;
@@ -159,28 +155,37 @@
 
     private void updateCollections(boolean p_193003_1_)
     {
-        List<RecipeList> list = RecipeBookClient.RECIPES_BY_TAB.get(this.currentTab.getCategory());
-        list.forEach(
-            p_193944_1_ -> p_193944_1_.canCraft(
-                this.stackedContents, this.craftingSlots.getWidth(), this.craftingSlots.getHeight(), this.recipeBook
-            )
-        );
+        List<RecipeList> list = (List)RecipeBookClient.RECIPES_BY_TAB.get(this.currentTab.getCategory());
+        list.forEach((p_193944_1_) ->
+        {
+            p_193944_1_.canCraft(this.stackedContents, this.craftingSlots.getWidth(), this.craftingSlots.getHeight(), this.recipeBook);
+        });
         List<RecipeList> list1 = Lists.newArrayList(list);
-        list1.removeIf(p_193952_0_ -> !p_193952_0_.isNotEmpty());
-        list1.removeIf(p_193953_0_ -> !p_193953_0_.containsValidRecipes());
+        list1.removeIf((p_193952_0_) ->
+        {
+            return !p_193952_0_.isNotEmpty();
+        });
+        list1.removeIf((p_193953_0_) ->
+        {
+            return !p_193953_0_.containsValidRecipes();
+        });
         String s = this.searchBar.getText();
 
         if (!s.isEmpty())
         {
-            ObjectSet<RecipeList> objectset = new ObjectLinkedOpenHashSet<>(
-                this.mc.getSearchTree(SearchTreeManager.RECIPES).search(s.toLowerCase(Locale.ROOT))
-            );
-            list1.removeIf(p_193947_1_ -> !objectset.contains(p_193947_1_));
+            ObjectSet<RecipeList> objectset = new ObjectLinkedOpenHashSet<RecipeList>(this.mc.getSearchTree(SearchTreeManager.RECIPES).search(s.toLowerCase(Locale.ROOT)));
+            list1.removeIf((p_193947_1_) ->
+            {
+                return !objectset.contains(p_193947_1_);
+            });
         }
 
         if (this.recipeBook.isFilteringCraftable())
         {
-            list1.removeIf(p_193958_0_ -> !p_193958_0_.containsCraftableRecipes());
+            list1.removeIf((p_193958_0_) ->
+            {
+                return !p_193958_0_.containsCraftableRecipes();
+            });
         }
 
         this.recipeBookPage.updateLists(list1, p_193003_1_);
@@ -265,11 +270,11 @@
 
             if (this.toggleRecipesBtn.isMouseOver())
             {
-                String s = I18n.format(this.toggleRecipesBtn.isStateTriggered() ? "gui.recipebook.toggleRecipes.craftable" : "gui.recipebook.toggleRecipes.all");
+                String s1 = I18n.format(this.toggleRecipesBtn.isStateTriggered() ? "gui.recipebook.toggleRecipes.craftable" : "gui.recipebook.toggleRecipes.all");
 
                 if (this.mc.currentScreen != null)
                 {
-                    this.mc.currentScreen.drawHoveringText(s, p_191876_3_, p_191876_4_);
+                    this.mc.currentScreen.drawHoveringText(s1, p_191876_3_, p_191876_4_);
                 }
             }
 
@@ -281,7 +286,7 @@
     {
         ItemStack itemstack = null;
 
-        for (int i = 0; i < this.ghostRecipe.size(); i++)
+        for (int i = 0; i < this.ghostRecipe.size(); ++i)
         {
             GhostRecipe.GhostIngredient ghostrecipe$ghostingredient = this.ghostRecipe.get(i);
             int j = ghostrecipe$ghostingredient.getX() + p_193015_1_;
@@ -308,10 +313,7 @@
     {
         if (this.isVisible() && !this.mc.player.isSpectator())
         {
-            if (this.recipeBookPage
-                    .mouseClicked(
-                        p_191862_1_, p_191862_2_, p_191862_3_, (this.width - 147) / 2 - this.xOffset, (this.height - 166) / 2, 147, 166
-                    ))
+            if (this.recipeBookPage.mouseClicked(p_191862_1_, p_191862_2_, p_191862_3_, (this.width - 147) / 2 - this.xOffset, (this.height - 166) / 2, 147, 166))
             {
                 IRecipe irecipe = this.recipeBookPage.getLastClickedRecipe();
                 RecipeList recipelist = this.recipeBookPage.getLastClickedRecipeList();
@@ -324,11 +326,7 @@
                     }
 
                     this.ghostRecipe.clear();
-                    this.mc
-                    .playerController
-                    .func_194338_a(
-                        this.mc.player.openContainer.windowId, irecipe, GuiScreen.isShiftKeyDown(), this.mc.player
-                    );
+                    this.mc.playerController.func_194338_a(this.mc.player.openContainer.windowId, irecipe, GuiScreen.isShiftKeyDown(), this.mc.player);
 
                     if (!this.isOffsetNextToMainGUI() && p_191862_3_ == 0)
                     {
@@ -392,10 +390,7 @@
         }
         else
         {
-            boolean flag = p_193955_1_ < p_193955_3_
-                           || p_193955_2_ < p_193955_4_
-                           || p_193955_1_ >= p_193955_3_ + p_193955_5_
-                           || p_193955_2_ >= p_193955_4_ + p_193955_6_;
+            boolean flag = p_193955_1_ < p_193955_3_ || p_193955_2_ < p_193955_4_ || p_193955_1_ >= p_193955_3_ + p_193955_5_ || p_193955_2_ >= p_193955_4_ + p_193955_6_;
             boolean flag1 = p_193955_3_ - 147 < p_193955_1_ && p_193955_1_ < p_193955_3_ && p_193955_4_ < p_193955_2_ && p_193955_2_ < p_193955_4_ + p_193955_6_;
             return flag && !flag1 && !this.currentTab.mousePressed(this.mc, p_193955_1_, p_193955_2_);
         }
@@ -403,35 +398,38 @@
 
     public boolean keyPressed(char typedChar, int keycode)
     {
-        if (!this.isVisible() || this.mc.player.isSpectator())
-        {
-            return false;
-        }
-        else if (keycode == 1 && !this.isOffsetNextToMainGUI())
-        {
-            this.setVisible(false);
-            return true;
-        }
-        else
-        {
-            if (GameSettings.isKeyDown(this.mc.gameSettings.keyBindChat) && !this.searchBar.isFocused())
-            {
-                this.searchBar.setFocused(true);
-            }
-            else if (this.searchBar.textboxKeyTyped(typedChar, keycode))
-            {
-                String s = this.searchBar.getText().toLowerCase(Locale.ROOT);
-                this.pirateRecipe(s);
-
-                if (!s.equals(this.lastSearch))
-                {
-                    this.updateCollections(false);
-                    this.lastSearch = s;
-                }
-
+        if (this.isVisible() && !this.mc.player.isSpectator())
+        {
+            if (keycode == 1 && !this.isOffsetNextToMainGUI())
+            {
+                this.setVisible(false);
                 return true;
             }
-
+            else
+            {
+                if (GameSettings.isKeyDown(this.mc.gameSettings.keyBindChat) && !this.searchBar.isFocused())
+                {
+                    this.searchBar.setFocused(true);
+                }
+                else if (this.searchBar.textboxKeyTyped(typedChar, keycode))
+                {
+                    String s1 = this.searchBar.getText().toLowerCase(Locale.ROOT);
+                    this.pirateRecipe(s1);
+
+                    if (!s1.equals(this.lastSearch))
+                    {
+                        this.updateCollections(false);
+                        this.lastSearch = s1;
+                    }
+
+                    return true;
+                }
+
+                return false;
+            }
+        }
+        else
+        {
             return false;
         }
     }
@@ -450,10 +448,8 @@
 
             languagemanager.setCurrentLanguage(language);
             this.mc.gameSettings.language = language.getLanguageCode();
-            this.mc.refreshResources();
-            this.mc
-            .fontRenderer
-            .setUnicodeFlag(this.mc.getLanguageManager().isCurrentLocaleUnicode() || this.mc.gameSettings.forceUnicodeFont);
+            net.minecraftforge.fml.client.FMLClientHandler.instance().refreshResources(net.minecraftforge.client.resource.VanillaResourceType.LANGUAGES);
+            this.mc.fontRenderer.setUnicodeFlag(this.mc.getLanguageManager().isCurrentLocaleUnicode() || this.mc.gameSettings.forceUnicodeFont);
             this.mc.fontRenderer.setBidiFlag(languagemanager.isCurrentLanguageBidirectional());
             this.mc.gameSettings.saveOptions();
         }
@@ -474,7 +470,6 @@
         }
     }
 
-    @Override
     public void recipesShown(List<IRecipe> recipes)
     {
         for (IRecipe irecipe : recipes)
@@ -487,16 +482,16 @@
     {
         ItemStack itemstack = p_193951_1_.getRecipeOutput();
         this.ghostRecipe.setRecipe(p_193951_1_);
-        this.ghostRecipe.addIngredient(Ingredient.fromStacks(itemstack), p_193951_2_.get(0).xPos, p_193951_2_.get(0).yPos);
+        this.ghostRecipe.addIngredient(Ingredient.fromStacks(itemstack), (p_193951_2_.get(0)).xPos, (p_193951_2_.get(0)).yPos);
         int i = this.craftingSlots.getWidth();
         int j = this.craftingSlots.getHeight();
-        int k = p_193951_1_ instanceof ShapedRecipes ? ((ShapedRecipes)p_193951_1_).getWidth() : i;
+        int k = p_193951_1_ instanceof net.minecraftforge.common.crafting.IShapedRecipe ? ((net.minecraftforge.common.crafting.IShapedRecipe)p_193951_1_).getRecipeWidth() : i;
         int l = 1;
         Iterator<Ingredient> iterator = p_193951_1_.getIngredients().iterator();
 
-        for (int i1 = 0; i1 < j; i1++)
+        for (int i1 = 0; i1 < j; ++i1)
         {
-            for (int j1 = 0; j1 < k; j1++)
+            for (int j1 = 0; j1 < k; ++j1)
             {
                 if (!iterator.hasNext())
                 {
@@ -505,13 +500,13 @@
 
                 Ingredient ingredient = iterator.next();
 
-                if (ingredient != Ingredient.EMPTY)
+                if (ingredient.getMatchingStacks().length > 0)
                 {
                     Slot slot = p_193951_2_.get(l);
                     this.ghostRecipe.addIngredient(ingredient, slot.xPos, slot.yPos);
                 }
 
-                l++;
+                ++l;
             }
 
             if (k < i)
