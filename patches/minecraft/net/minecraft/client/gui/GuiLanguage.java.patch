--- before/net/minecraft/client/gui/GuiLanguage.java
+++ after/net/minecraft/client/gui/GuiLanguage.java
@@ -29,33 +29,20 @@
         this.languageManager = manager;
     }
 
-    @Override
     public void initGui()
     {
-        this.forceUnicodeFontBtn = this.addButton(
-                                  new GuiOptionButton(
-                                      100,
-                                      this.width / 2 - 155,
-                                      this.height - 38,
-                                      GameSettings.Options.FORCE_UNICODE_FONT,
-                                      this.game_settings_3.getKeyBinding(GameSettings.Options.FORCE_UNICODE_FONT)
-                                  )
-                              );
-        this.confirmSettingsBtn = this.addButton(
-                                  new GuiOptionButton(6, this.width / 2 - 155 + 160, this.height - 38, I18n.format("gui.done"))
-                              );
+        this.forceUnicodeFontBtn = (GuiOptionButton)this.addButton(new GuiOptionButton(100, this.width / 2 - 155, this.height - 38, GameSettings.Options.FORCE_UNICODE_FONT, this.game_settings_3.getKeyBinding(GameSettings.Options.FORCE_UNICODE_FONT)));
+        this.confirmSettingsBtn = (GuiOptionButton)this.addButton(new GuiOptionButton(6, this.width / 2 - 155 + 160, this.height - 38, I18n.format("gui.done")));
         this.list = new GuiLanguage.List(this.mc);
         this.list.registerScrollButtons(7, 8);
     }
 
-    @Override
     public void handleMouseInput() throws IOException
     {
         super.handleMouseInput();
         this.list.handleMouseInput();
     }
 
-    @Override
     protected void actionPerformed(GuiButton button) throws IOException
     {
         if (button.enabled)
@@ -86,22 +73,19 @@
         }
     }
 
-    @Override
     public void drawScreen(int mouseX, int mouseY, float partialTicks)
     {
         this.list.drawScreen(mouseX, mouseY, partialTicks);
         this.drawCenteredString(this.fontRenderer, I18n.format("options.language"), this.width / 2, 16, 16777215);
-        this.drawCenteredString(
-            this.fontRenderer, "(" + I18n.format("options.languageWarning") + ")", this.width / 2, this.height - 56, 8421504
-        );
+        this.drawCenteredString(this.fontRenderer, "(" + I18n.format("options.languageWarning") + ")", this.width / 2, this.height - 56, 8421504);
         super.drawScreen(mouseX, mouseY, partialTicks);
     }
 
     @SideOnly(Side.CLIENT)
     class List extends GuiSlot
     {
-        private final java.util.List<String> langCodeList = Lists.newArrayList();
-        private final Map<String, Language> languageMap = Maps.newHashMap();
+        private final java.util.List<String> langCodeList = Lists.<String>newArrayList();
+        private final Map<String, Language> languageMap = Maps.<String, Language>newHashMap();
 
         public List(Minecraft mcIn)
         {
@@ -114,19 +98,17 @@
             }
         }
 
-        @Override
         protected int getSize()
         {
             return this.langCodeList.size();
         }
 
-        @Override
         protected void elementClicked(int slotIndex, boolean isDoubleClick, int mouseX, int mouseY)
         {
             Language language = this.languageMap.get(this.langCodeList.get(slotIndex));
             GuiLanguage.this.languageManager.setCurrentLanguage(language);
             GuiLanguage.this.game_settings_3.language = language.getLanguageCode();
-            this.mc.refreshResources();
+            net.minecraftforge.fml.client.FMLClientHandler.instance().refreshResources(net.minecraftforge.client.resource.VanillaResourceType.LANGUAGES);
             GuiLanguage.this.fontRenderer.setUnicodeFlag(GuiLanguage.this.languageManager.isCurrentLocaleUnicode() || GuiLanguage.this.game_settings_3.forceUnicodeFont);
             GuiLanguage.this.fontRenderer.setBidiFlag(GuiLanguage.this.languageManager.isCurrentLanguageBidirectional());
             GuiLanguage.this.confirmSettingsBtn.displayString = I18n.format("gui.done");
@@ -134,35 +116,25 @@
             GuiLanguage.this.game_settings_3.saveOptions();
         }
 
-        @Override
         protected boolean isSelected(int slotIndex)
         {
-            return this.langCodeList.get(slotIndex).equals(GuiLanguage.this.languageManager.getCurrentLanguage().getLanguageCode());
+            return ((String)this.langCodeList.get(slotIndex)).equals(GuiLanguage.this.languageManager.getCurrentLanguage().getLanguageCode());
         }
 
-        @Override
         protected int getContentHeight()
         {
             return this.getSize() * 18;
         }
 
-        @Override
         protected void drawBackground()
         {
             GuiLanguage.this.drawDefaultBackground();
         }
 
-        @Override
         protected void drawSlot(int slotIndex, int xPos, int yPos, int heightIn, int mouseXIn, int mouseYIn, float partialTicks)
         {
             GuiLanguage.this.fontRenderer.setBidiFlag(true);
-            GuiLanguage.this.drawCenteredString(
-                GuiLanguage.this.fontRenderer,
-                this.languageMap.get(this.langCodeList.get(slotIndex)).toString(),
-                this.width / 2,
-                yPos + 1,
-                16777215
-            );
+            GuiLanguage.this.drawCenteredString(GuiLanguage.this.fontRenderer, ((Language)this.languageMap.get(this.langCodeList.get(slotIndex))).toString(), this.width / 2, yPos + 1, 16777215);
             GuiLanguage.this.fontRenderer.setBidiFlag(GuiLanguage.this.languageManager.getCurrentLanguage().isBidirectional());
         }
     }
