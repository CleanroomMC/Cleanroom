--- before/net/minecraft/client/resources/SimpleReloadableResourceManager.java
+++ after/net/minecraft/client/resources/SimpleReloadableResourceManager.java
@@ -96,6 +96,7 @@
     @Override
     public void reloadResources(List<IResourcePack> resourcesPacksList)
     {
+        net.minecraftforge.fml.common.ProgressManager.ProgressBar resReload = net.minecraftforge.fml.common.ProgressManager.push("Loading Resources", resourcesPacksList.size()+1, true);
         this.clearResources();
         LOGGER.info("Reloading ResourceManager: {}", JOINER_RESOURCE_PACKS.join(Iterables.transform(resourcesPacksList, new Function<IResourcePack, String>()
         {
@@ -107,24 +108,34 @@
 
         for (IResourcePack iresourcepack : resourcesPacksList)
         {
+            resReload.step(iresourcepack.getPackName());
             this.reloadResourcePack(iresourcepack);
         }
 
+        resReload.step("Reloading listeners");
         this.notifyReloadListeners();
+        net.minecraftforge.fml.common.ProgressManager.pop(resReload);
     }
 
     @Override
     public void registerReloadListener(IResourceManagerReloadListener reloadListener)
     {
+        net.minecraftforge.fml.common.ProgressManager.ProgressBar resReload = net.minecraftforge.fml.common.ProgressManager.push("Loading Resource", 1);
+        resReload.step(reloadListener.getClass());
         this.reloadListeners.add(reloadListener);
         reloadListener.onResourceManagerReload(this);
+        net.minecraftforge.fml.common.ProgressManager.pop(resReload);
     }
 
     private void notifyReloadListeners()
     {
+        net.minecraftforge.fml.common.ProgressManager.ProgressBar resReload = net.minecraftforge.fml.common.ProgressManager.push("Reloading", this.reloadListeners.size());
         for (IResourceManagerReloadListener iresourcemanagerreloadlistener : this.reloadListeners)
         {
+            resReload.step(iresourcemanagerreloadlistener.getClass());
+            if (!net.minecraftforge.client.ForgeHooksClient.shouldUseVanillaReloadableListener(iresourcemanagerreloadlistener)) continue; // Forge: Selective reloading for vanilla listeners
             iresourcemanagerreloadlistener.onResourceManagerReload(this);
         }
+        net.minecraftforge.fml.common.ProgressManager.pop(resReload);
     }
 }
