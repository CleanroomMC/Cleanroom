--- before/net/minecraft/client/resources/FallbackResourceManager.java
+++ after/net/minecraft/client/resources/FallbackResourceManager.java
@@ -20,7 +20,7 @@
 public class FallbackResourceManager implements IResourceManager
 {
     private static final Logger field_177246_b = LogManager.getLogger();
-    protected final List<IResourcePack> field_110540_a = Lists.newArrayList();
+    protected final List<IResourcePack> field_110540_a = Lists.<IResourcePack>newArrayList();
     private final MetadataSerializer field_110539_b;
 
     public FallbackResourceManager(MetadataSerializer p_i1289_1_)
@@ -33,13 +33,11 @@
         this.field_110540_a.add(p_110538_1_);
     }
 
-    @Override
     public Set<String> func_135055_a()
     {
-        return Collections.emptySet();
+        return Collections.<String>emptySet();
     }
 
-    @Override
     public IResource func_110536_a(ResourceLocation p_110536_1_) throws IOException
     {
         this.func_188552_d(p_110536_1_);
@@ -64,21 +62,18 @@
                     inputstream = this.func_177245_a(resourcelocation, iresourcepack);
                 }
 
-                return new SimpleResource(
-                           iresourcepack1.func_130077_b(), p_110536_1_, this.func_177245_a(p_110536_1_, iresourcepack1), inputstream, this.field_110539_b
-                       );
+                return new SimpleResource(iresourcepack1.func_130077_b(), p_110536_1_, this.func_177245_a(p_110536_1_, iresourcepack1), inputstream, this.field_110539_b);
             }
         }
 
         throw new FileNotFoundException(p_110536_1_.toString());
     }
 
+    @SuppressWarnings("resource")
     protected InputStream func_177245_a(ResourceLocation p_177245_1_, IResourcePack p_177245_2_) throws IOException
     {
         InputStream inputstream = p_177245_2_.func_110590_a(p_177245_1_);
-        return (InputStream)(field_177246_b.isDebugEnabled()
-                             ? new FallbackResourceManager.InputStreamLeakedResourceLogger(inputstream, p_177245_1_, p_177245_2_.func_130077_b())
-                             : inputstream);
+        return (InputStream)(field_177246_b.isDebugEnabled() ? new FallbackResourceManager.InputStreamLeakedResourceLogger(inputstream, p_177245_1_, p_177245_2_.func_130077_b()) : inputstream);
     }
 
     private void func_188552_d(ResourceLocation p_188552_1_) throws IOException
@@ -89,11 +84,10 @@
         }
     }
 
-    @Override
     public List<IResource> func_135056_b(ResourceLocation p_135056_1_) throws IOException
     {
         this.func_188552_d(p_135056_1_);
-        List<IResource> list = Lists.newArrayList();
+        List<IResource> list = Lists.<IResource>newArrayList();
         ResourceLocation resourcelocation = func_110537_b(p_135056_1_);
 
         for (IResourcePack iresourcepack : this.field_110540_a)
@@ -101,9 +95,7 @@
             if (iresourcepack.func_110589_b(p_135056_1_))
             {
                 InputStream inputstream = iresourcepack.func_110589_b(resourcelocation) ? this.func_177245_a(resourcelocation, iresourcepack) : null;
-                list.add(
-                    new SimpleResource(iresourcepack.func_130077_b(), p_135056_1_, this.func_177245_a(p_135056_1_, iresourcepack), inputstream, this.field_110539_b)
-                );
+                list.add(new SimpleResource(iresourcepack.func_130077_b(), p_135056_1_, this.func_177245_a(p_135056_1_, iresourcepack), inputstream, this.field_110539_b));
             }
         }
 
@@ -133,29 +125,17 @@
             {
                 this.field_177330_a = p_i46093_1_;
                 ByteArrayOutputStream bytearrayoutputstream = new ByteArrayOutputStream();
-                new Exception().printStackTrace(new PrintStream(bytearrayoutputstream));
+                (new Exception()).printStackTrace(new PrintStream(bytearrayoutputstream));
                 this.field_177328_b = "Leaked resource: '" + p_i46093_2_ + "' loaded from pack: '" + p_i46093_3_ + "'\n" + bytearrayoutputstream;
             }
 
-            @Override
             public void close() throws IOException
             {
                 this.field_177330_a.close();
                 this.field_177329_c = true;
             }
 
-            @Override
-            protected void finalize() throws Throwable
-            {
-                if (!this.field_177329_c)
-                {
-                    FallbackResourceManager.field_177246_b.warn(this.field_177328_b);
-                }
-
-                super.finalize();
-            }
-
-            @Override
+
             public int read() throws IOException
             {
                 return this.field_177330_a.read();
