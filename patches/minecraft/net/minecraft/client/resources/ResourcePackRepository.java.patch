--- before/net/minecraft/client/resources/ResourcePackRepository.java
+++ after/net/minecraft/client/resources/ResourcePackRepository.java
@@ -8,11 +8,7 @@
 import com.google.common.util.concurrent.ListenableFuture;
 import com.google.common.util.concurrent.SettableFuture;
 import java.awt.image.BufferedImage;
-import java.io.Closeable;
-import java.io.File;
-import java.io.FileFilter;
-import java.io.FileInputStream;
-import java.io.IOException;
+import java.io.*;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.Iterator;
@@ -297,7 +293,7 @@
                     FileUtils.deleteQuietly(file1);
                     settablefuture.setException(p_onFailure_1_);
                 }
-            });
+            }, Runnable::run);
             return this.downloadingPacks;
         }
         finally
@@ -308,9 +304,10 @@
 
     private boolean checkHash(String p_190113_1_, File p_190113_2_)
     {
+        InputStream is = null;
         try
         {
-            String s = DigestUtils.sha1Hex(new FileInputStream(p_190113_2_));
+            String s = DigestUtils.sha1Hex(is = new FileInputStream(p_190113_2_));
 
             if (p_190113_1_.isEmpty())
             {
@@ -330,6 +327,7 @@
         {
             LOGGER.warn("File {} couldn't be hashed.", p_190113_2_, ioexception);
         }
+        finally { IOUtils.closeQuietly(is); } // Forge: close stream after use
 
         return false;
     }
