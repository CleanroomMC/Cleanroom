--- before/net/minecraft/command/CommandTrigger.java
+++ after/net/minecraft/command/CommandTrigger.java
@@ -15,30 +15,26 @@
 
 public class CommandTrigger extends CommandBase
 {
-    @Override
     public String getName()
     {
         return "trigger";
     }
 
-    @Override
     public int getRequiredPermissionLevel()
     {
         return 0;
     }
 
-    @Override
     public String getUsage(ICommandSender sender)
     {
         return "commands.trigger.usage";
     }
 
-    @Override
     public void execute(MinecraftServer server, ICommandSender sender, String[] args) throws CommandException
     {
         if (args.length < 3)
         {
-            throw new WrongUsageException("commands.trigger.usage");
+            throw new WrongUsageException("commands.trigger.usage", new Object[0]);
         }
         else
         {
@@ -54,7 +50,7 @@
 
                 if (!(entity instanceof EntityPlayerMP))
                 {
-                    throw new CommandException("commands.trigger.invalidPlayer");
+                    throw new CommandException("commands.trigger.invalidPlayer", new Object[0]);
                 }
 
                 entityplayermp = (EntityPlayerMP)entity;
@@ -69,7 +65,7 @@
 
                 if (!scoreboard.entityHasObjective(entityplayermp.getName(), scoreobjective))
                 {
-                    throw new CommandException("commands.trigger.invalidObjective", args[0]);
+                    throw new CommandException("commands.trigger.invalidObjective", new Object[] {args[0]});
                 }
                 else
                 {
@@ -77,7 +73,7 @@
 
                     if (score.isLocked())
                     {
-                        throw new CommandException("commands.trigger.disabled", args[0]);
+                        throw new CommandException("commands.trigger.disabled", new Object[] {args[0]});
                     }
                     else
                     {
@@ -89,7 +85,7 @@
                         {
                             if (!"add".equals(args[1]))
                             {
-                                throw new CommandException("commands.trigger.invalidMode", args[1]);
+                                throw new CommandException("commands.trigger.invalidMode", new Object[] {args[1]});
                             }
 
                             score.increaseScore(i);
@@ -106,18 +102,17 @@
             }
             else
             {
-                throw new CommandException("commands.trigger.invalidObjective", args[0]);
+                throw new CommandException("commands.trigger.invalidObjective", new Object[] {args[0]});
             }
         }
     }
 
-    @Override
     public List<String> getTabCompletions(MinecraftServer server, ICommandSender sender, String[] args, @Nullable BlockPos targetPos)
     {
         if (args.length == 1)
         {
             Scoreboard scoreboard = server.getWorld(0).getScoreboard();
-            List<String> list = Lists.newArrayList();
+            List<String> list = Lists.<String>newArrayList();
 
             for (ScoreObjective scoreobjective : scoreboard.getScoreObjectives())
             {
@@ -127,7 +122,7 @@
                 }
             }
 
-            return getListOfStringsMatchingLastWord(args, list.toArray(new String[list.size()]));
+            return getListOfStringsMatchingLastWord(args, (String[])list.toArray(new String[list.size()]));
         }
         else
         {
